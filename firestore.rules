rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Rules for Account
    match /accounts/{accountId} {
      function isAccountOwner() {
        return request.auth.uid == accountId;
      }

      function isFriend() {
        return request.auth.uid in resource.data.friends;
      }

      allow read: if (isAccountOwner() // Account owner can always read their own data
      								|| (resource.data.privacySetting == 'public')
      								|| (resource.data.privacySetting == 'friends-only' && isFriend()));
                  
      allow write: if isAccountOwner(); // Only the account owner can write to their own data
    }

    // Rules for relatedAccount
    match /accounts/{accountId}/relatedAccounts/{relatedAccountId} {
      allow create, read, write, delete: if request.auth.uid != null; // Only the user can write to their own data
    }
    
    // Rules for AppFeedback
    match /feedback/{accountId} {
      function isAccountOwner() {
        return request.auth.uid == accountId;
      }

      allow create: if isAccountOwner();
      allow read, write: if request.auth.uid != null; // Only logged in users can read and write feedback
      allow delete: if false;
    }
  }
}
