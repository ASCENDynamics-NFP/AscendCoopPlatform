{"version":3,"file":"src_app_modules_listing_listing_module_ts.js","mappings":"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","sources":["./src/app/modules/listing/components/listing-form/listing-form.component.ts","./src/app/modules/listing/components/listing-form/listing-form.component.html","./src/app/modules/listing/listing-routing.module.ts","./src/app/modules/listing/listing.module.ts","./src/app/modules/listing/pages/listing-create/listing-create.page.ts","./src/app/modules/listing/pages/listing-create/listing-create.page.html","./src/app/modules/listing/pages/listing-detail/components/hero/hero.component.ts","./src/app/modules/listing/pages/listing-detail/components/hero/hero.component.html","./src/app/modules/listing/pages/listing-detail/listing-detail.page.ts","./src/app/modules/listing/pages/listing-detail/listing-detail.page.html","./src/app/modules/listing/pages/listing-edit/listing-edit.page.ts","./src/app/modules/listing/pages/listing-edit/listing-edit.page.html","./src/app/modules/listing/pages/listings/listings.page.ts","./src/app/modules/listing/pages/listings/listings.page.html","./src/app/modules/listing/relatedAccount/pages/applicants/applicants.page.ts","./src/app/modules/listing/relatedAccount/pages/applicants/applicants.page.html","./src/app/modules/listing/relatedAccount/pages/applicants/components/applicant-details-modal/applicant-details-modal.component.ts","./src/app/modules/listing/relatedAccount/pages/applicants/components/applicant-details-modal/applicant-details-modal.component.html","./src/app/modules/listing/relatedAccount/pages/apply/apply.page.ts","./src/app/modules/listing/relatedAccount/pages/apply/apply.page.html","./src/app/shared/pipes/format-address.pipe.ts","./src/app/shared/pipes/phone-format.pipe.ts","./src/app/shared/pipes/timestamp.pipe.ts","./src/app/state/effects/listings.effects.ts","./src/app/state/selectors/listings.selectors.ts"],"sourcesContent":["/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\nimport {Component, Input, Output, EventEmitter, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormGroup, Validators, FormArray} from \"@angular/forms\";\nimport {Listing, SkillRequirement} from \"../../../../models/listing.model\";\nimport {Timestamp} from \"firebase/firestore\";\nimport {Store} from \"@ngrx/store\";\nimport {filter, first, switchMap, take, tap} from \"rxjs\";\nimport {selectAuthUser} from \"../../../../state/selectors/auth.selectors\";\nimport * as AccountActions from \"../../../../state/actions/account.actions\";\nimport {Account} from \"../../../../models/account.model\";\nimport {selectAccountById} from \"../../../../state/selectors/account.selectors\";\nimport {AuthUser} from \"../../../../models/auth-user.model\";\n\n@Component({\n  selector: \"app-listing-form\",\n  templateUrl: \"./listing-form.component.html\",\n  styleUrls: [\"./listing-form.component.scss\"],\n})\nexport class ListingFormComponent implements OnInit {\n  @Input() listing: Listing | null = null;\n  @Output() formSubmit = new EventEmitter<any>();\n  currentStep = 1; // Start at the first step\n  authUser: AuthUser | null = null;\n\n  listingForm!: FormGroup;\n  listingTypes = [\"volunteer\", \"job\", \"internship\", \"gig\"];\n  skillLevels = [\"beginner\", \"intermediate\", \"advanced\"];\n\n  constructor(\n    private fb: FormBuilder,\n    private store: Store,\n  ) {\n    this.initForm();\n  }\n\n  private initForm() {\n    this.listingForm = this.fb.group({\n      title: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(100),\n        ],\n      ],\n      description: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(10),\n          Validators.maxLength(1000),\n        ],\n      ],\n      type: [\"volunteer\", Validators.required],\n      organization: [\"\", [Validators.required, Validators.minLength(2)]],\n      remote: [false],\n      timeCommitment: this.fb.group(\n        {\n          hoursPerWeek: [\n            \"\",\n            [Validators.required, Validators.min(1), Validators.max(168)],\n          ],\n          duration: [\"\", Validators.required],\n          schedule: [\"\", Validators.required],\n          startDate: [null, Validators.required],\n          endDate: [null],\n          isFlexible: [false],\n        },\n        {validator: this.dateRangeValidator},\n      ),\n      skills: this.fb.array([]),\n      requirements: this.fb.array([]),\n      responsibilities: this.fb.array([]),\n      benefits: this.fb.array([]),\n      contactInformation: this.fb.group({\n        emails: this.fb.array([]),\n        phoneNumbers: this.fb.array([]),\n        addresses: this.fb.array([]),\n      }),\n    });\n  }\n\n  dateRangeValidator(group: FormGroup) {\n    const start = group.get(\"startDate\")?.value;\n    const end = group.get(\"endDate\")?.value;\n    if (start && end && new Date(start) > new Date(end)) {\n      return {dateRange: true};\n    }\n    return null;\n  }\n\n  ngOnInit() {\n    if (this.listing) {\n      const formValue = {\n        ...this.listing,\n        timeCommitment: {\n          ...this.listing.timeCommitment,\n          startDate: this.listing.timeCommitment.startDate\n            ?.toDate()\n            .toISOString(),\n          endDate: this.listing.timeCommitment.endDate?.toDate().toISOString(),\n        },\n      };\n      this.listingForm.patchValue(formValue);\n      this.initializeFormArrays(this.listing);\n    } else {\n      // New listing - populate from account\n      this.store\n        .select(selectAuthUser)\n        .pipe(\n          first(),\n          tap((user) => {\n            if (user?.uid) {\n              this.store.dispatch(\n                AccountActions.loadAccount({accountId: user.uid}),\n              );\n              this.authUser = user;\n            }\n          }),\n          switchMap((user) => this.store.select(selectAccountById(user!.uid))),\n          filter((account): account is Account => account !== null),\n          take(1),\n        )\n        .subscribe((account) => {\n          // Only call one initialization method\n          this.initializeFormFromAccount(account);\n        });\n    }\n  }\n\n  private initializeFormFromAccount(account: Account) {\n    this.listingForm.patchValue({\n      organization: account.name,\n    });\n\n    // Initialize contact information arrays\n    account.contactInformation?.emails?.forEach((email) => {\n      const emailForm = this.fb.group({\n        name: [email.name],\n        email: [email.email],\n      });\n      (this.listingForm.get(\"contactInformation.emails\") as FormArray).push(\n        emailForm,\n      );\n    });\n\n    account.contactInformation?.phoneNumbers?.forEach((phone) => {\n      const phoneForm = this.fb.group({\n        type: [phone.type],\n        countryCode: [phone.countryCode],\n        number: [phone.number],\n      });\n      (\n        this.listingForm.get(\"contactInformation.phoneNumbers\") as FormArray\n      ).push(phoneForm);\n    });\n\n    account.contactInformation?.addresses?.forEach((address) => {\n      const addressForm = this.fb.group({\n        name: [address?.name],\n        street: [address?.street],\n        city: [address?.city],\n        state: [address?.state],\n        country: [address?.country],\n        zipcode: [address?.zipcode],\n        isPrimaryAddress: [address?.isPrimaryAddress],\n      });\n      (this.listingForm.get(\"contactInformation.addresses\") as FormArray).push(\n        addressForm,\n      );\n    });\n  }\n\n  private markFormGroupTouched(formGroup: FormGroup) {\n    Object.values(formGroup.controls).forEach((control) => {\n      control.markAsTouched();\n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n\n  private initializeFormArrays(listing: Listing) {\n    // Clear existing arrays\n    (this.listingForm.get(\"skills\") as FormArray).clear();\n    (this.listingForm.get(\"requirements\") as FormArray).clear();\n    (this.listingForm.get(\"responsibilities\") as FormArray).clear();\n    (this.listingForm.get(\"benefits\") as FormArray).clear();\n    (this.listingForm.get(\"contactInformation.emails\") as FormArray).clear();\n    (\n      this.listingForm.get(\"contactInformation.phoneNumbers\") as FormArray\n    ).clear();\n    (this.listingForm.get(\"contactInformation.addresses\") as FormArray).clear();\n\n    // Initialize skills\n    listing.skills?.forEach((skill) => {\n      const skillForm = this.fb.group({\n        name: [skill.name, Validators.required],\n        level: [skill.level],\n        required: [skill.required],\n      });\n      (this.listingForm.get(\"skills\") as FormArray).push(skillForm);\n    });\n\n    // Initialize requirements\n    listing.requirements?.forEach((req) => {\n      const control = this.fb.control(req, Validators.required);\n      (this.listingForm.get(\"requirements\") as FormArray).push(control);\n    });\n\n    // Initialize responsibilities\n    listing.responsibilities?.forEach((resp) => {\n      const control = this.fb.control(resp, Validators.required);\n      (this.listingForm.get(\"responsibilities\") as FormArray).push(control);\n    });\n\n    // Initialize benefits\n    listing.benefits?.forEach((benefit) => {\n      const control = this.fb.control(benefit, Validators.required);\n      (this.listingForm.get(\"benefits\") as FormArray).push(control);\n    });\n\n    // Initialize contact information\n    listing.contactInformation?.emails?.forEach((email) => {\n      const emailForm = this.fb.group({\n        name: [email.name],\n        email: [email.email, [Validators.required, Validators.email]],\n      });\n      (this.listingForm.get(\"contactInformation.emails\") as FormArray).push(\n        emailForm,\n      );\n    });\n\n    listing.contactInformation?.phoneNumbers?.forEach((phone) => {\n      const phoneForm = this.fb.group({\n        type: [phone.type],\n        countryCode: [phone.countryCode],\n        number: [phone.number, Validators.required],\n        isEmergencyNumber: [phone.isEmergencyNumber],\n      });\n      (\n        this.listingForm.get(\"contactInformation.phoneNumbers\") as FormArray\n      ).push(phoneForm);\n    });\n\n    listing.contactInformation?.addresses?.forEach((address) => {\n      const addressForm = this.fb.group({\n        name: [address?.name],\n        street: [address?.street],\n        city: [address?.city],\n        state: [address?.state],\n        country: [address?.country],\n        zipcode: [address?.zipcode],\n        isPrimaryAddress: [address?.isPrimaryAddress],\n      });\n      (this.listingForm.get(\"contactInformation.addresses\") as FormArray).push(\n        addressForm,\n      );\n    });\n  }\n\n  addSkill(skill?: SkillRequirement) {\n    const skillForm = this.fb.group({\n      name: [skill?.name || \"\", Validators.required],\n      level: [skill?.level || \"beginner\"],\n      required: [skill?.required || true],\n    });\n    (this.listingForm.get(\"skills\") as FormArray).push(skillForm);\n  }\n\n  addArrayItem(arrayName: string, value: string = \"\") {\n    const control = this.fb.control(value, Validators.required);\n    (this.listingForm.get(arrayName) as FormArray).push(control);\n  }\n\n  addEmail() {\n    const emailForm = this.fb.group({\n      name: [\"\"],\n      email: [\"\", [Validators.required, Validators.email]],\n    });\n    (this.listingForm.get(\"contactInformation.emails\") as FormArray).push(\n      emailForm,\n    );\n  }\n\n  addPhoneNumber() {\n    const phoneForm = this.fb.group({\n      type: [\"Mobile\"],\n      countryCode: [\"+1\"],\n      number: [\"\", Validators.required],\n    });\n    (this.listingForm.get(\"contactInformation.phoneNumbers\") as FormArray).push(\n      phoneForm,\n    );\n  }\n\n  removeArrayItem(arrayName: string, index: number) {\n    (this.listingForm.get(arrayName) as FormArray).removeAt(index);\n  }\n\n  getFormArray(arrayName: string) {\n    return this.listingForm.get(arrayName) as FormArray;\n  }\n\n  private submitForm(status: \"draft\" | \"active\" | \"filled\" | \"expired\") {\n    if (this.listingForm.valid) {\n      this.store\n        .select(selectAuthUser)\n        .pipe(take(1))\n        .subscribe((user) => {\n          const formValue = this.listingForm.value;\n          const listing = {\n            ...formValue,\n            id: this.listing?.id || null,\n            timeCommitment: {\n              ...formValue.timeCommitment,\n              startDate: formValue.timeCommitment.startDate\n                ? Timestamp.fromDate(\n                    new Date(formValue.timeCommitment.startDate),\n                  )\n                : null,\n              endDate: formValue.timeCommitment.endDate\n                ? Timestamp.fromDate(new Date(formValue.timeCommitment.endDate))\n                : null,\n            },\n            status,\n            accountId: user?.uid,\n            iconImage: user?.iconImage || \"\",\n            heroImage: user?.heroImage || \"\",\n            lastModifiedBy: user?.uid,\n          };\n          this.formSubmit.emit(listing);\n        });\n    } else {\n      this.markFormGroupTouched(this.listingForm);\n    }\n  }\n\n  onSubmit() {\n    if (this.listingForm.invalid) {\n      this.listingForm.markAllAsTouched();\n      return;\n    }\n    if (this.listingForm.valid) {\n      // If listing exists, keep current status, otherwise set as draft\n      const status = this.listing?.id ? this.listing.status : \"draft\";\n      this.submitForm(status as \"draft\" | \"active\" | \"filled\" | \"expired\");\n    } else {\n      this.markFormGroupTouched(this.listingForm);\n    }\n  }\n\n  addAddress() {\n    const addressForm = this.fb.group({\n      name: [\"\"],\n      street: [\"\", Validators.required],\n      city: [\"\", Validators.required],\n      state: [\"\", Validators.required],\n      country: [\"\", Validators.required],\n      zipcode: [\n        \"\",\n        [Validators.required, Validators.pattern(\"^[0-9]{5}(?:-[0-9]{4})?$\")],\n      ],\n      isPrimaryAddress: [false],\n    });\n    (this.listingForm.get(\"contactInformation.addresses\") as FormArray).push(\n      addressForm,\n    );\n  }\n\n  goToNextStep() {\n    if (this.listingForm.invalid) {\n      this.listingForm.markAllAsTouched();\n      return;\n    }\n    this.currentStep++;\n  }\n\n  goToPreviousStep() {\n    if (this.currentStep > 1) {\n      this.currentStep--;\n    }\n  }\n\n  getProgress() {\n    return this.currentStep / 2; // Progress value for the progress bar\n  }\n}\n","<!--\nNonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\nCopyright (C) 2023  ASCENDynamics NFP\n\nThis file is part of Nonprofit Social Networking Platform.\n\nNonprofit Social Networking Platform is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nNonprofit Social Networking Platform is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n-->\n<form [formGroup]=\"listingForm\" (ngSubmit)=\"onSubmit()\">\n  <!-- Step 1: Basic Information & Time Commitment -->\n  <ng-container *ngIf=\"currentStep === 1\"\n    ><!-- Basic Information -->\n    <ion-card>\n      <ion-card-header>\n        <ion-card-title>Basic Information</ion-card-title>\n      </ion-card-header>\n      <ion-card-content>\n        <ion-grid>\n          <ion-row>\n            <!-- Title Field -->\n            <ion-col size=\"12\" size-md=\"6\">\n              <ion-input\n                label=\"Title\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                formControlName=\"title\"\n                placeholder=\"Enter position title\"\n                [class.ion-invalid]=\"\n                  listingForm.get('title')?.invalid &&\n                  listingForm.get('title')?.touched\n                \"\n                [class.ion-valid]=\"listingForm.get('title')?.valid\"\n              ></ion-input>\n              <ion-note\n                color=\"danger\"\n                *ngIf=\"\n                  listingForm.get('title')?.invalid &&\n                  listingForm.get('title')?.touched\n                \"\n              >\n                <span *ngIf=\"listingForm.get('title')?.errors?.['required']\">\n                  Title is required.\n                </span>\n                <span *ngIf=\"listingForm.get('title')?.errors?.['minlength']\">\n                  Title must be at least 3 characters.\n                </span>\n                <span *ngIf=\"listingForm.get('title')?.errors?.['maxlength']\">\n                  Title cannot exceed 100 characters.\n                </span>\n              </ion-note>\n            </ion-col>\n\n            <!-- Organization Field -->\n            <ion-col size=\"12\" size-md=\"6\">\n              <ion-input\n                label=\"Organization\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                formControlName=\"organization\"\n                placeholder=\"Enter organization name\"\n                [class.ion-invalid]=\"\n                  listingForm.get('organization')?.invalid &&\n                  listingForm.get('organization')?.touched\n                \"\n                [class.ion-valid]=\"listingForm.get('organization')?.valid\"\n              ></ion-input>\n              <ion-note\n                color=\"danger\"\n                *ngIf=\"\n                  listingForm.get('organization')?.invalid &&\n                  listingForm.get('organization')?.touched\n                \"\n              >\n                <span\n                  *ngIf=\"listingForm.get('organization')?.errors?.['required']\"\n                >\n                  Organization is required.\n                </span>\n                <span\n                  *ngIf=\"listingForm.get('organization')?.errors?.['minlength']\"\n                >\n                  Organization must be at least 2 characters.\n                </span>\n                <span\n                  *ngIf=\"listingForm.get('organization')?.errors?.['maxlength']\"\n                >\n                  Organization cannot exceed 100 characters.\n                </span>\n              </ion-note>\n            </ion-col>\n          </ion-row>\n\n          <ion-row>\n            <!-- Listing Type Field -->\n            <ion-col size=\"12\" size-md=\"6\">\n              <ion-select\n                label=\"Listing Type\"\n                label-placement=\"stacked\"\n                formControlName=\"type\"\n                fill=\"outline\"\n                [class.ion-invalid]=\"\n                  listingForm.get('type')?.invalid &&\n                  listingForm.get('type')?.touched\n                \"\n              >\n                <ion-select-option\n                  *ngFor=\"let type of listingTypes\"\n                  [value]=\"type\"\n                >\n                  {{ type | titlecase }}\n                </ion-select-option>\n              </ion-select>\n              <ion-note\n                color=\"danger\"\n                *ngIf=\"\n                  listingForm.get('type')?.invalid &&\n                  listingForm.get('type')?.touched\n                \"\n              >\n                Listing type is required.\n              </ion-note>\n            </ion-col>\n\n            <!-- Remote Position Toggle -->\n            <ion-col size=\"12\" size-md=\"6\">\n              <ion-item lines=\"none\">\n                <ion-label>Remote Position Available</ion-label>\n                <ion-toggle formControlName=\"remote\"></ion-toggle>\n              </ion-item>\n            </ion-col>\n          </ion-row>\n\n          <!-- Description Field -->\n          <ion-row>\n            <ion-col size=\"12\">\n              <ion-textarea\n                label=\"Description\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                formControlName=\"description\"\n                rows=\"6\"\n                placeholder=\"Describe the role\"\n                [class.ion-invalid]=\"\n                  listingForm.get('description')?.invalid &&\n                  listingForm.get('description')?.touched\n                \"\n              ></ion-textarea>\n              <ion-note\n                color=\"danger\"\n                *ngIf=\"\n                  listingForm.get('description')?.invalid &&\n                  listingForm.get('description')?.touched\n                \"\n              >\n                <span\n                  *ngIf=\"listingForm.get('description')?.errors?.['required']\"\n                >\n                  Description is required.\n                </span>\n                <span\n                  *ngIf=\"listingForm.get('description')?.errors?.['minlength']\"\n                >\n                  Description must be at least 10 characters.\n                </span>\n                <span\n                  *ngIf=\"listingForm.get('description')?.errors?.['maxlength']\"\n                >\n                  Description cannot exceed 1000 characters.\n                </span>\n              </ion-note>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </ion-card-content>\n    </ion-card>\n\n    <!-- Time Commitment -->\n    <ion-card>\n      <ion-card-header>\n        <ion-card-title>Time Commitment</ion-card-title>\n      </ion-card-header>\n      <ion-card-content formGroupName=\"timeCommitment\">\n        <ion-grid>\n          <ion-row>\n            <!-- Hours per Week Field -->\n            <ion-col size=\"12\" size-md=\"6\">\n              <ion-input\n                label=\"Hours per Week\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                type=\"number\"\n                formControlName=\"hoursPerWeek\"\n                placeholder=\"Enter hours (e.g., 20)\"\n                [class.ion-invalid]=\"\n                  listingForm.get('timeCommitment.hoursPerWeek')?.invalid &&\n                  listingForm.get('timeCommitment.hoursPerWeek')?.touched\n                \"\n              ></ion-input>\n              <ion-note\n                color=\"danger\"\n                *ngIf=\"\n                  listingForm.get('timeCommitment.hoursPerWeek')?.invalid &&\n                  listingForm.get('timeCommitment.hoursPerWeek')?.touched\n                \"\n              >\n                <span\n                  *ngIf=\"\n                    listingForm.get('timeCommitment.hoursPerWeek')?.errors?.[\n                      'required'\n                    ]\n                  \"\n                >\n                  Hours per week is required.\n                </span>\n                <span\n                  *ngIf=\"\n                    listingForm.get('timeCommitment.hoursPerWeek')?.errors?.[\n                      'min'\n                    ]\n                  \"\n                >\n                  Minimum is 1 hour.\n                </span>\n                <span\n                  *ngIf=\"\n                    listingForm.get('timeCommitment.hoursPerWeek')?.errors?.[\n                      'max'\n                    ]\n                  \"\n                >\n                  Maximum is 168 hours.\n                </span>\n              </ion-note>\n            </ion-col>\n\n            <!-- Duration Field -->\n            <ion-col size=\"12\" size-md=\"6\">\n              <ion-input\n                label=\"Duration\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                formControlName=\"duration\"\n                placeholder=\"Enter duration (e.g., 6 months)\"\n                [class.ion-invalid]=\"\n                  listingForm.get('timeCommitment.duration')?.invalid &&\n                  listingForm.get('timeCommitment.duration')?.touched\n                \"\n              ></ion-input>\n              <ion-note\n                color=\"danger\"\n                *ngIf=\"\n                  listingForm.get('timeCommitment.duration')?.invalid &&\n                  listingForm.get('timeCommitment.duration')?.touched\n                \"\n              >\n                Duration is required.\n              </ion-note>\n            </ion-col>\n          </ion-row>\n\n          <!-- Schedule Field -->\n          <ion-row>\n            <ion-col>\n              <ion-input\n                label=\"Schedule\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                formControlName=\"schedule\"\n                placeholder=\"Enter schedule (e.g., Mon-Fri, 9am-5pm)\"\n                [class.ion-invalid]=\"\n                  listingForm.get('timeCommitment.schedule')?.invalid &&\n                  listingForm.get('timeCommitment.schedule')?.touched\n                \"\n              ></ion-input>\n              <ion-note\n                color=\"danger\"\n                *ngIf=\"\n                  listingForm.get('timeCommitment.schedule')?.invalid &&\n                  listingForm.get('timeCommitment.schedule')?.touched\n                \"\n              >\n                Schedule is required.\n              </ion-note>\n            </ion-col>\n          </ion-row>\n\n          <!-- Start Date and End Date Fields -->\n          <ion-row>\n            <!-- Start Date Field -->\n            <ion-col size=\"12\" size-md=\"6\">\n              <ion-datetime\n                label=\"Start Date\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                formControlName=\"startDate\"\n                presentation=\"date\"\n                [preferWheel]=\"false\"\n                [class.ion-invalid]=\"\n                  listingForm.get('timeCommitment.startDate')?.invalid &&\n                  listingForm.get('timeCommitment.startDate')?.touched\n                \"\n              ></ion-datetime>\n              <ion-note\n                color=\"danger\"\n                *ngIf=\"\n                  listingForm.get('timeCommitment.startDate')?.invalid &&\n                  listingForm.get('timeCommitment.startDate')?.touched\n                \"\n              >\n                Start date is required.\n              </ion-note>\n            </ion-col>\n\n            <!-- End Date Field -->\n            <ion-col size=\"12\" size-md=\"6\">\n              <ion-datetime\n                label=\"End Date\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                formControlName=\"endDate\"\n                presentation=\"date\"\n                [preferWheel]=\"false\"\n                [class.ion-invalid]=\"\n                  listingForm.get('timeCommitment')?.errors?.['dateRange']\n                \"\n              ></ion-datetime>\n              <ion-note\n                color=\"danger\"\n                *ngIf=\"listingForm.get('timeCommitment')?.errors?.['dateRange']\"\n              >\n                End date must be after start date.\n              </ion-note>\n            </ion-col>\n          </ion-row>\n\n          <!-- Flexible Schedule Toggle -->\n          <ion-row>\n            <ion-col>\n              <ion-item lines=\"none\">\n                <ion-label>Flexible Schedule</ion-label>\n                <ion-toggle formControlName=\"isFlexible\"></ion-toggle>\n              </ion-item>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </ion-card-content>\n    </ion-card>\n  </ng-container>\n\n  <!-- Step 2: Skills, Requirements, Responsibilities, Benefits, Contact Information -->\n  <ng-container *ngIf=\"currentStep === 2\">\n    <!-- Skills -->\n    <ion-card>\n      <ion-card-header>\n        <ion-card-title>Skills</ion-card-title>\n      </ion-card-header>\n      <ion-card-content formArrayName=\"skills\">\n        <div\n          *ngFor=\"let skill of getFormArray('skills').controls; let i = index\"\n          [formGroupName]=\"i\"\n        >\n          <ion-row>\n            <ion-col size=\"6\">\n              <ion-input\n                formControlName=\"name\"\n                label=\"Skill Name\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                placeholder=\"Enter skill\"\n              ></ion-input>\n            </ion-col>\n            <ion-col size=\"3\">\n              <ion-select\n                formControlName=\"level\"\n                label=\"Skill Level\"\n                label-placement=\"stacked\"\n                fill=\"outline\"\n              >\n                <ion-select-option\n                  *ngFor=\"let level of skillLevels\"\n                  [value]=\"level\"\n                >\n                  {{ level | titlecase }}\n                </ion-select-option>\n              </ion-select>\n            </ion-col>\n            <ion-col size=\"2\">\n              <ion-item lines=\"none\">\n                <ion-checkbox formControlName=\"required\"></ion-checkbox>\n                <ion-label>Required</ion-label>\n              </ion-item>\n            </ion-col>\n            <ion-col size=\"1\">\n              <ion-button fill=\"clear\" (click)=\"removeArrayItem('skills', i)\">\n                <ion-icon name=\"trash-outline\"></ion-icon>\n              </ion-button>\n            </ion-col>\n          </ion-row>\n        </div>\n        <ion-button fill=\"clear\" (click)=\"addSkill()\">\n          <ion-icon slot=\"start\" name=\"add-circle-outline\"></ion-icon>\n          Add Skill\n        </ion-button>\n      </ion-card-content>\n    </ion-card>\n\n    <!-- Requirements -->\n    <ion-card>\n      <ion-card-header>\n        <ion-card-title>Requirements</ion-card-title>\n      </ion-card-header>\n      <ion-card-content formArrayName=\"requirements\">\n        <div\n          *ngFor=\"\n            let req of getFormArray('requirements').controls;\n            let i = index\n          \"\n        >\n          <ion-row>\n            <ion-col size=\"10\">\n              <ion-input\n                [formControlName]=\"i\"\n                label=\"Requirement\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                type=\"text\"\n                placeholder=\"Enter requirement\"\n              ></ion-input>\n            </ion-col>\n            <ion-col size=\"2\">\n              <ion-button\n                fill=\"clear\"\n                (click)=\"removeArrayItem('requirements', i)\"\n              >\n                <ion-icon name=\"trash-outline\"></ion-icon>\n              </ion-button>\n            </ion-col>\n          </ion-row>\n        </div>\n        <ion-button fill=\"clear\" (click)=\"addArrayItem('requirements')\">\n          <ion-icon slot=\"start\" name=\"add-circle-outline\"></ion-icon>\n          Add Requirement\n        </ion-button>\n      </ion-card-content>\n    </ion-card>\n\n    <!-- Responsibilities -->\n    <ion-card>\n      <ion-card-header>\n        <ion-card-title>Responsibilities</ion-card-title>\n      </ion-card-header>\n      <ion-card-content formArrayName=\"responsibilities\">\n        <div\n          *ngFor=\"\n            let responsibility of getFormArray('responsibilities').controls;\n            let i = index\n          \"\n        >\n          <ion-row>\n            <ion-col size=\"10\">\n              <ion-input\n                [formControlName]=\"i\"\n                label=\"Responsibility\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                placeholder=\"Enter responsibility\"\n              ></ion-input>\n            </ion-col>\n            <ion-col size=\"2\">\n              <ion-button\n                fill=\"clear\"\n                (click)=\"removeArrayItem('responsibilities', i)\"\n              >\n                <ion-icon name=\"trash-outline\"></ion-icon>\n              </ion-button>\n            </ion-col>\n          </ion-row>\n        </div>\n        <ion-button fill=\"clear\" (click)=\"addArrayItem('responsibilities')\">\n          <ion-icon slot=\"start\" name=\"add-circle-outline\"></ion-icon>\n          Add Responsibility\n        </ion-button>\n      </ion-card-content>\n    </ion-card>\n\n    <!-- Benefits -->\n    <ion-card>\n      <ion-card-header>\n        <ion-card-title>Benefits</ion-card-title>\n      </ion-card-header>\n      <ion-card-content formArrayName=\"benefits\">\n        <div\n          *ngFor=\"\n            let benefit of getFormArray('benefits').controls;\n            let i = index\n          \"\n        >\n          <ion-row>\n            <ion-col size=\"10\">\n              <ion-input\n                [formControlName]=\"i\"\n                label=\"Benefit\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                placeholder=\"Enter benefit\"\n              ></ion-input>\n            </ion-col>\n            <ion-col size=\"2\">\n              <ion-button fill=\"clear\" (click)=\"removeArrayItem('benefits', i)\">\n                <ion-icon name=\"trash-outline\"></ion-icon>\n              </ion-button>\n            </ion-col>\n          </ion-row>\n        </div>\n        <ion-button fill=\"clear\" (click)=\"addArrayItem('benefits')\">\n          <ion-icon slot=\"start\" name=\"add-circle-outline\"></ion-icon>\n          Add Benefit\n        </ion-button>\n      </ion-card-content>\n    </ion-card>\n\n    <!-- Contact Information -->\n    <ion-card>\n      <ion-card-header>\n        <ion-card-title>Contact Information</ion-card-title>\n      </ion-card-header>\n      <ion-card-content formGroupName=\"contactInformation\">\n        <!-- Emails -->\n        <ion-row formArrayName=\"emails\">\n          <ion-col>\n            <ion-item-divider>\n              <ion-label color=\"tertiary\">Emails</ion-label>\n            </ion-item-divider>\n            <div\n              *ngFor=\"\n                let email of getFormArray('contactInformation.emails').controls;\n                let i = index\n              \"\n              [formGroupName]=\"i\"\n            >\n              <ion-row>\n                <ion-col size=\"5\">\n                  <ion-input\n                    formControlName=\"name\"\n                    label=\"Name\"\n                    label-placement=\"floating\"\n                    fill=\"outline\"\n                    placeholder=\"Enter name\"\n                  ></ion-input>\n                </ion-col>\n                <ion-col size=\"5\">\n                  <ion-input\n                    formControlName=\"email\"\n                    label=\"Email\"\n                    label-placement=\"floating\"\n                    fill=\"outline\"\n                    placeholder=\"Enter email\"\n                  ></ion-input>\n                </ion-col>\n                <ion-col size=\"2\">\n                  <ion-button\n                    fill=\"clear\"\n                    (click)=\"removeArrayItem('contactInformation.emails', i)\"\n                  >\n                    <ion-icon name=\"trash-outline\"></ion-icon>\n                  </ion-button>\n                </ion-col>\n              </ion-row>\n            </div>\n            <ion-button fill=\"clear\" (click)=\"addEmail()\">\n              <ion-icon slot=\"start\" name=\"add-circle-outline\"></ion-icon>\n              Add Email\n            </ion-button>\n          </ion-col>\n        </ion-row>\n\n        <!-- Addresses -->\n        <ion-row formArrayName=\"addresses\">\n          <ion-col>\n            <ion-item-divider>\n              <ion-label color=\"tertiary\">Addresses</ion-label>\n            </ion-item-divider>\n            <div\n              *ngFor=\"\n                let address of getFormArray('contactInformation.addresses')\n                  .controls;\n                let i = index\n              \"\n              [formGroupName]=\"i\"\n            >\n              <ion-row>\n                <ion-col>\n                  <ion-input\n                    label=\"Building Name\"\n                    label-placement=\"floating\"\n                    fill=\"outline\"\n                    formControlName=\"name\"\n                    type=\"text\"\n                    placeholder=\"Enter building name\"\n                  ></ion-input>\n                </ion-col>\n              </ion-row>\n              <ion-row>\n                <ion-col>\n                  <ion-input\n                    label=\"Street Address\"\n                    label-placement=\"floating\"\n                    fill=\"outline\"\n                    formControlName=\"street\"\n                    type=\"text\"\n                    placeholder=\"Enter street address\"\n                  ></ion-input>\n                </ion-col>\n              </ion-row>\n              <ion-row>\n                <ion-col size=\"6\">\n                  <ion-input\n                    label=\"City\"\n                    label-placement=\"floating\"\n                    fill=\"outline\"\n                    formControlName=\"city\"\n                    type=\"text\"\n                    placeholder=\"Enter city\"\n                  ></ion-input>\n                </ion-col>\n                <ion-col size=\"6\">\n                  <ion-input\n                    label=\"State\"\n                    label-placement=\"floating\"\n                    fill=\"outline\"\n                    formControlName=\"state\"\n                    type=\"text\"\n                    placeholder=\"Enter state\"\n                  ></ion-input>\n                </ion-col>\n              </ion-row>\n              <ion-row>\n                <ion-col size=\"6\">\n                  <ion-input\n                    label=\"Country\"\n                    label-placement=\"floating\"\n                    fill=\"outline\"\n                    formControlName=\"country\"\n                    type=\"text\"\n                    placeholder=\"Enter country\"\n                  ></ion-input>\n                </ion-col>\n                <ion-col size=\"6\">\n                  <ion-input\n                    label=\"Postal Code\"\n                    label-placement=\"floating\"\n                    fill=\"outline\"\n                    formControlName=\"zipcode\"\n                    type=\"text\"\n                    placeholder=\"Enter postal code\"\n                  ></ion-input>\n                </ion-col>\n              </ion-row>\n              <ion-row>\n                <ion-col>\n                  <ion-item lines=\"none\">\n                    <ion-label>Primary Address</ion-label>\n                    <ion-checkbox\n                      formControlName=\"isPrimaryAddress\"\n                    ></ion-checkbox>\n                  </ion-item>\n                </ion-col>\n                <ion-col size=\"auto\">\n                  <ion-button\n                    fill=\"clear\"\n                    (click)=\"removeArrayItem('contactInformation.addresses', i)\"\n                  >\n                    <ion-icon name=\"trash-outline\"></ion-icon>\n                  </ion-button>\n                </ion-col>\n              </ion-row>\n            </div>\n            <ion-button fill=\"clear\" (click)=\"addAddress()\">\n              <ion-icon slot=\"start\" name=\"add-circle-outline\"></ion-icon>\n              Add Address\n            </ion-button>\n          </ion-col>\n        </ion-row>\n\n        <!-- Phone Numbers -->\n        <ion-row formArrayName=\"phoneNumbers\">\n          <ion-col>\n            <ion-item-divider>\n              <ion-label color=\"tertiary\">Phone Numbers</ion-label>\n            </ion-item-divider>\n            <div\n              *ngFor=\"\n                let phone of getFormArray('contactInformation.phoneNumbers')\n                  .controls;\n                let i = index\n              \"\n              [formGroupName]=\"i\"\n            >\n              <ion-row>\n                <ion-col size=\"2\">\n                  <ion-select\n                    label=\"Type\"\n                    label-placement=\"stacked\"\n                    formControlName=\"type\"\n                    fill=\"outline\"\n                  >\n                    <ion-select-option value=\"Mobile\">Mobile</ion-select-option>\n                    <ion-select-option value=\"Work\">Work</ion-select-option>\n                    <ion-select-option value=\"Home\">Home</ion-select-option>\n                  </ion-select>\n                </ion-col>\n                <ion-col size=\"2\">\n                  <ion-input\n                    label=\"Country Code\"\n                    label-placement=\"floating\"\n                    fill=\"outline\"\n                    formControlName=\"countryCode\"\n                    type=\"text\"\n                  ></ion-input>\n                </ion-col>\n                <ion-col size=\"6\">\n                  <ion-input\n                    label=\"Number\"\n                    label-placement=\"floating\"\n                    fill=\"outline\"\n                    formControlName=\"number\"\n                    type=\"tel\"\n                    placeholder=\"Enter phone number\"\n                  ></ion-input>\n                </ion-col>\n                <ion-col size=\"2\">\n                  <ion-button\n                    fill=\"clear\"\n                    (click)=\"\n                      removeArrayItem('contactInformation.phoneNumbers', i)\n                    \"\n                  >\n                    <ion-icon name=\"trash-outline\"></ion-icon>\n                  </ion-button>\n                </ion-col>\n              </ion-row>\n            </div>\n            <ion-button fill=\"clear\" (click)=\"addPhoneNumber()\">\n              <ion-icon slot=\"start\" name=\"add-circle-outline\"></ion-icon>\n              Add Phone Number\n            </ion-button>\n          </ion-col>\n        </ion-row>\n      </ion-card-content>\n    </ion-card>\n  </ng-container>\n\n  <!-- Navigation Buttons -->\n  <ion-row>\n    <ion-col>\n      <ion-button\n        expand=\"block\"\n        *ngIf=\"currentStep > 1\"\n        (click)=\"goToPreviousStep()\"\n      >\n        Back\n      </ion-button>\n    </ion-col>\n    <ion-col>\n      <ion-button\n        expand=\"block\"\n        *ngIf=\"currentStep < 2\"\n        (click)=\"goToNextStep()\"\n      >\n        Next\n      </ion-button>\n      <ion-button\n        expand=\"block\"\n        color=\"primary\"\n        *ngIf=\"currentStep === 2\"\n        type=\"submit\"\n      >\n        {{ listing?.id ? \"Save Changes\" : \"Save as Draft\" }}\n      </ion-button>\n    </ion-col>\n  </ion-row>\n</form>\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\nimport {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ListingsPage} from \"./pages/listings/listings.page\";\nimport {ListingDetailPage} from \"./pages/listing-detail/listing-detail.page\";\nimport {ListingEditPage} from \"./pages/listing-edit/listing-edit.page\";\nimport {ListingCreatePage} from \"./pages/listing-create/listing-create.page\";\nimport {ApplicantsPage} from \"./relatedAccount/pages/applicants/applicants.page\";\nimport {ApplyPage} from \"./relatedAccount/pages/apply/apply.page\";\nimport {AuthGuard} from \"../../core/guards/auth.guard\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ListingsPage,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: \"create\",\n    component: ListingCreatePage,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: \":id\",\n    component: ListingDetailPage,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: \":id/applicants\",\n    component: ApplicantsPage,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: \":id/apply\",\n    component: ApplyPage,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: \":id/edit\",\n    component: ListingEditPage,\n    canActivate: [AuthGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListingRoutingModule {}\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {IonicModule} from \"@ionic/angular\";\nimport {StoreModule} from \"@ngrx/store\";\nimport {EffectsModule} from \"@ngrx/effects\";\nimport {ListingsPage} from \"./pages/listings/listings.page\";\nimport {ListingRoutingModule} from \"./listing-routing.module\";\nimport {listingsReducer} from \"../../state/reducers/listings.reducer\";\nimport {ListingsEffects} from \"../../state/effects/listings.effects\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {RouterModule} from \"@angular/router\";\nimport {ListingDetailPage} from \"./pages/listing-detail/listing-detail.page\";\nimport {ListingEditPage} from \"./pages/listing-edit/listing-edit.page\";\nimport {ListingCreatePage} from \"./pages/listing-create/listing-create.page\";\nimport {TimestampPipe} from \"../../shared/pipes/timestamp.pipe\";\nimport {ListingFormComponent} from \"./components/listing-form/listing-form.component\";\nimport {FormatAddressPipe} from \"../../shared/pipes/format-address.pipe\";\nimport {HeroComponent} from \"./pages/listing-detail/components/hero/hero.component\";\nimport {ApplicantsPage} from \"./relatedAccount/pages/applicants/applicants.page\";\nimport {PhoneFormatPipe} from \"../../shared/pipes/phone-format.pipe\";\nimport {SharedModule} from \"../../shared/shared.module\";\nimport {ApplyPage} from \"./relatedAccount/pages/apply/apply.page\";\nimport {ApplicantDetailsModalComponent} from \"./relatedAccount/pages/applicants/components/applicant-details-modal/applicant-details-modal.component\";\n\n@NgModule({\n  declarations: [\n    ApplicantsPage,\n    ApplyPage,\n    ListingsPage,\n    ListingCreatePage,\n    ListingDetailPage,\n    ListingEditPage,\n    TimestampPipe,\n    ListingFormComponent,\n    FormatAddressPipe,\n    PhoneFormatPipe,\n    HeroComponent,\n    ApplicantDetailsModalComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule,\n    ReactiveFormsModule,\n    ListingRoutingModule,\n    SharedModule,\n    StoreModule.forFeature(\"listings\", listingsReducer),\n    EffectsModule.forFeature([ListingsEffects]),\n  ],\n})\nexport class ListingModule {}\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\nimport {Component} from \"@angular/core\";\nimport {Store} from \"@ngrx/store\";\nimport {first} from \"rxjs/operators\";\nimport * as ListingActions from \"../../../../state/actions/listings.actions\";\nimport {selectAuthUser} from \"../../../../state/selectors/auth.selectors\";\nimport {MetaService} from \"../../../../core/services/meta.service\";\n\n@Component({\n  selector: \"app-listing-create\",\n  templateUrl: \"./listing-create.page.html\",\n  styleUrls: [\"./listing-create.page.scss\"],\n})\nexport class ListingCreatePage {\n  constructor(\n    private metaService: MetaService,\n    private store: Store,\n  ) {}\n\n  ionViewWillEnter() {\n    // Default Meta Tags\n    this.metaService.updateMetaTags(\n      \"Create Listing | ASCENDynamics NFP\",\n      \"Create listing details to reach the right audience on ASCENDynamics NFP.\",\n      \"listing, create, volunteer, nonprofits\",\n      {\n        title: \"Create Listing | ASCENDynamics NFP\",\n        description: \"Create a listing to enhance visibility and engagement.\",\n        url: \"https://app.ASCENDynamics.org/listings\",\n        image: \"https://app.ASCENDynamics.org/assets/icon/logo.png\",\n      },\n      {\n        card: \"summary_large_image\",\n        title: \"Create Listing\",\n        description:\n          \"Create your listing on ASCENDynamics NFP to reach a wider audience.\",\n        image: \"https://app.ASCENDynamics.org/assets/icon/logo.png\",\n      },\n    );\n  }\n\n  onSubmit(formValue: any) {\n    this.store\n      .select(selectAuthUser)\n      .pipe(first())\n      .subscribe((user) => {\n        if (user) {\n          const listing = {\n            ...formValue,\n            createdBy: user.uid,\n          };\n          this.store.dispatch(ListingActions.createListing({listing}));\n        }\n      });\n  }\n}\n","<!--\nNonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\nCopyright (C) 2023  ASCENDynamics NFP\n\nThis file is part of Nonprofit Social Networking Platform.\n\nNonprofit Social Networking Platform is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nNonprofit Social Networking Platform is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n-->\n<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title>Create New Listing</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <app-listing-form (formSubmit)=\"onSubmit($event)\"></app-listing-form>\n</ion-content>\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\nimport {Component, Input} from \"@angular/core\";\nimport {Listing} from \"../../../../../../models/listing.model\";\nimport {serverTimestamp} from \"firebase/firestore\";\nimport * as ListingsActions from \"../../../../../../state/actions/listings.actions\";\nimport {AppState} from \"../../../../../../state/app.state\";\nimport {Store} from \"@ngrx/store\";\n\n@Component({\n  selector: \"app-hero\",\n  templateUrl: \"./hero.component.html\",\n  styleUrls: [\"./hero.component.scss\"],\n})\nexport class HeroComponent {\n  @Input() listing!: Listing;\n  @Input() isOwner: boolean = false;\n  @Input() showButtons: boolean = true;\n\n  constructor(private store: Store<AppState>) {}\n\n  getCities(): string {\n    if (this.listing.remote) {\n      return \"Remote\";\n    }\n\n    const addresses = this.listing.contactInformation?.addresses;\n    if (!addresses || addresses.length === 0) {\n      return \"No locations available\";\n    }\n\n    return addresses\n      .map((address) => `${address?.city}, ${address?.country}`)\n      .join(\", \");\n  }\n\n  togglePublishStatus() {\n    if (this.listing) {\n      const newStatus = this.listing.status === \"active\" ? \"draft\" : \"active\";\n      const updatedListing = {\n        ...this.listing,\n        status: newStatus,\n        lastModifiedAt: serverTimestamp(),\n      } as Listing;\n      this.store.dispatch(\n        ListingsActions.updateListing({listing: updatedListing}),\n      );\n    }\n  }\n\n  // async deleteListing() {\n  //   const alert = await this.alertController.create({\n  //     header: \"Confirm Deletion\",\n  //     message: \"Are you sure you want to delete this listing?\",\n  //     buttons: [\n  //       {\n  //         text: \"Cancel\",\n  //         role: \"cancel\",\n  //       },\n  //       {\n  //         text: \"Delete\",\n  //         role: \"destructive\",\n  //         handler: () => {\n  //           if (this.listingId) {\n  //             this.store.dispatch(\n  //               ListingsActions.deleteListing({id: this.listingId}),\n  //             );\n  //           }\n  //         },\n  //       },\n  //     ],\n  //   });\n\n  //   await alert.present();\n  // }\n}\n","<!--\nNonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\nCopyright (C) 2023  ASCENDynamics NFP\n\nThis file is part of Nonprofit Social Networking Platform.\n\nNonprofit Social Networking Platform is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nNonprofit Social Networking Platform is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n-->\n<div class=\"header-image\">\n  <img\n    [src]=\"listing.heroImage || 'assets/image/orghero.png'\"\n    alt=\"Header Background\"\n  />\n</div>\n\n<div class=\"listing-header\">\n  <div class=\"listing-info\">\n    <div class=\"title-section\">\n      <div class=\"hero-image-small\" *ngIf=\"listing.iconImage\">\n        <img [src]=\"listing.iconImage\" alt=\"Listing Hero\" />\n      </div>\n      <div class=\"title-content\">\n        <h2>{{ listing.title }}</h2>\n        <h3>{{ listing.organization }}</h3>\n      </div>\n    </div>\n\n    <div class=\"details-icons\">\n      <div class=\"detail-item\">\n        <ion-icon name=\"heart-outline\" color=\"primary\"></ion-icon>\n        <span>{{ listing.type | titlecase }}</span>\n      </div>\n      <div class=\"detail-item\">\n        <ion-icon\n          [name]=\"listing.remote ? 'cloud-outline' : 'business-outline'\"\n          color=\"primary\"\n        ></ion-icon>\n        <span>{{ listing.remote ? \"Remote\" : \"On-site\" }}</span>\n      </div>\n      <div class=\"detail-item\">\n        <ion-icon name=\"location-outline\" color=\"primary\"></ion-icon>\n        <span>{{ getCities() }}</span>\n      </div>\n      <div class=\"detail-item\">\n        <ion-icon name=\"time-outline\" color=\"primary\"></ion-icon>\n        <span>{{ listing.timeCommitment.hoursPerWeek }} hrs/week</span>\n      </div>\n      <div class=\"detail-item\">\n        <ion-icon name=\"briefcase-outline\" color=\"primary\"></ion-icon>\n        <span>{{ listing.status | titlecase }}</span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"listing-actions\" *ngIf=\"showButtons\">\n    <ion-button\n      *ngIf=\"!isOwner\"\n      fill=\"outline\"\n      [disabled]=\"listing.status !== 'active'\"\n      [routerLink]=\"['/listings', listing.id, 'apply']\"\n    >\n      Apply Now\n    </ion-button>\n    <ion-button\n      *ngIf=\"isOwner\"\n      fill=\"outline\"\n      size=\"small\"\n      [routerLink]=\"['/listings', listing.id, 'applicants']\"\n    >\n      <ion-icon name=\"people-outline\"></ion-icon> View Applicants\n    </ion-button>\n    <ion-button *ngIf=\"isOwner\" (click)=\"togglePublishStatus()\" color=\"primary\">\n      <ion-icon\n        [name]=\"\n          listing.status === 'active'\n            ? 'pencil-outline'\n            : 'cloud-upload-outline'\n        \"\n        slot=\"start\"\n      ></ion-icon>\n      {{ listing.status === \"active\" ? \"Unpublish\" : \"Publish\" }} Listing\n    </ion-button>\n    <ion-button\n      *ngIf=\"isOwner\"\n      fill=\"outline\"\n      size=\"small\"\n      [routerLink]=\"['/listings', listing.id, 'edit']\"\n    >\n      <ion-icon name=\"pencil-outline\"></ion-icon> Edit\n    </ion-button>\n  </div>\n</div>\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\n// src/app/modules/listings/pages/listing-detail/listing-detail.page.ts\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Store} from \"@ngrx/store\";\nimport {Observable, Subscription, combineLatest} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\nimport {Listing} from \"../../../../models/listing.model\";\nimport * as ListingsActions from \"../../../../state/actions/listings.actions\";\nimport {selectAuthUser} from \"../../../../state/selectors/auth.selectors\";\nimport {AppState} from \"../../../../state/app.state\";\nimport {selectListingById} from \"../../../../state/selectors/listings.selectors\";\nimport {MetaService} from \"../../../../core/services/meta.service\";\n\n@Component({\n  selector: \"app-listing-detail\",\n  templateUrl: \"./listing-detail.page.html\",\n  styleUrls: [\"./listing-detail.page.scss\"],\n})\nexport class ListingDetailPage implements OnInit {\n  private subscription: Subscription | null = null;\n  listing$: Observable<Listing | undefined>;\n  isOwner$: Observable<boolean>;\n  private listingId: string;\n\n  constructor(\n    private metaService: MetaService,\n    private store: Store<AppState>,\n    private route: ActivatedRoute,\n  ) {\n    this.listingId = this.route.snapshot.paramMap.get(\"id\") || \"\";\n    this.listing$ = this.store.select(selectListingById(this.listingId));\n\n    // Determine if current user is the listing creator\n    this.isOwner$ = combineLatest([\n      this.store.select(selectAuthUser),\n      this.listing$,\n    ]).pipe(\n      map(\n        ([user, listing]) =>\n          !!(user && listing && listing.createdBy === user.uid),\n      ),\n    );\n  }\n\n  ngOnInit() {\n    if (this.listingId) {\n      this.store.dispatch(\n        ListingsActions.loadListingById({id: this.listingId}),\n      );\n    }\n  }\n\n  ionViewWillEnter() {\n    this.subscription = this.listing$.subscribe({\n      next: (listing) => {\n        if (listing) {\n          const benefitsText = listing.benefits\n            ? listing.benefits.join(\", \")\n            : \"Explore unique benefits tailored to this opportunity\";\n          const skillsText =\n            listing.skills && listing.skills.length > 0\n              ? listing.skills.map((skill) => skill.name).join(\", \")\n              : \"No specific skills required, just bring your enthusiasm!\";\n\n          this.metaService.updateMetaTags(\n            `${listing.title} | ASCENDynamics NFP`,\n            `Join ${listing.organization} as a ${listing.type}. Responsibilities include ${listing.responsibilities.join(\", \")}. Skills required: ${skillsText}. Benefits include: ${benefitsText}.`,\n            `listing, volunteer, ${listing.type}, ${skillsText}`,\n            {\n              title: `${listing.title} | ASCENDynamics NFP`,\n              description: `Explore the ${listing.type} opportunity at ${listing.organization}. ${listing.description}`,\n              url: `https://app.ASCENDynamics.org/listing/${listing.id}`,\n              image:\n                listing.heroImage ||\n                listing.iconImage ||\n                \"https://app.ASCENDynamics.org/assets/icon/logo.png\",\n            },\n            {\n              card: \"summary_large_image\",\n              title: listing.title,\n              description: listing.description,\n              image:\n                listing.heroImage ||\n                listing.iconImage ||\n                \"https://app.ASCENDynamics.org/assets/icon/logo.png\",\n            },\n          );\n        }\n      },\n      error: (error) => {\n        const listingId = this.route.snapshot.paramMap.get(\"id\");\n        this.metaService.updateMetaTags(\n          \"Discover Opportunities | ASCENDynamics NFP\",\n          \"Explore a variety of opportunities to contribute and grow your skills. Join our community today!\",\n          \"volunteer, nonprofits, community, opportunities\",\n          {\n            title: \"Discover Opportunities | ASCENDynamics NFP\",\n            description:\n              \"Explore a variety of opportunities to contribute and grow your skills. Join our community today!\",\n            url: `https://app.ASCENDynamics.org/listing/${listingId}`,\n            image: \"https://app.ASCENDynamics.org/assets/icon/logo.png\",\n          },\n          {\n            card: \"summary_large_image\",\n            title: \"Discover Opportunities\",\n            description:\n              \"Explore a variety of opportunities to contribute and grow your skills. Join our community today!\",\n            image: \"https://app.ASCENDynamics.org/assets/icon/logo.png\",\n          },\n        );\n      },\n    });\n  }\n\n  ionViewWillLeave() {\n    // Unsubscribe when leaving the page to prevent memory leaks\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n  }\n}\n","<!--\nNonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\nCopyright (C) 2023  ASCENDynamics NFP\n\nThis file is part of Nonprofit Social Networking Platform.\n\nNonprofit Social Networking Platform is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nNonprofit Social Networking Platform is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n-->\n<ion-header>\n  <app-header title=\"Listing Details\" defaultHref=\"/listings\"></app-header>\n</ion-header>\n\n<ion-content>\n  <ng-container *ngIf=\"listing$ | async as listing\">\n    <app-hero\n      [listing]=\"listing\"\n      [isOwner]=\"(isOwner$ | async) ?? false\"\n    ></app-hero>\n\n    <ion-grid>\n      <!-- Full-Width Sections -->\n      <ion-row>\n        <ion-col size=\"12\">\n          <!-- Description Card -->\n          <ion-card>\n            <ion-card-header>\n              <ion-icon\n                name=\"information-circle-outline\"\n                slot=\"start\"\n              ></ion-icon>\n              <ion-card-title>Description</ion-card-title>\n            </ion-card-header>\n            <ion-card-content>\n              <div class=\"info-block\">\n                <p>{{ listing.description }}</p>\n              </div>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n        <ion-col size=\"12\">\n          <!-- Responsibilities Card -->\n          <ion-card *ngIf=\"listing.responsibilities?.length\">\n            <ion-card-header>\n              <ion-icon name=\"list-outline\" slot=\"start\"></ion-icon>\n              <ion-card-title>Responsibilities</ion-card-title>\n            </ion-card-header>\n            <ion-card-content>\n              <div class=\"info-block\">\n                <div\n                  *ngFor=\"let responsibility of listing.responsibilities\"\n                  class=\"list-item\"\n                >\n                  <ion-icon name=\"arrow-forward-circle-outline\"></ion-icon>\n                  <span>{{ responsibility }}</span>\n                </div>\n              </div>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n        <ion-col size=\"12\">\n          <!-- Requirements Card -->\n          <ion-card *ngIf=\"listing.requirements?.length\">\n            <ion-card-header>\n              <ion-icon name=\"warning-outline\" slot=\"start\"></ion-icon>\n              <ion-card-title>Requirements</ion-card-title>\n            </ion-card-header>\n            <ion-card-content>\n              <div class=\"info-block\">\n                <div\n                  *ngFor=\"let requirement of listing.requirements\"\n                  class=\"list-item\"\n                >\n                  <ion-icon name=\"checkmark-circle-outline\"></ion-icon>\n                  <span>{{ requirement }}</span>\n                </div>\n              </div>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n        <ion-col size=\"12\">\n          <!-- Benefits Card -->\n          <ion-card *ngIf=\"listing.benefits?.length\">\n            <ion-card-header>\n              <ion-icon name=\"gift-outline\" slot=\"start\"></ion-icon>\n              <ion-card-title>Benefits</ion-card-title>\n            </ion-card-header>\n            <ion-card-content>\n              <div class=\"info-block\">\n                <div *ngFor=\"let benefit of listing.benefits\" class=\"list-item\">\n                  <ion-icon name=\"star-outline\"></ion-icon>\n                  <span>{{ benefit }}</span>\n                </div>\n              </div>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n      </ion-row>\n\n      <!-- Half-Width Sections -->\n      <ion-row>\n        <ion-col size=\"12\" size-md=\"6\">\n          <!-- Skills Card -->\n          <ion-card *ngIf=\"listing.skills?.length\">\n            <ion-card-header>\n              <ion-icon name=\"ribbon-outline\" slot=\"start\"></ion-icon>\n              <ion-card-title>Skills</ion-card-title>\n            </ion-card-header>\n            <ion-card-content>\n              <div class=\"info-block\">\n                <div *ngFor=\"let skill of listing.skills\" class=\"skill-item\">\n                  <span class=\"skill-name\">{{ skill.name }}</span>\n                  <ion-badge color=\"tertiary\"\n                    >{{ skill.level | titlecase }}</ion-badge\n                  >\n                  <ion-badge *ngIf=\"skill.required\" color=\"primary\"\n                    >Required</ion-badge\n                  >\n                </div>\n              </div>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n        <ion-col size=\"12\" size-md=\"6\">\n          <!-- Time Commitment Card -->\n          <ion-card>\n            <ion-card-header>\n              <ion-icon name=\"time-outline\" slot=\"start\"></ion-icon>\n              <ion-card-title>Time Commitment</ion-card-title>\n            </ion-card-header>\n            <ion-card-content>\n              <div class=\"info-block\">\n                <div class=\"time-item\">\n                  <ion-icon name=\"hourglass-outline\"></ion-icon>\n                  <span\n                    >{{ listing.timeCommitment.hoursPerWeek }} hours/week</span\n                  >\n                </div>\n                <div class=\"time-item\">\n                  <ion-icon name=\"calendar-outline\"></ion-icon>\n                  <span>Duration: {{ listing.timeCommitment.duration }}</span>\n                </div>\n                <div class=\"time-item\">\n                  <ion-icon name=\"alarm-outline\"></ion-icon>\n                  <span>Schedule: {{ listing.timeCommitment.schedule }}</span>\n                </div>\n                <div\n                  class=\"time-item\"\n                  *ngIf=\"listing.timeCommitment.isFlexible\"\n                >\n                  <ion-icon name=\"calendar-clear-outline\"></ion-icon>\n                  <span>Flexible Schedule Available</span>\n                  <ion-badge color=\"success\">Flexible</ion-badge>\n                </div>\n              </div>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n        <ion-col size=\"12\" size-md=\"6\">\n          <!-- Location Card -->\n          <ion-card\n            *ngIf=\"listing.contactInformation?.addresses?.length || listing.remote\"\n          >\n            <ion-card-header>\n              <ion-icon name=\"location-outline\" slot=\"start\"></ion-icon>\n              <ion-card-title>Location</ion-card-title>\n            </ion-card-header>\n            <ion-card-content>\n              <div class=\"info-block\">\n                <div\n                  *ngFor=\"let address of listing.contactInformation?.addresses\"\n                  class=\"location-item\"\n                >\n                  <p>{{ address?.name }}</p>\n                  <p>{{ address?.street }}</p>\n                  <p>{{ address?.city }}, {{ address?.state }}</p>\n                  <p>{{ address?.country }} {{ address?.zipcode }}</p>\n                  <ion-badge *ngIf=\"address?.isPrimaryAddress\" color=\"primary\"\n                    >Primary Location</ion-badge\n                  >\n                </div>\n                <ion-badge *ngIf=\"listing.remote\" color=\"success\"\n                  >Remote Available</ion-badge\n                >\n              </div>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n        <ion-col size=\"12\" size-md=\"6\">\n          <!-- Contact Information Card -->\n          <ion-card\n            *ngIf=\"listing.contactInformation?.emails?.length || listing.contactInformation?.phoneNumbers?.length\"\n          >\n            <ion-card-header>\n              <ion-icon name=\"call-outline\" slot=\"start\"></ion-icon>\n              <ion-card-title>Contact Information</ion-card-title>\n            </ion-card-header>\n            <ion-card-content>\n              <div class=\"info-block\">\n                <div\n                  *ngFor=\"let email of listing.contactInformation?.emails\"\n                  class=\"contact-item\"\n                >\n                  <ion-icon name=\"mail-outline\"></ion-icon>\n                  <span>{{ email.email }}</span>\n                </div>\n                <div\n                  *ngFor=\"let phone of listing.contactInformation?.phoneNumbers\"\n                  class=\"contact-item\"\n                >\n                  <ion-icon name=\"call-outline\"></ion-icon>\n                  <span>{{ phone.countryCode }} {{ phone.number }}</span>\n                  <ion-badge color=\"medium\">{{ phone.type }}</ion-badge>\n                </div>\n              </div>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </ng-container>\n</ion-content>\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\n// src/app/modules/listings/pages/listing-edit/listing-edit.page.ts\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Store} from \"@ngrx/store\";\nimport {combineLatest, map, Observable, of, tap} from \"rxjs\";\nimport {Listing} from \"../../../../models/listing.model\";\nimport * as ListingsActions from \"../../../../state/actions/listings.actions\";\nimport {selectAuthUser} from \"../../../../state/selectors/auth.selectors\";\nimport {AppState} from \"../../../../state/app.state\";\nimport {selectListingById} from \"../../../../state/selectors/listings.selectors\";\nimport {AuthUser} from \"../../../../models/auth-user.model\";\nimport {MetaService} from \"../../../../core/services/meta.service\";\n\n@Component({\n  selector: \"app-listing-edit\",\n  templateUrl: \"./listing-edit.page.html\",\n  styleUrls: [\"./listing-edit.page.scss\"],\n})\nexport class ListingEditPage implements OnInit {\n  authUser$: Observable<AuthUser | null>;\n  listing$: Observable<Listing | null>;\n  isOwner$: Observable<boolean>;\n  listingId: string | null;\n\n  constructor(\n    private metaService: MetaService,\n    private store: Store<AppState>,\n    private route: ActivatedRoute,\n    private router: Router,\n  ) {\n    this.authUser$ = this.store.select(selectAuthUser);\n    this.listingId = this.route.snapshot.paramMap.get(\"id\");\n    this.listing$ = this.listingId\n      ? this.store\n          .select(selectListingById(this.listingId))\n          .pipe(map((listing) => listing || null)) // Map undefined to null\n      : of(null);\n    this.isOwner$ = combineLatest([this.authUser$, this.listing$]).pipe(\n      map(\n        ([user, listing]) =>\n          !!(user && listing && listing.createdBy === user.uid),\n      ),\n      tap((isOwner) => {\n        if (!isOwner) {\n          this.router.navigate([\"/listings\"]);\n        }\n      }),\n    );\n  }\n\n  ngOnInit() {\n    if (this.listingId) {\n      this.store.dispatch(\n        ListingsActions.loadListingById({id: this.listingId}),\n      );\n    }\n  }\n\n  ionViewWillEnter() {\n    // Default Meta Tags\n    this.metaService.updateMetaTags(\n      \"Edit Listing | ASCENDynamics NFP\",\n      \"Modify your listing details to reach the right audience on ASCENDynamics NFP.\",\n      \"listing, edit, volunteer, nonprofits\",\n      {\n        title: \"Edit Listing | ASCENDynamics NFP\",\n        description:\n          \"Make updates to your listing to enhance visibility and engagement.\",\n        url: \"https://app.ASCENDynamics.org/listings\",\n        image: \"https://app.ASCENDynamics.org/assets/icon/logo.png\",\n      },\n      {\n        card: \"summary_large_image\",\n        title: \"Edit Listing\",\n        description:\n          \"Update your listing on ASCENDynamics NFP to reach a wider audience.\",\n        image: \"https://app.ASCENDynamics.org/assets/icon/logo.png\",\n      },\n    );\n  }\n\n  onSubmit(listing: Listing) {\n    if (this.listingId) {\n      this.store.dispatch(ListingsActions.updateListing({listing: listing}));\n    }\n  }\n}\n","<!--\nNonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\nCopyright (C) 2023  ASCENDynamics NFP\n\nThis file is part of Nonprofit Social Networking Platform.\n\nNonprofit Social Networking Platform is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nNonprofit Social Networking Platform is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n-->\n<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title>Edit Listing</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <app-listing-form\n    [listing]=\"listing$ | async\"\n    (formSubmit)=\"onSubmit($event)\"\n  >\n  </app-listing-form>\n</ion-content>\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\n// src/app/modules/listing/pages/listings/listings.page.ts\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {Store} from \"@ngrx/store\";\nimport {Observable, BehaviorSubject, combineLatest, map} from \"rxjs\";\nimport {NavController} from \"@ionic/angular\";\nimport {Listing} from \"../../../../models/listing.model\";\nimport * as ListingsActions from \"../../../../state/actions/listings.actions\";\nimport {AppState} from \"../../../../state/app.state\";\nimport {\n  selectFilteredListings,\n  selectLoading,\n  selectError,\n} from \"../../../../state/selectors/listings.selectors\";\nimport {AuthUser} from \"../../../../models/auth-user.model\";\nimport {selectAuthUser} from \"../../../../state/selectors/auth.selectors\";\nimport {MetaService} from \"../../../../core/services/meta.service\";\n\n@Component({\n  selector: \"app-listings\",\n  templateUrl: \"./listings.page.html\",\n  styleUrls: [\"./listings.page.scss\"],\n})\nexport class ListingsPage implements OnInit {\n  listings$: Observable<Listing[]>;\n  paginatedListings$: Observable<Listing[]>;\n  loading$: Observable<boolean>;\n  error$: Observable<string | null>;\n  authUser$: Observable<AuthUser | null>;\n  listingTypes = [\"all\", \"volunteer\", \"job\", \"internship\", \"gig\"];\n\n  // Pagination State\n  pageSize = 10;\n  currentPageSubject = new BehaviorSubject<number>(1);\n  currentPage$ = this.currentPageSubject.asObservable();\n  totalItems$: Observable<number>;\n  totalPages$: Observable<number>;\n\n  constructor(\n    private metaService: MetaService,\n    private navCtrl: NavController,\n    private store: Store<AppState>,\n  ) {\n    this.authUser$ = this.store.select(selectAuthUser);\n    this.listings$ = this.store.select(selectFilteredListings);\n    this.loading$ = this.store.select(selectLoading);\n    this.error$ = this.store.select(selectError);\n\n    // Calculate total items dynamically\n    this.totalItems$ = this.listings$.pipe(map((listings) => listings.length));\n\n    // Calculate total pages\n    this.totalPages$ = this.totalItems$.pipe(\n      map((totalItems) => Math.ceil(totalItems / this.pageSize)),\n    );\n\n    // Paginate listings\n    this.paginatedListings$ = combineLatest([\n      this.listings$,\n      this.currentPage$,\n    ]).pipe(\n      map(([listings, currentPage]) => {\n        const startIndex = (currentPage - 1) * this.pageSize;\n        return listings.slice(startIndex, startIndex + this.pageSize);\n      }),\n    );\n  }\n\n  ionViewWillEnter() {\n    this.metaService.updateMetaTags(\n      \"Volunteer Listings | ASCENDynamics NFP\",\n      \"Explore volunteering opportunities available on ASCENDynamics NFP to make an impact in your community.\",\n      \"volunteer listings, nonprofits, opportunities, community impact\",\n      {\n        title: \"Volunteer Listings | ASCENDynamics NFP\",\n        description:\n          \"Browse and apply for volunteer roles on ASCENDynamics NFP.\",\n        url: \"https://app.ASCENDynamics.org/listings\",\n        image: \"https://app.ASCENDynamics.org/assets/icon/logo.png\",\n      },\n      {\n        card: \"summary\",\n        title: \"Volunteer Listings | ASCENDynamics NFP\",\n        description:\n          \"Find opportunities to contribute and grow your skills with ASCENDynamics NFP.\",\n        image: \"https://app.ASCENDynamics.org/assets/icon/logo.png\",\n      },\n    );\n  }\n\n  ngOnInit() {\n    this.loadListings();\n  }\n\n  loadListings() {\n    this.store.dispatch(ListingsActions.loadListings());\n  }\n\n  createListing() {\n    this.navCtrl.navigateForward(\"/listings/create\");\n  }\n\n  viewListing(id: string) {\n    this.navCtrl.navigateForward(`/listings/${id}`);\n  }\n\n  filterListings(event: any) {\n    const listingType = event.detail.value;\n    this.store.dispatch(ListingsActions.filterListings({listingType}));\n  }\n\n  searchListings(event: any) {\n    const query = event.detail.value;\n    this.store.dispatch(ListingsActions.searchListings({query}));\n  }\n\n  doRefresh(event: any) {\n    this.loadListings();\n    setTimeout(() => {\n      event.target.complete();\n    }, 1000);\n  }\n\n  getListingLocation(listing: Listing): string {\n    const primaryAddress = listing.contactInformation?.addresses?.[0];\n    if (primaryAddress) {\n      return `${primaryAddress.city}, ${primaryAddress.country}`;\n    }\n    return \"Location not specified\";\n  }\n\n  getIconForType(type: string): string {\n    const iconMap: Record<string, string> = {\n      volunteer: \"people-outline\",\n      job: \"briefcase-outline\",\n      event: \"calendar-outline\",\n      project: \"construct-outline\",\n      resource: \"library-outline\",\n      service: \"hand-right-outline\",\n      all: \"apps-outline\",\n      internship: \"school-outline\",\n      gig: \"flash-outline\",\n    };\n\n    return iconMap[type.toLowerCase()] || \"help-outline\";\n  }\n\n  goToPage(pageNumber: number) {\n    this.currentPageSubject.next(pageNumber);\n  }\n}\n","<!--\nNonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\nCopyright (C) 2023  ASCENDynamics NFP\n\nThis file is part of Nonprofit Social Networking Platform.\n\nNonprofit Social Networking Platform is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nNonprofit Social Networking Platform is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n-->\n\n<ion-header>\n  <app-header title=\"Listings\"></app-header>\n  <ion-toolbar>\n    <ion-searchbar (ionInput)=\"searchListings($event)\"></ion-searchbar>\n  </ion-toolbar>\n\n  <ion-toolbar>\n    <ion-segment scrollable (ionChange)=\"filterListings($event)\">\n      <ion-segment-button *ngFor=\"let type of listingTypes\" [value]=\"type\">\n        <ion-icon [name]=\"getIconForType(type)\"></ion-icon>\n        <ion-label>{{type | titlecase}}</ion-label>\n      </ion-segment-button>\n    </ion-segment>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-header> </ion-header>\n\n  <ion-refresher slot=\"fixed\" (ionRefresh)=\"doRefresh($event)\">\n    <ion-refresher-content></ion-refresher-content>\n  </ion-refresher>\n\n  <ng-container *ngIf=\"loading$ | async\">\n    <ion-skeleton-text animated></ion-skeleton-text>\n  </ng-container>\n\n  <ng-container *ngIf=\"error$ | async as error\">\n    <ion-text color=\"danger\">\n      <p>{{ error }}</p>\n    </ion-text>\n  </ng-container>\n\n  <ion-list>\n    <ion-item\n      *ngFor=\"let listing of paginatedListings$ | async\"\n      [routerLink]=\"['/listings', listing.id]\"\n    >\n      <ion-thumbnail slot=\"start\">\n        <ion-img\n          [src]=\"listing.iconImage || 'assets/image/logo/ASCENDynamics NFP-logos_transparent.png'\"\n        ></ion-img>\n      </ion-thumbnail>\n      <ion-label>\n        <h2>{{ listing.title }}</h2>\n        <h3>{{ listing.organization }}</h3>\n        <p>{{ listing.description | slice:0:100 }}...</p>\n        <ion-badge color=\"primary\">{{ listing.type | titlecase }}</ion-badge>\n        <ion-badge *ngIf=\"listing.remote\" color=\"success\">Remote</ion-badge>\n        <p *ngIf=\"!listing.remote\">{{ getListingLocation(listing) }}</p>\n        <ion-note>\n          <ion-icon name=\"time-outline\"></ion-icon>\n          {{ listing.timeCommitment.hoursPerWeek }} hrs/week\n        </ion-note>\n      </ion-label>\n    </ion-item>\n  </ion-list>\n\n  <ion-fab\n    vertical=\"bottom\"\n    horizontal=\"end\"\n    slot=\"fixed\"\n    *ngIf=\"authUser$ | async\"\n  >\n    <ion-fab-button routerLink=\"/listings/create\">\n      <ion-icon name=\"add\"></ion-icon>\n    </ion-fab-button>\n  </ion-fab>\n\n  <!-- Pagination Component -->\n  <ion-footer>\n    <app-pagination\n      [totalItems]=\"(listings$ | async)?.length || 0\"\n      [pageSize]=\"pageSize\"\n      [maxVisiblePages]=\"5\"\n      (pageChange)=\"goToPage($event)\"\n    ></app-pagination>\n  </ion-footer>\n</ion-content>\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\n// src/app/modules/listing/relatedAccount/pages/applicants/applicants.page.ts\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {Store} from \"@ngrx/store\";\nimport {BehaviorSubject, combineLatest, map, Observable, take} from \"rxjs\";\nimport {ListingRelatedAccount} from \"../../../../../models/listing-related-account.model\";\nimport {AppState} from \"../../../../../state/app.state\";\nimport * as ListingsActions from \"../../../../../state/actions/listings.actions\";\nimport {\n  selectListingById,\n  selectRelatedAccountsByListingId,\n} from \"../../../../../state/selectors/listings.selectors\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {selectAuthUser} from \"../../../../../state/selectors/auth.selectors\";\nimport {Listing} from \"../../../../../models/listing.model\";\nimport {ModalController} from \"@ionic/angular\";\nimport {ApplicantDetailsModalComponent} from \"./components/applicant-details-modal/applicant-details-modal.component\";\nimport {MetaService} from \"../../../../../core/services/meta.service\";\n\n@Component({\n  selector: \"app-applicants\",\n  templateUrl: \"./applicants.page.html\",\n  styleUrls: [\"./applicants.page.scss\"],\n})\nexport class ApplicantsPage implements OnInit {\n  relatedAccounts$: Observable<ListingRelatedAccount[]> = new Observable();\n  paginatedAccounts$!: Observable<ListingRelatedAccount[]>;\n  currentPageSubject = new BehaviorSubject<number>(1);\n  currentPage$ = this.currentPageSubject.asObservable();\n  pageSize = 20; // Items per page\n  maxVisiblePages = 5; // Max visible page numbers\n\n  totalItems$!: Observable<number>;\n  totalPages$!: Observable<number>;\n  pageNumbers$!: Observable<number[]>;\n  currentPageStart$!: Observable<number>;\n  currentPageEnd$!: Observable<number>;\n\n  pagination$!: Observable<{\n    currentPage: number;\n    totalPages: number;\n    pageNumbers: number[];\n  }>;\n\n  currentPageRange$!: Observable<{\n    start: number;\n    end: number;\n    total: number;\n  }>;\n\n  loading$: Observable<boolean> = new Observable();\n  error$: Observable<string | null> = new Observable();\n  listingId: string = \"\";\n  listing$: Observable<Listing> = new Observable();\n  isOwner$: Observable<boolean> = new Observable();\n\n  constructor(\n    private metaService: MetaService,\n    private store: Store<AppState>,\n    private route: ActivatedRoute,\n    private modalController: ModalController,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {}\n\n  ionViewWillEnter() {\n    this.listingId = this.route.snapshot.paramMap.get(\"id\") || \"\";\n\n    if (this.listingId) {\n      this.store.dispatch(\n        ListingsActions.loadListingById({id: this.listingId}),\n      );\n\n      this.store.dispatch(\n        ListingsActions.loadListingRelatedAccounts({\n          listingId: this.listingId,\n        }),\n      );\n\n      this.relatedAccounts$ = this.store.select(\n        selectRelatedAccountsByListingId(this.listingId),\n      );\n\n      this.loading$ = this.store.select((state) => state.listings.loading);\n      this.error$ = this.store.select((state) => state.listings.error);\n\n      this.listing$ = this.store.select(selectListingById(this.listingId));\n\n      // Determine if current user is the listing creator\n      this.isOwner$ = combineLatest([\n        this.store.select(selectAuthUser),\n        this.listing$,\n      ]).pipe(\n        map(\n          ([user, listing]) =>\n            !!(user && listing && listing.createdBy === user.uid),\n        ),\n      );\n    }\n\n    // Default Meta Tags\n    this.metaService.updateMetaTags(\n      \"Listing Applicants | ASCENDynamics NFP\",\n      \"View and manage applicants for your listing on ASCENDynamics NFP.\",\n      \"listing, applicants, volunteer, nonprofits\",\n      {\n        title: \"Listing Applicants | ASCENDynamics NFP\",\n        description:\n          \"Review and manage all applicants for your listing to find the right candidates.\",\n        url: \"https://app.ASCENDynamics.org/listing/applicants\",\n        image: \"https://app.ASCENDynamics.org/assets/icon/logo.png\",\n      },\n      {\n        card: \"summary_large_image\",\n        title: \"Listing Applicants\",\n        description: \"Manage applicants for your listing on ASCENDynamics NFP.\",\n        image: \"https://app.ASCENDynamics.org/assets/icon/logo.png\",\n      },\n    );\n\n    this.setPaginationCalculations();\n  }\n\n  setPaginationCalculations() {\n    // Calculate total items dynamically\n    this.totalItems$ = this.relatedAccounts$.pipe(\n      map((accounts) => accounts.length),\n    );\n\n    // Calculate total pages\n    this.totalPages$ = this.totalItems$.pipe(\n      map((totalItems) => Math.ceil(totalItems / this.pageSize)),\n    );\n\n    // Generate paginated accounts\n    this.paginatedAccounts$ = combineLatest([\n      this.relatedAccounts$,\n      this.currentPage$,\n    ]).pipe(\n      map(([accounts, currentPage]) => {\n        const startIndex = (currentPage - 1) * this.pageSize;\n        return accounts.slice(startIndex, startIndex + this.pageSize);\n      }),\n    );\n\n    // Generate page numbers\n    this.pageNumbers$ = combineLatest([\n      this.currentPage$,\n      this.totalPages$,\n    ]).pipe(\n      map(([currentPage, totalPages]) => {\n        let startPage = Math.max(\n          1,\n          currentPage - Math.floor(this.maxVisiblePages / 2),\n        );\n        let endPage = startPage + this.maxVisiblePages - 1;\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = Math.max(1, endPage - this.maxVisiblePages + 1);\n        }\n        return Array.from(\n          {length: endPage - startPage + 1},\n          (_, i) => startPage + i,\n        );\n      }),\n    );\n\n    // Calculate start and end indices for the current page\n    this.currentPageStart$ = combineLatest([\n      this.currentPage$,\n      this.totalItems$,\n    ]).pipe(\n      map(([currentPage, totalItems]) => {\n        const start = (currentPage - 1) * this.pageSize + 1;\n        return Math.min(start, totalItems);\n      }),\n    );\n\n    this.currentPageEnd$ = combineLatest([\n      this.currentPage$,\n      this.totalItems$,\n    ]).pipe(\n      map(([currentPage, totalItems]) =>\n        Math.min(currentPage * this.pageSize, totalItems),\n      ),\n    );\n\n    // Combine pagination observables\n    this.pagination$ = combineLatest([\n      this.currentPage$,\n      this.totalPages$,\n      this.pageNumbers$,\n    ]).pipe(\n      map(([currentPage, totalPages, pageNumbers]) => ({\n        currentPage,\n        totalPages,\n        pageNumbers,\n      })),\n    );\n\n    // Combine current page range observables\n    this.currentPageRange$ = combineLatest([\n      this.currentPageStart$,\n      this.currentPageEnd$,\n      this.totalItems$,\n    ]).pipe(map(([start, end, total]) => ({start, end, total})));\n  }\n\n  async openApplicantDetailsModal(account: ListingRelatedAccount) {\n    combineLatest([this.isOwner$, this.store.select(selectAuthUser)])\n      .pipe(take(1))\n      .subscribe(([isOwner, authUser]) => {\n        // Check if user is owner or if it's their own account\n        if (isOwner && authUser && authUser.uid !== account.id) {\n          this.openModal(account, isOwner);\n        } else {\n          this.router.navigate([\"/account\", account.id]);\n        }\n      });\n  }\n\n  async openModal(relatedAccount: ListingRelatedAccount, isOwner: boolean) {\n    const modal = await this.modalController.create({\n      component: ApplicantDetailsModalComponent,\n      componentProps: {relatedAccount, isOwner},\n    });\n    await modal.present();\n  }\n\n  goToPage(pageNumber: number) {\n    this.currentPageSubject.next(pageNumber);\n  }\n\n  nextPage() {\n    this.currentPage$.pipe(take(1)).subscribe((currentPage) => {\n      this.currentPageSubject.next(currentPage + 1);\n    });\n  }\n\n  previousPage() {\n    this.currentPage$.pipe(take(1)).subscribe((currentPage) => {\n      this.currentPageSubject.next(currentPage - 1);\n    });\n  }\n}\n","<!--\nNonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\nCopyright (C) 2023  ASCENDynamics NFP\n\nThis file is part of Nonprofit Social Networking Platform.\n\nNonprofit Social Networking Platform is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nNonprofit Social Networking Platform is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n-->\n<ion-header>\n  <app-header\n    title=\"Applicants\"\n    [defaultHref]=\"'/listings/' + listingId\"\n  ></app-header>\n</ion-header>\n\n<ion-content>\n  <app-hero\n    *ngIf=\"listing$ | async as listing\"\n    [listing]=\"listing\"\n    [isOwner]=\"(isOwner$ | async) ?? false\"\n    [showButtons]=\"false\"\n  ></app-hero>\n\n  <ion-loading\n    *ngIf=\"loading$ | async\"\n    message=\"Loading applicants...\"\n  ></ion-loading>\n\n  <ion-list *ngIf=\"!(loading$ | async)\">\n    <ion-item\n      *ngFor=\"let account of paginatedAccounts$ | async\"\n      (click)=\"openApplicantDetailsModal(account)\"\n    >\n      <ion-avatar slot=\"start\">\n        <img *ngIf=\"account.iconImage\" [src]=\"account.iconImage\" />\n      </ion-avatar>\n      <ion-label>\n        <h2>{{ account.firstName }} {{ account.lastName }}</h2>\n        <h3 *ngIf=\"isOwner$ | async\">{{ account.email }}</h3>\n        <p *ngIf=\"account.phone && (isOwner$ | async)\">\n          {{ account.phone | phoneFormat }}\n        </p>\n        <p *ngIf=\"isOwner$ | async\">\n          Applied: {{ account.applicationDate | timestamp }}\n        </p>\n        <!-- <p *ngIf=\"account.notes && (isOwner$ | async)\">\n          Notes: {{ account.notes }}\n        </p> -->\n      </ion-label>\n      <ion-badge\n        *ngIf=\"isOwner$ | async\"\n        slot=\"end\"\n        [color]=\"account.status === 'accepted' ? 'success' :\n        account.status === 'rejected' ? 'danger' : 'primary' \"\n      >\n        {{ account.status }}\n      </ion-badge>\n      <!-- <ion-button\n        slot=\"end\"\n        fill=\"clear\"\n        [routerLink]=\"['/account', account.accountId]\"\n      >\n        <ion-icon name=\"person-circle-outline\"></ion-icon>\n        View Profile\n      </ion-button> -->\n    </ion-item>\n  </ion-list>\n\n  <ion-text color=\"danger\" *ngIf=\"error$ | async as error\">\n    {{ error }}\n  </ion-text>\n</ion-content>\n\n<!-- Pagination Controls -->\n<ion-footer>\n  <app-pagination\n    [totalItems]=\"(relatedAccounts$ | async)?.length || 0\"\n    [pageSize]=\"pageSize\"\n    (pageChange)=\"goToPage($event)\"\n  ></app-pagination>\n</ion-footer>\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\n// src/app/modules/listing/relatedAccount/pages/applicants/components/applicant-details-modal/applicant-details-modal.component.ts\n\nimport {Component, Input} from \"@angular/core\";\nimport {ModalController} from \"@ionic/angular\";\nimport {Router} from \"@angular/router\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"../../../../../../../state/app.state\";\nimport {ListingRelatedAccount} from \"../../../../../../../models/listing-related-account.model\";\nimport * as ListingsActions from \"../../../../../../../state/actions/listings.actions\";\n\n@Component({\n  selector: \"app-applicant-details-modal\",\n  templateUrl: \"./applicant-details-modal.component.html\",\n  styleUrls: [\"./applicant-details-modal.component.scss\"],\n})\nexport class ApplicantDetailsModalComponent {\n  @Input() relatedAccount!: ListingRelatedAccount;\n  @Input() isOwner: boolean = false;\n\n  constructor(\n    private modalController: ModalController,\n    private router: Router,\n    private store: Store<AppState>,\n  ) {}\n\n  closeModal() {\n    this.modalController.dismiss();\n  }\n\n  copyEmail() {\n    navigator.clipboard.writeText(this.relatedAccount.email);\n    this.showToast(\"Email copied to clipboard!\");\n  }\n\n  rejectApplication() {\n    this.updateApplicationStatus(\"rejected\", \"Application rejected!\");\n  }\n\n  acceptApplication() {\n    this.updateApplicationStatus(\"accepted\", \"Application accepted!\");\n  }\n\n  viewProfile() {\n    this.router.navigate([\"/account\", this.relatedAccount.id]);\n    this.closeModal();\n  }\n\n  private updateApplicationStatus(\n    status: \"applied\" | \"accepted\" | \"rejected\" | \"withdrawn\",\n    successMessage: string,\n  ) {\n    const updatedAccount = {\n      ...this.relatedAccount,\n      status,\n    };\n\n    // Dispatch an action to update the status in the store\n    this.store.dispatch(\n      ListingsActions.updateRelatedAccount({\n        listingId: this.relatedAccount.listingId,\n        relatedAccount: updatedAccount,\n      }),\n    );\n\n    this.showToast(successMessage);\n    this.closeModal();\n  }\n\n  async showToast(message: string) {\n    const toast = document.createElement(\"ion-toast\");\n    toast.message = message;\n    toast.duration = 2000;\n    document.body.appendChild(toast);\n    await toast.present();\n  }\n}\n","<!--\nNonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\nCopyright (C) 2023  ASCENDynamics NFP\n\nThis file is part of Nonprofit Social Networking Platform.\n\nNonprofit Social Networking Platform is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nNonprofit Social Networking Platform is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n-->\n<ion-header>\n  <ion-toolbar>\n    <ion-title>{{ relatedAccount.name }} Application Details</ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"closeModal()\">\n        <ion-icon name=\"close\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content *ngIf=\"isOwner\">\n  <!-- Applicant Information -->\n  <ion-card>\n    <ion-card-header>\n      <ion-card-title>Applicant Information</ion-card-title>\n    </ion-card-header>\n    <ion-card-content>\n      <p><strong>First Name:</strong> {{ relatedAccount.firstName }}</p>\n      <p><strong>Last Name:</strong> {{ relatedAccount.lastName }}</p>\n      <p><strong>Email Address:</strong> {{ relatedAccount.email }}</p>\n      <p *ngIf=\"relatedAccount.phone\">\n        <strong>Phone Number:</strong> {{ relatedAccount.phone }}\n      </p>\n      <p *ngIf=\"relatedAccount.notes\">\n        <strong>Notes:</strong> {{ relatedAccount.notes }}\n      </p>\n    </ion-card-content>\n  </ion-card>\n\n  <!-- Resume -->\n  <ion-card *ngIf=\"relatedAccount?.resumeFile\">\n    <!-- <ion-card-header>\n      <ion-card-title>Resume</ion-card-title>\n    </ion-card-header> -->\n    <ion-card-content>\n      <ion-item>\n        <ion-icon name=\"document-outline\" slot=\"start\"></ion-icon>\n        <ion-label>Resume</ion-label>\n        <ion-button\n          fill=\"clear\"\n          href=\"{{ relatedAccount.resumeFile }}\"\n          target=\"_blank\"\n        >\n          Download\n        </ion-button>\n      </ion-item>\n    </ion-card-content>\n  </ion-card>\n\n  <!-- Cover Letter -->\n  <ion-card *ngIf=\"relatedAccount?.coverLetterFile\">\n    <!-- <ion-card-header>\n      <ion-card-title>Cover Letter</ion-card-title>\n    </ion-card-header> -->\n    <ion-card-content>\n      <ion-item>\n        <ion-icon name=\"document-outline\" slot=\"start\"></ion-icon>\n        <ion-label>Cover Letter</ion-label>\n        <ion-button\n          fill=\"clear\"\n          href=\"{{ relatedAccount.coverLetterFile }}\"\n          target=\"_blank\"\n        >\n          Download\n        </ion-button>\n      </ion-item>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n\n<ion-footer>\n  <!-- Action Buttons -->\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"6\">\n        <ion-button expand=\"block\" color=\"medium\" (click)=\"copyEmail()\">\n          Copy Email\n        </ion-button>\n      </ion-col>\n      <ion-col size=\"6\">\n        <ion-button expand=\"block\" color=\"primary\" (click)=\"viewProfile()\">\n          View Profile\n        </ion-button>\n      </ion-col>\n    </ion-row>\n    <ion-row>\n      <ion-col size=\"6\">\n        <ion-button\n          expand=\"block\"\n          color=\"success\"\n          (click)=\"acceptApplication()\"\n        >\n          Accept\n        </ion-button>\n      </ion-col>\n      <ion-col size=\"6\">\n        <ion-button expand=\"block\" color=\"danger\" (click)=\"rejectApplication()\">\n          Reject\n        </ion-button>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-footer>\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\n// src/app/modules/listings/pages/apply/apply.page.ts\n\nimport {Component, ElementRef, OnInit, ViewChild} from \"@angular/core\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"../../../../../state/app.state\";\nimport {selectAuthUser} from \"../../../../../state/selectors/auth.selectors\";\nimport {AuthUser} from \"../../../../../models/auth-user.model\";\nimport {Observable} from \"rxjs\";\nimport {take} from \"rxjs/operators\";\nimport * as ListingsActions from \"../../../../../state/actions/listings.actions\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {selectListingById} from \"../../../../../state/selectors/listings.selectors\";\nimport {Listing} from \"../../../../../models/listing.model\";\nimport {AlertController} from \"@ionic/angular\";\nimport {MetaService} from \"../../../../../core/services/meta.service\";\n\n@Component({\n  selector: \"app-apply\",\n  templateUrl: \"./apply.page.html\",\n  styleUrls: [\"./apply.page.scss\"],\n})\nexport class ApplyPage implements OnInit {\n  applyForm: FormGroup;\n  resumeFile: File | null = null;\n  coverLetterFile: File | null = null;\n  authUser$: Observable<AuthUser | null>;\n  listingId?: string;\n  listing$: Observable<Listing>;\n  @ViewChild(\"resumeInput\") resumeInput!: ElementRef<HTMLInputElement>;\n  @ViewChild(\"coverLetterInput\")\n  coverLetterInput!: ElementRef<HTMLInputElement>;\n  resumeFileName: string = \"\";\n  coverLetterFileName: string = \"\";\n\n  constructor(\n    private metaService: MetaService,\n    private fb: FormBuilder,\n    private store: Store<AppState>,\n    private route: ActivatedRoute,\n    private alertController: AlertController,\n  ) {\n    this.applyForm = this.fb.group({\n      firstName: [\"\", [Validators.required, Validators.minLength(2)]],\n      lastName: [\"\", [Validators.required, Validators.minLength(2)]],\n      email: [\"\", [Validators.required, Validators.email]],\n      phone: [\"\", [Validators.required, Validators.minLength(7)]],\n      notes: [\"\"],\n    });\n\n    this.authUser$ = this.store.select(selectAuthUser);\n    this.listingId = this.route.snapshot.paramMap.get(\"id\") || \"\";\n    this.listing$ = this.store.select(selectListingById(this.listingId));\n  }\n\n  ngOnInit(): void {\n    this.authUser$.pipe(take(1)).subscribe((authUser) => {\n      if (authUser) {\n        const [firstName, ...lastNameParts] = (authUser.name || \"\").split(\" \");\n        const lastName = lastNameParts.join(\" \");\n\n        this.applyForm.patchValue({\n          firstName: firstName || \"\",\n          lastName: lastName || \"\",\n          email: authUser.email || \"\",\n          phone: authUser.phoneNumber || \"\",\n        });\n      }\n    });\n  }\n\n  ionViewWillEnter(): void {\n    this.listingId = this.route.snapshot.paramMap.get(\"id\") || \"\";\n    this.store.dispatch(ListingsActions.loadListingById({id: this.listingId}));\n    // Default Meta Tags\n    this.metaService.updateMetaTags(\n      \"Apply to Listing | ASCENDynamics NFP\",\n      \"Submit your application to join this opportunity on ASCENDynamics NFP.\",\n      \"listing, apply, volunteer, nonprofits\",\n      {\n        title: \"Apply to Listing | ASCENDynamics NFP\",\n        description:\n          \"Fill out your application and connect with organizations to make a difference.\",\n        url: \"https://app.ASCENDynamics.org/listings\",\n        image: \"https://app.ASCENDynamics.org/assets/icon/logo.png\",\n      },\n      {\n        card: \"summary_large_image\",\n        title: \"Apply to Listing\",\n        description:\n          \"Submit your application to this listing and start making an impact today.\",\n        image: \"https://app.ASCENDynamics.org/assets/icon/logo.png\",\n      },\n    );\n  }\n\n  onFileSelect(event: Event, type: \"resume\" | \"coverLetter\"): void {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n      if (file.type !== \"application/pdf\") {\n        this.showAlert(\"Invalid File\", \"Please upload a valid PDF file.\");\n        input.value = \"\"; // Reset the input\n        return;\n      }\n      if (file.size > 10 * 1024 * 1024) {\n        this.showAlert(\"File Too Large\", \"File size must not exceed 10 MB.\");\n        input.value = \"\"; // Reset the input\n        return;\n      }\n\n      if (type === \"resume\") {\n        this.resumeFile = file;\n        this.resumeFileName = file.name;\n      } else if (type === \"coverLetter\") {\n        this.coverLetterFile = file;\n        this.coverLetterFileName = file.name;\n      }\n    }\n  }\n\n  formatPhoneNumber(event: any): void {\n    const input = event.target as HTMLInputElement;\n    let phone = input.value.replace(/\\D/g, \"\"); // Remove all non-numeric characters\n\n    if (phone.length > 3 && phone.length <= 6) {\n      phone = `(${phone.slice(0, 3)}) ${phone.slice(3)}`;\n    } else if (phone.length > 6) {\n      phone = `(${phone.slice(0, 3)}) ${phone.slice(3, 6)}-${phone.slice(6, 10)}`;\n    }\n\n    input.value = phone; // Update the input value\n  }\n\n  onSubmit(): void {\n    if (!this.applyForm.valid) {\n      this.markFormAsDirty(this.applyForm);\n      this.showAlert(\n        \"Form Invalid\",\n        \"Please fill out all required fields correctly.\",\n      );\n      return;\n    }\n\n    this.authUser$.pipe(take(1)).subscribe((authUser) => {\n      if (!authUser) {\n        this.showAlert(\n          \"Error\",\n          \"Unable to fetch user information. Please try again.\",\n        );\n        return;\n      }\n\n      const relatedAccount = {\n        ...this.applyForm.value,\n        id: authUser.uid, // Populate the id\n        name: authUser.name,\n        iconImage: authUser.iconImage,\n        heroImage: authUser.heroImage,\n        accountId: authUser.uid, // Populate the accountId\n        resumeFile: this.resumeFile,\n        coverLetterFile: this.coverLetterFile,\n        listingId: this.listingId,\n        type: \"application\",\n        status: \"applied\",\n      };\n\n      // Dispatch action to submit application\n      this.store.dispatch(ListingsActions.submitApplication({relatedAccount}));\n\n      this.showAlert(\n        \"Application Submitted\",\n        \"Your application has been submitted successfully!\",\n      );\n      console.log(\"Form Submitted!\", relatedAccount);\n    });\n  }\n\n  markFormAsDirty(formGroup: FormGroup): void {\n    Object.keys(formGroup.controls).forEach((key) => {\n      const control = formGroup.get(key);\n      if (control) {\n        control.markAsTouched();\n        control.updateValueAndValidity();\n      }\n    });\n  }\n\n  async showAlert(header: string, message: string): Promise<void> {\n    const alert = await this.alertController.create({\n      header,\n      message,\n      buttons: [\"OK\"],\n    });\n\n    await alert.present();\n  }\n}\n","<!--\nNonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\nCopyright (C) 2023  ASCENDynamics NFP\n\nThis file is part of Nonprofit Social Networking Platform.\n\nNonprofit Social Networking Platform is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nNonprofit Social Networking Platform is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n-->\n<!-- src/app/modules/listings/pages/apply/apply.page.html -->\n\n<ion-header>\n  <app-header\n    [defaultHref]=\"'/listings/' + listingId\"\n    [title]=\"'Apply for ' + (listing$ | async)?.title\"\n  ></app-header>\n</ion-header>\n\n<ion-content>\n  <form [formGroup]=\"applyForm\" (ngSubmit)=\"onSubmit()\">\n    <ion-grid>\n      <!-- Application Details Card -->\n      <ion-row>\n        <ion-col size=\"12\">\n          <ion-card>\n            <ion-card-header>\n              <ion-card-title>Apply to this Opportunity</ion-card-title>\n              <ion-card-subtitle>\n                Please complete the form below to apply to this position\n              </ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content\n              ><ion-grid>\n                <!-- First Name -->\n                <ion-row>\n                  <ion-col size=\"12\">\n                    <ion-item lines=\"none\">\n                      <ion-input\n                        formControlName=\"firstName\"\n                        label=\"First Name\"\n                        label-placement=\"floating\"\n                        fill=\"outline\"\n                        placeholder=\"Enter your first name\"\n                      ></ion-input>\n                    </ion-item>\n                    <ion-note\n                      *ngIf=\"applyForm.get('firstName')?.touched && applyForm.get('firstName')?.errors?.['required']\"\n                      color=\"danger\"\n                    >\n                      First Name is required.\n                    </ion-note>\n                    <ion-note\n                      *ngIf=\"applyForm.get('firstName')?.touched && applyForm.get('firstName')?.errors?.['minlength']\"\n                      color=\"danger\"\n                    >\n                      First Name must be at least 2 characters long.\n                    </ion-note>\n                  </ion-col>\n                </ion-row>\n\n                <!-- Last Name -->\n                <ion-row>\n                  <ion-col size=\"12\">\n                    <ion-item lines=\"none\">\n                      <ion-input\n                        formControlName=\"lastName\"\n                        label=\"Last Name\"\n                        label-placement=\"floating\"\n                        fill=\"outline\"\n                        placeholder=\"Enter your last name\"\n                      ></ion-input>\n                    </ion-item>\n                    <ion-note\n                      *ngIf=\"applyForm.get('lastName')?.touched && applyForm.get('lastName')?.errors?.['required']\"\n                      color=\"danger\"\n                    >\n                      Last Name is required.\n                    </ion-note>\n                    <ion-note\n                      *ngIf=\"applyForm.get('lastName')?.touched && applyForm.get('lastName')?.errors?.['minlength']\"\n                      color=\"danger\"\n                    >\n                      Last Name must be at least 2 characters long.\n                    </ion-note>\n                  </ion-col>\n                </ion-row>\n\n                <!-- Email -->\n                <ion-row>\n                  <ion-col size=\"12\">\n                    <ion-item lines=\"none\">\n                      <ion-input\n                        formControlName=\"email\"\n                        type=\"email\"\n                        label=\"Email Address\"\n                        label-placement=\"floating\"\n                        fill=\"outline\"\n                        placeholder=\"Enter your email address\"\n                      ></ion-input>\n                    </ion-item>\n                    <ion-note\n                      *ngIf=\"applyForm.get('email')?.touched && applyForm.get('email')?.errors?.['required']\"\n                      color=\"danger\"\n                    >\n                      Email is required.\n                    </ion-note>\n                    <ion-note\n                      *ngIf=\"applyForm.get('email')?.touched && applyForm.get('email')?.errors?.['email']\"\n                      color=\"danger\"\n                    >\n                      Please enter a valid email address.\n                    </ion-note>\n                  </ion-col>\n                </ion-row>\n\n                <!-- Phone -->\n                <ion-row>\n                  <ion-col size=\"12\">\n                    <ion-item lines=\"none\">\n                      <ion-input\n                        formControlName=\"phone\"\n                        type=\"tel\"\n                        label=\"Phone Number\"\n                        label-placement=\"floating\"\n                        fill=\"outline\"\n                        placeholder=\"Enter your phone number\"\n                        (ionInput)=\"formatPhoneNumber($event)\"\n                      ></ion-input>\n                    </ion-item>\n                    <ion-note\n                      *ngIf=\"applyForm.get('phone')?.touched && applyForm.get('phone')?.errors?.['required']\"\n                      color=\"danger\"\n                    >\n                      Phone Number is required.\n                    </ion-note>\n                    <ion-note\n                      *ngIf=\"applyForm.get('phone')?.touched && applyForm.get('phone')?.errors?.['minlength']\"\n                      color=\"danger\"\n                    >\n                      Phone Number must be at least 7 characters long.\n                    </ion-note>\n                  </ion-col>\n                </ion-row>\n\n                <!-- Notes Textarea -->\n                <ion-row>\n                  <ion-col size=\"12\">\n                    <ion-item lines=\"none\">\n                      <ion-textarea\n                        formControlName=\"notes\"\n                        label=\"Notes\"\n                        label-placement=\"floating\"\n                        fill=\"outline\"\n                        placeholder=\"Enter any additional information\"\n                        auto-grow=\"true\"\n                      ></ion-textarea>\n                    </ion-item>\n                  </ion-col>\n                </ion-row>\n              </ion-grid>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n      </ion-row>\n\n      <!-- Resume Upload -->\n      <ion-row>\n        <ion-col size=\"12\">\n          <ion-card>\n            <ion-card-header>\n              <ion-card-title>Resume (if applicable)</ion-card-title>\n              <ion-card-subtitle>\n                Resume must be uploaded in PDF format (Max 10 MB)\n              </ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content>\n              <ion-item lines=\"none\">\n                <ion-label>Upload Resume</ion-label>\n                <ion-button fill=\"outline\" (click)=\"resumeInput.click()\">\n                  Choose File\n                </ion-button>\n                <input\n                  type=\"file\"\n                  accept=\"application/pdf\"\n                  (change)=\"onFileSelect($event, 'resume')\"\n                  #resumeInput\n                  hidden\n                />\n              </ion-item>\n              <ion-text *ngIf=\"resumeFileName\">\n                Selected File: {{ resumeFileName }}\n              </ion-text>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n      </ion-row>\n\n      <!-- Cover Letter Upload -->\n      <ion-row>\n        <ion-col size=\"12\">\n          <ion-card>\n            <ion-card-header>\n              <ion-card-title>Cover Letter (if applicable)</ion-card-title>\n              <ion-card-subtitle>Maximum size: 10 MB</ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content>\n              <ion-item lines=\"none\">\n                <ion-label>Upload Cover Letter</ion-label>\n                <ion-button fill=\"outline\" (click)=\"coverLetterInput.click()\">\n                  Choose File\n                </ion-button>\n                <input\n                  type=\"file\"\n                  accept=\"application/pdf\"\n                  (change)=\"onFileSelect($event, 'coverLetter')\"\n                  #coverLetterInput\n                  hidden\n                />\n              </ion-item>\n              <ion-text *ngIf=\"coverLetterFileName\">\n                Selected File: {{ coverLetterFileName }}\n              </ion-text>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n      </ion-row>\n\n      <!-- Submit Button -->\n      <ion-row>\n        <ion-col>\n          <ion-button expand=\"block\" color=\"primary\" type=\"submit\">\n            Submit\n          </ion-button>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </form>\n</ion-content>\n","import {Pipe, PipeTransform} from \"@angular/core\";\nimport {Address} from \"../../models/account.model\";\n\n@Pipe({\n  name: \"formatAddress\",\n})\nexport class FormatAddressPipe implements PipeTransform {\n  transform(address: Address): string {\n    if (!address) return \"\";\n\n    const parts = [\n      address.street,\n      address.city,\n      address.state,\n      address.country,\n      address.zipcode,\n    ].filter((part) => part);\n\n    return parts.join(\", \");\n  }\n}\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\nimport {Pipe, PipeTransform} from \"@angular/core\";\n\n@Pipe({\n  name: \"phoneFormat\",\n})\nexport class PhoneFormatPipe implements PipeTransform {\n  transform(phoneNumber: string): string {\n    const cleaned = (\"\" + phoneNumber).replace(/\\D/g, \"\");\n    const match = cleaned.match(/^(1|)?(\\d{3})(\\d{3})(\\d{4})$/);\n    if (match) {\n      const intlCode = match[1] ? \"+1 \" : \"\";\n      return [intlCode, \"(\", match[2], \") \", match[3], \"-\", match[4]].join(\"\");\n    }\n    return \"\";\n  }\n}\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {Timestamp} from \"firebase/firestore\";\n\n@Pipe({\n  name: \"timestamp\",\n})\nexport class TimestampPipe implements PipeTransform {\n  transform(value: Timestamp | any): Date | null {\n    if (!value) return null;\n\n    // Handle Firestore Timestamp\n    if (value instanceof Timestamp) {\n      return value.toDate();\n    }\n\n    // Handle server timestamp\n    if (value.seconds) {\n      return new Timestamp(value.seconds, value.nanoseconds).toDate();\n    }\n\n    return null;\n  }\n}\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\n// src/app/state/listings/listings.effects.ts\n\nimport {Injectable} from \"@angular/core\";\nimport {Actions, createEffect, ofType} from \"@ngrx/effects\";\nimport {\n  catchError,\n  debounceTime,\n  from,\n  map,\n  mergeMap,\n  of,\n  withLatestFrom,\n  filter,\n  take,\n  switchMap,\n} from \"rxjs\";\nimport {FirestoreService} from \"../../core/services/firestore.service\";\nimport * as ListingsActions from \"../actions/listings.actions\";\nimport {Listing} from \"../../models/listing.model\";\nimport {serverTimestamp} from \"@angular/fire/firestore\";\nimport {ListingRelatedAccount} from \"../../models/listing-related-account.model\";\nimport {Router} from \"@angular/router\";\nimport {ToastController} from \"@ionic/angular\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"../app.state\";\nimport {\n  selectListingById,\n  selectAreListingsFresh,\n  selectAreRelatedAccountsFresh,\n} from \"../selectors/listings.selectors\";\n\n@Injectable()\nexport class ListingsEffects {\n  constructor(\n    private actions$: Actions,\n    private firestoreService: FirestoreService,\n    private router: Router,\n    private toastController: ToastController,\n    private store: Store<AppState>,\n  ) {}\n\n  // Create a new listing\n  createListing$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ListingsActions.createListing),\n      mergeMap(({listing}) => {\n        const newListing = {\n          ...listing,\n          createdAt: serverTimestamp(),\n          lastModifiedAt: serverTimestamp(),\n        };\n        return from(\n          this.firestoreService.addDocument(\"listings\", newListing),\n        ).pipe(\n          map((docId) => {\n            this.router.navigate([`/listings/${docId}`]);\n            this.showToast(\"Listing created successfully\", \"success\");\n            return ListingsActions.createListingSuccess({\n              listing: {...newListing, id: docId},\n            });\n          }),\n          catchError((error) => {\n            this.showToast(`Error: ${error.message}`, \"danger\");\n            return of(\n              ListingsActions.createListingFailure({error: error.message}),\n            );\n          }),\n        );\n      }),\n    ),\n  );\n\n  // Load all listings if not fresh\n  loadListings$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ListingsActions.loadListings),\n      withLatestFrom(this.store.select(selectAreListingsFresh)),\n      filter(([_, areFresh]) => !areFresh), // Only load if not fresh\n      switchMap(() =>\n        this.firestoreService\n          .getCollectionWithCondition<Listing>(\n            \"listings\",\n            \"status\",\n            \"==\",\n            \"active\",\n          )\n          .pipe(\n            map((listings) => ListingsActions.loadListingsSuccess({listings})),\n            catchError((error) =>\n              of(ListingsActions.loadListingsFailure({error: error.message})),\n            ),\n          ),\n      ),\n    ),\n  );\n\n  // Load a single listing by ID if not already in the store\n  loadListingById$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ListingsActions.loadListingById),\n      mergeMap(({id}) =>\n        this.store.select(selectListingById(id)).pipe(\n          take(1),\n          mergeMap((listing) => {\n            if (listing) {\n              // Listing already loaded\n              return of(ListingsActions.loadListingByIdSuccess({listing}));\n            } else {\n              // Fetch from Firestore\n              return this.firestoreService\n                .getDocument<Listing>(\"listings\", id)\n                .pipe(\n                  map((fetchedListing) => {\n                    if (!fetchedListing) {\n                      throw new Error(\"Listing not found\");\n                    }\n                    return ListingsActions.loadListingByIdSuccess({\n                      listing: fetchedListing,\n                    });\n                  }),\n                  catchError((error) =>\n                    of(\n                      ListingsActions.loadListingByIdFailure({\n                        error: error.message,\n                      }),\n                    ),\n                  ),\n                );\n            }\n          }),\n        ),\n      ),\n    ),\n  );\n\n  // Update an existing listing\n  updateListing$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ListingsActions.updateListing),\n      debounceTime(300),\n      mergeMap(({listing}) => {\n        const updatedListing = {\n          ...listing,\n          lastModifiedAt: serverTimestamp(),\n        };\n        return from(\n          this.firestoreService.updateDocument(\n            \"listings\",\n            listing.id,\n            updatedListing,\n          ),\n        ).pipe(\n          map(() => {\n            this.router.navigate([`/listings/${listing.id}`]);\n            this.showToast(\"Listing updated successfully\", \"success\");\n            return ListingsActions.updateListingSuccess({\n              listing: updatedListing,\n            });\n          }),\n          catchError((error) => {\n            this.showToast(\n              `Error updating listing: ${error.message}`,\n              \"danger\",\n            );\n            return of(\n              ListingsActions.updateListingFailure({error: error.message}),\n            );\n          }),\n        );\n      }),\n    ),\n  );\n\n  // Delete a listing\n  deleteListing$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ListingsActions.deleteListing),\n      mergeMap(({id}) =>\n        from(this.firestoreService.deleteDocument(\"listings\", id)).pipe(\n          map(() => {\n            this.showToast(\"Listing deleted successfully\", \"success\");\n            return ListingsActions.deleteListingSuccess({id});\n          }),\n          catchError((error) => {\n            this.showToast(\n              `Error deleting listing: ${error.message}`,\n              \"danger\",\n            );\n            return of(\n              ListingsActions.deleteListingFailure({error: error.message}),\n            );\n          }),\n        ),\n      ),\n    ),\n  );\n\n  // Submit application (related to a listing)\n  submitApplication$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ListingsActions.submitApplication),\n      mergeMap(({relatedAccount}) =>\n        from(this.submitApplicationToFirestore(relatedAccount)).pipe(\n          map(() => {\n            this.router.navigate([\"/listings\", relatedAccount.listingId]);\n            this.showToast(\"Application submitted successfully\", \"success\");\n            return ListingsActions.submitApplicationSuccess();\n          }),\n          catchError((error) => {\n            this.showToast(\n              `Error submitting application: ${error.message}`,\n              \"danger\",\n            );\n            return of(\n              ListingsActions.submitApplicationFailure({error: error.message}),\n            );\n          }),\n        ),\n      ),\n    ),\n  );\n\n  // Load related accounts for a listing if not fresh\n  loadListingRelatedAccounts$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ListingsActions.loadListingRelatedAccounts),\n      mergeMap(({listingId}) =>\n        this.store.select(selectAreRelatedAccountsFresh(listingId)).pipe(\n          take(1),\n          filter((areFresh) => !areFresh), // Only load if stale\n          switchMap(() =>\n            this.firestoreService\n              .getDocuments<ListingRelatedAccount>(\n                `listings/${listingId}/relatedAccounts`,\n              )\n              .pipe(\n                map((relatedAccounts) => {\n                  this.showToast(\"Applications loaded successfully\", \"success\");\n                  return ListingsActions.loadListingRelatedAccountsSuccess({\n                    listingId,\n                    relatedAccounts,\n                  });\n                }),\n                catchError((error) => {\n                  this.showToast(\n                    `Error loading applications: ${error.message}`,\n                    \"danger\",\n                  );\n                  return of(\n                    ListingsActions.loadListingRelatedAccountsFailure({\n                      listingId,\n                      error: error.message,\n                    }),\n                  );\n                }),\n              ),\n          ),\n        ),\n      ),\n    ),\n  );\n\n  // Helper method for submitting an application\n  private async submitApplicationToFirestore(\n    relatedAccount: ListingRelatedAccount,\n  ): Promise<void> {\n    try {\n      const applicationId = relatedAccount.id;\n\n      // Upload files if present\n      const resumeFile = relatedAccount.resumeFile\n        ? await this.firestoreService.uploadFile(\n            `accounts/${applicationId}/listing/${relatedAccount.listingId}/resume.pdf`,\n            relatedAccount.resumeFile,\n          )\n        : null;\n\n      const coverLetterFile = relatedAccount.coverLetterFile\n        ? await this.firestoreService.uploadFile(\n            `accounts/${applicationId}/listing/${relatedAccount.listingId}/coverLetter.pdf`,\n            relatedAccount.coverLetterFile,\n          )\n        : null;\n\n      // Save application data using setDocument\n      await this.firestoreService.setDocument(\n        `listings/${relatedAccount.listingId}/relatedAccounts/${applicationId}`,\n        {\n          id: applicationId,\n          name: relatedAccount.name,\n          firstName: relatedAccount.firstName,\n          lastName: relatedAccount.lastName,\n          email: relatedAccount.email,\n          phone: relatedAccount.phone,\n          notes: relatedAccount.notes,\n          resumeFile,\n          coverLetterFile,\n          listingId: relatedAccount.listingId,\n          applicationDate: serverTimestamp(),\n          createdAt: serverTimestamp(),\n          lastModifiedAt: serverTimestamp(),\n          iconImage: relatedAccount.iconImage,\n          accountId: applicationId,\n          type: \"application\",\n          status: \"applied\",\n        },\n        {merge: true},\n      );\n    } catch (error) {\n      console.error(\"Error submitting application to Firestore:\", error);\n      throw new Error(\"Failed to submit application. Please try again later.\");\n    }\n  }\n\n  updateRelatedAccount$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ListingsActions.updateRelatedAccount),\n      mergeMap(({listingId, relatedAccount}) =>\n        from(\n          this.firestoreService.updateDocument(\n            `listings/${listingId}/relatedAccounts`,\n            relatedAccount.id,\n            relatedAccount,\n          ),\n        ).pipe(\n          map(() =>\n            ListingsActions.updateRelatedAccountSuccess({\n              listingId,\n              relatedAccount,\n            }),\n          ),\n          catchError((error) =>\n            of(\n              ListingsActions.updateRelatedAccountFailure({\n                error: error.message,\n              }),\n            ),\n          ),\n        ),\n      ),\n    ),\n  );\n\n  private showToast(message: string, color: string) {\n    this.toastController\n      .create({\n        message,\n        duration: 2000,\n        color,\n      })\n      .then((toast) => toast.present());\n  }\n}\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\n// src/app/state/listings/listings.selectors.ts\n\nimport {createFeatureSelector, createSelector} from \"@ngrx/store\";\nimport {ListingsState} from \"../reducers/listings.reducer\";\n\n// TTL in milliseconds (e.g., 5 minutes)\nconst LISTINGS_TTL = 5 * 60 * 1000; // 5 minutes\n\n// Utility: Check if data is stale\nfunction isStale(lastUpdated: number | null, ttl: number): boolean {\n  if (!lastUpdated) return true; // If never updated, consider it stale\n  const now = Date.now();\n  return now - lastUpdated > ttl;\n}\n\n// Feature Selector\nexport const selectListingsState =\n  createFeatureSelector<ListingsState>(\"listings\");\n\n// Selectors for related accounts\nexport const selectRelatedAccountsByListingId = (listingId: string) =>\n  createSelector(\n    selectListingsState,\n    (state: ListingsState) => state.relatedAccounts[listingId] || [],\n  );\n\n// Select all listings\nexport const selectAllListings = createSelector(\n  selectListingsState,\n  (state: ListingsState) => Object.values(state.entities),\n);\n\n// Select a specific listing by ID\nexport const selectListingById = (listingId: string) =>\n  createSelector(\n    selectListingsState,\n    (state: ListingsState) => state.entities[listingId],\n  );\n\n// Select the currently selected listing\nexport const selectSelectedListing = createSelector(\n  selectListingsState,\n  (state: ListingsState) =>\n    state.selectedListingId\n      ? state.entities[state.selectedListingId]\n      : undefined,\n);\n\n// Select loading state\nexport const selectLoading = createSelector(\n  selectListingsState,\n  (state: ListingsState) => state.loading,\n);\n\n// Select error state\nexport const selectError = createSelector(\n  selectListingsState,\n  (state: ListingsState) => state.error,\n);\n\n// Select filter type\nexport const selectFilterType = createSelector(\n  selectListingsState,\n  (state: ListingsState) => state.filterType,\n);\n\n// Select search query\nexport const selectSearchQuery = createSelector(\n  selectListingsState,\n  (state: ListingsState) => state.searchQuery,\n);\n\n// Select filtered listings\nexport const selectFilteredListings = createSelector(\n  selectAllListings,\n  selectFilterType,\n  selectSearchQuery,\n  (listings, filterType, searchQuery) => {\n    let filteredListings = listings;\n\n    if (filterType && filterType !== \"all\") {\n      filteredListings = filteredListings.filter(\n        (listing) => listing.type === filterType,\n      );\n    }\n\n    if (searchQuery) {\n      const queryLower = searchQuery.toLowerCase();\n      filteredListings = filteredListings.filter(\n        (listing) =>\n          listing.title.toLowerCase().includes(queryLower) ||\n          listing.description.toLowerCase().includes(queryLower),\n      );\n    }\n\n    return filteredListings;\n  },\n);\n\n// Cache and Freshness Selectors\nexport const selectListingsLastUpdated = createSelector(\n  selectListingsState,\n  (state: ListingsState) => state.listingsLastUpdated,\n);\n\nexport const selectRelatedAccountsLastUpdated = (listingId: string) =>\n  createSelector(\n    selectListingsState,\n    (state: ListingsState) =>\n      state.relatedAccountsLastUpdated[listingId] || null,\n  );\n\n// Determine if listings are fresh\nexport const selectAreListingsFresh = createSelector(\n  selectListingsLastUpdated,\n  (listingsLastUpdated) => !isStale(listingsLastUpdated, LISTINGS_TTL),\n);\n\n// Determine if related accounts for a listing are fresh\nexport const selectAreRelatedAccountsFresh = (listingId: string) =>\n  createSelector(\n    selectRelatedAccountsLastUpdated(listingId),\n    (relatedAccountsLastUpdated) =>\n      !isStale(relatedAccountsLastUpdated, LISTINGS_TTL),\n  );\n"],"names":["EventEmitter","FormGroup","Validators","Timestamp","filter","first","switchMap","take","tap","selectAuthUser","AccountActions","selectAccountById","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","ListingFormComponent_ng_container_1_ion_note_10_span_1_Template","ListingFormComponent_ng_container_1_ion_note_10_span_2_Template","ListingFormComponent_ng_container_1_ion_note_10_span_3_Template","ɵɵadvance","ɵɵproperty","tmp_2_0","ctx_r0","listingForm","get","errors","tmp_3_0","tmp_4_0","ListingFormComponent_ng_container_1_ion_note_13_span_1_Template","ListingFormComponent_ng_container_1_ion_note_13_span_2_Template","ListingFormComponent_ng_container_1_ion_note_13_span_3_Template","type_r2","ɵɵtextInterpolate1","ɵɵpipeBind1","ListingFormComponent_ng_container_1_ion_note_27_span_1_Template","ListingFormComponent_ng_container_1_ion_note_27_span_2_Template","ListingFormComponent_ng_container_1_ion_note_27_span_3_Template","ListingFormComponent_ng_container_1_ion_note_37_span_1_Template","ListingFormComponent_ng_container_1_ion_note_37_span_2_Template","ListingFormComponent_ng_container_1_ion_note_37_span_3_Template","ɵɵelementContainerStart","ɵɵelement","ListingFormComponent_ng_container_1_ion_note_10_Template","ListingFormComponent_ng_container_1_ion_note_13_Template","ListingFormComponent_ng_container_1_ion_select_option_17_Template","ListingFormComponent_ng_container_1_ion_note_18_Template","ListingFormComponent_ng_container_1_ion_note_27_Template","ListingFormComponent_ng_container_1_ion_note_37_Template","ListingFormComponent_ng_container_1_ion_note_40_Template","ListingFormComponent_ng_container_1_ion_note_44_Template","ListingFormComponent_ng_container_1_ion_note_48_Template","ListingFormComponent_ng_container_1_ion_note_51_Template","ɵɵclassProp","tmp_1_0","invalid","touched","valid","tmp_5_0","tmp_6_0","tmp_7_0","listingTypes","tmp_9_0","tmp_10_0","tmp_11_0","tmp_12_0","tmp_13_0","tmp_14_0","tmp_15_0","tmp_16_0","tmp_17_0","tmp_18_0","tmp_20_0","tmp_21_0","tmp_23_0","level_r5","ListingFormComponent_ng_container_2_div_6_ion_select_option_6_Template","ɵɵlistener","ListingFormComponent_ng_container_2_div_6_Template_ion_button_click_13_listener","i_r6","ɵɵrestoreView","_r4","index","ɵɵnextContext","ɵɵresetView","removeArrayItem","skillLevels","ListingFormComponent_ng_container_2_div_15_Template_ion_button_click_5_listener","i_r8","_r7","ListingFormComponent_ng_container_2_div_24_Template_ion_button_click_5_listener","i_r10","_r9","ListingFormComponent_ng_container_2_div_33_Template_ion_button_click_5_listener","i_r12","_r11","ListingFormComponent_ng_container_2_div_47_Template_ion_button_click_7_listener","i_r14","_r13","ListingFormComponent_ng_container_2_div_56_Template_ion_button_click_24_listener","i_r16","_r15","ListingFormComponent_ng_container_2_div_65_Template_ion_button_click_15_listener","i_r18","_r17","ListingFormComponent_ng_container_2_div_6_Template","ListingFormComponent_ng_container_2_Template_ion_button_click_7_listener","_r3","addSkill","ListingFormComponent_ng_container_2_div_15_Template","ListingFormComponent_ng_container_2_Template_ion_button_click_16_listener","addArrayItem","ListingFormComponent_ng_container_2_div_24_Template","ListingFormComponent_ng_container_2_Template_ion_button_click_25_listener","ListingFormComponent_ng_container_2_div_33_Template","ListingFormComponent_ng_container_2_Template_ion_button_click_34_listener","ListingFormComponent_ng_container_2_div_47_Template","ListingFormComponent_ng_container_2_Template_ion_button_click_48_listener","addEmail","ListingFormComponent_ng_container_2_div_56_Template","ListingFormComponent_ng_container_2_Template_ion_button_click_57_listener","addAddress","ListingFormComponent_ng_container_2_div_65_Template","ListingFormComponent_ng_container_2_Template_ion_button_click_66_listener","addPhoneNumber","getFormArray","controls","ListingFormComponent_ion_button_5_Template_ion_button_click_0_listener","_r19","goToPreviousStep","ListingFormComponent_ion_button_7_Template_ion_button_click_0_listener","_r20","goToNextStep","listing","id","ListingFormComponent","constructor","fb","store","formSubmit","currentStep","authUser","initForm","group","title","required","minLength","maxLength","description","type","organization","remote","timeCommitment","hoursPerWeek","min","max","duration","schedule","startDate","endDate","isFlexible","validator","dateRangeValidator","skills","array","requirements","responsibilities","benefits","contactInformation","emails","phoneNumbers","addresses","_group$get","_group$get2","start","value","end","Date","dateRange","ngOnInit","_this$listing$timeCom","_this$listing$timeCom2","formValue","toDate","toISOString","patchValue","initializeFormArrays","select","pipe","user","uid","dispatch","loadAccount","accountId","account","subscribe","initializeFormFromAccount","_account$contactInfor","_account$contactInfor2","_account$contactInfor3","name","forEach","email","emailForm","push","phone","phoneForm","countryCode","number","address","addressForm","street","city","state","country","zipcode","isPrimaryAddress","markFormGroupTouched","formGroup","Object","values","control","markAsTouched","_listing$skills","_listing$requirements","_listing$responsibili","_listing$benefits","_listing$contactInfor","_listing$contactInfor2","_listing$contactInfor3","clear","skill","skillForm","level","req","resp","benefit","isEmergencyNumber","arrayName","removeAt","submitForm","status","_this$listing","fromDate","iconImage","heroImage","lastModifiedBy","emit","onSubmit","markAllAsTouched","_this$listing2","pattern","getProgress","ɵɵdirectiveInject","i1","FormBuilder","i2","Store","selectors","inputs","outputs","decls","vars","consts","template","ListingFormComponent_Template","rf","ctx","ListingFormComponent_Template_form_ngSubmit_0_listener","ListingFormComponent_ng_container_1_Template","ListingFormComponent_ng_container_2_Template","ListingFormComponent_ion_button_5_Template","ListingFormComponent_ion_button_7_Template","ListingFormComponent_ion_button_8_Template","RouterModule","ListingsPage","ListingDetailPage","ListingEditPage","ListingCreatePage","ApplicantsPage","ApplyPage","AuthGuard","routes","path","component","canActivate","ListingRoutingModule","forChild","imports","exports","CommonModule","IonicModule","StoreModule","EffectsModule","listingsReducer","ListingsEffects","FormsModule","ReactiveFormsModule","TimestampPipe","FormatAddressPipe","HeroComponent","PhoneFormatPipe","SharedModule","ApplicantDetailsModalComponent","ListingModule","forFeature","declarations","StoreFeatureModule","EffectsFeatureModule","ListingActions","metaService","ionViewWillEnter","updateMetaTags","url","image","card","createdBy","createListing","MetaService","ListingCreatePage_Template","ListingCreatePage_Template_app_listing_form_formSubmit_7_listener","$event","serverTimestamp","ListingsActions","ɵɵsanitizeUrl","ɵɵpureFunction1","_c0","_c1","HeroComponent_div_34_ion_button_3_Template_ion_button_click_0_listener","_r2","togglePublishStatus","_c2","HeroComponent_div_34_ion_button_1_Template","HeroComponent_div_34_ion_button_2_Template","HeroComponent_div_34_ion_button_3_Template","HeroComponent_div_34_ion_button_4_Template","isOwner","showButtons","getCities","_this$listing$contact","length","map","join","newStatus","updatedListing","lastModifiedAt","updateListing","HeroComponent_Template","HeroComponent_div_5_Template","HeroComponent_div_34_Template","ɵɵtextInterpolate","combineLatest","selectListingById","responsibility_r1","ListingDetailPage_ng_container_3_ion_card_16_div_7_Template","listing_r2","requirement_r3","ListingDetailPage_ng_container_3_ion_card_18_div_7_Template","benefit_r4","ListingDetailPage_ng_container_3_ion_card_20_div_7_Template","ListingDetailPage_ng_container_3_ion_card_23_div_7_ion_badge_6_Template","skill_r5","ListingDetailPage_ng_container_3_ion_card_23_div_7_Template","ListingDetailPage_ng_container_3_ion_card_46_div_7_ion_badge_9_Template","address_r6","ɵɵtextInterpolate2","ListingDetailPage_ng_container_3_ion_card_46_div_7_Template","ListingDetailPage_ng_container_3_ion_card_46_ion_badge_8_Template","email_r7","phone_r8","ListingDetailPage_ng_container_3_ion_card_48_div_7_Template","ListingDetailPage_ng_container_3_ion_card_48_div_8_Template","ListingDetailPage_ng_container_3_ion_card_16_Template","ListingDetailPage_ng_container_3_ion_card_18_Template","ListingDetailPage_ng_container_3_ion_card_20_Template","ListingDetailPage_ng_container_3_ion_card_23_Template","ListingDetailPage_ng_container_3_div_44_Template","ListingDetailPage_ng_container_3_ion_card_46_Template","ListingDetailPage_ng_container_3_ion_card_48_Template","ctx_r8","isOwner$","undefined","route","subscription","listingId","snapshot","paramMap","listing$","loadListingById","next","benefitsText","skillsText","error","ionViewWillLeave","unsubscribe","i3","ActivatedRoute","ListingDetailPage_Template","ListingDetailPage_ng_container_3_Template","of","router","authUser$","navigate","Router","ListingEditPage_Template","ListingEditPage_Template_app_listing_form_formSubmit_7_listener","BehaviorSubject","selectFilteredListings","selectLoading","selectError","type_r1","ctx_r1","getIconForType","error_r3","getListingLocation","listing_r4","ListingsPage_ion_item_16_ion_badge_14_Template","ListingsPage_ion_item_16_p_15_Template","ɵɵpipeBind3","navCtrl","pageSize","currentPageSubject","currentPage$","asObservable","listings$","loading$","error$","totalItems$","listings","totalPages$","totalItems","Math","ceil","paginatedListings$","currentPage","startIndex","slice","loadListings","navigateForward","viewListing","filterListings","event","listingType","detail","searchListings","query","doRefresh","setTimeout","target","complete","primaryAddress","iconMap","volunteer","job","project","resource","service","all","internship","gig","toLowerCase","goToPage","pageNumber","NavController","ListingsPage_Template","ListingsPage_Template_ion_searchbar_ionInput_3_listener","ListingsPage_Template_ion_segment_ionChange_5_listener","ListingsPage_ion_segment_button_6_Template","ListingsPage_Template_ion_refresher_ionRefresh_9_listener","ListingsPage_ng_container_11_Template","ListingsPage_ng_container_13_Template","ListingsPage_ion_item_16_Template","ListingsPage_ion_fab_18_Template","ListingsPage_Template_app_pagination_pageChange_21_listener","Observable","selectRelatedAccountsByListingId","listing_r1","account_r4","applicationDate","ApplicantsPage_ion_list_7_ion_item_1_Template_ion_item_click_0_listener","$implicit","openApplicantDetailsModal","ApplicantsPage_ion_list_7_ion_item_1_img_2_Template","ApplicantsPage_ion_list_7_ion_item_1_h3_6_Template","ApplicantsPage_ion_list_7_ion_item_1_p_8_Template","ApplicantsPage_ion_list_7_ion_item_1_p_10_Template","ApplicantsPage_ion_list_7_ion_item_1_ion_badge_12_Template","firstName","lastName","ApplicantsPage_ion_list_7_ion_item_1_Template","paginatedAccounts$","error_r5","modalController","relatedAccounts$","maxVisiblePages","loadListingRelatedAccounts","loading","setPaginationCalculations","accounts","pageNumbers$","totalPages","startPage","floor","endPage","Array","from","_","i","currentPageStart$","currentPageEnd$","pagination$","pageNumbers","currentPageRange$","total","_this","_asyncToGenerator","openModal","relatedAccount","_this2","modal","create","componentProps","present","nextPage","previousPage","i4","ModalController","ApplicantsPage_Template","ApplicantsPage_app_hero_3_Template","ApplicantsPage_ion_loading_5_Template","ApplicantsPage_ion_list_7_Template","ApplicantsPage_ion_text_9_Template","ApplicantsPage_Template_app_pagination_pageChange_12_listener","notes","ɵɵpropertyInterpolate","resumeFile","coverLetterFile","ApplicantDetailsModalComponent_ion_content_7_p_18_Template","ApplicantDetailsModalComponent_ion_content_7_p_19_Template","ApplicantDetailsModalComponent_ion_content_7_ion_card_20_Template","ApplicantDetailsModalComponent_ion_content_7_ion_card_21_Template","closeModal","dismiss","copyEmail","navigator","clipboard","writeText","showToast","rejectApplication","updateApplicationStatus","acceptApplication","viewProfile","successMessage","updatedAccount","updateRelatedAccount","message","toast","document","createElement","body","appendChild","ApplicantDetailsModalComponent_Template","ApplicantDetailsModalComponent_Template_ion_button_click_5_listener","ApplicantDetailsModalComponent_ion_content_7_Template","ApplicantDetailsModalComponent_Template_ion_button_click_12_listener","ApplicantDetailsModalComponent_Template_ion_button_click_15_listener","ApplicantDetailsModalComponent_Template_ion_button_click_19_listener","ApplicantDetailsModalComponent_Template_ion_button_click_22_listener","ctx_r2","resumeFileName","coverLetterFileName","alertController","applyForm","lastNameParts","split","phoneNumber","onFileSelect","input","files","file","showAlert","size","formatPhoneNumber","replace","markFormAsDirty","submitApplication","console","log","keys","key","updateValueAndValidity","header","alert","buttons","i5","AlertController","viewQuery","ApplyPage_Query","ApplyPage_Template_form_ngSubmit_4_listener","_r1","ApplyPage_ion_note_20_Template","ApplyPage_ion_note_21_Template","ApplyPage_ion_note_26_Template","ApplyPage_ion_note_27_Template","ApplyPage_ion_note_32_Template","ApplyPage_ion_note_33_Template","ApplyPage_Template_ion_input_ionInput_37_listener","ApplyPage_ion_note_38_Template","ApplyPage_ion_note_39_Template","ApplyPage_Template_ion_button_click_56_listener","resumeInput_r2","ɵɵreference","click","ApplyPage_Template_input_change_58_listener","ApplyPage_ion_text_60_Template","ApplyPage_Template_ion_button_click_73_listener","coverLetterInput_r4","ApplyPage_Template_input_change_75_listener","ApplyPage_ion_text_77_Template","tmp_8_0","transform","parts","part","pure","cleaned","match","intlCode","seconds","nanoseconds","createEffect","ofType","catchError","debounceTime","mergeMap","withLatestFrom","selectAreListingsFresh","selectAreRelatedAccountsFresh","actions$","firestoreService","toastController","createListing$","newListing","createdAt","addDocument","docId","createListingSuccess","createListingFailure","loadListings$","areFresh","getCollectionWithCondition","loadListingsSuccess","loadListingsFailure","loadListingById$","loadListingByIdSuccess","getDocument","fetchedListing","Error","loadListingByIdFailure","updateListing$","updateDocument","updateListingSuccess","updateListingFailure","deleteListing$","deleteListing","deleteDocument","deleteListingSuccess","deleteListingFailure","submitApplication$","submitApplicationToFirestore","submitApplicationSuccess","submitApplicationFailure","loadListingRelatedAccounts$","getDocuments","relatedAccounts","loadListingRelatedAccountsSuccess","loadListingRelatedAccountsFailure","updateRelatedAccount$","updateRelatedAccountSuccess","updateRelatedAccountFailure","applicationId","uploadFile","setDocument","merge","color","then","ɵɵinject","Actions","FirestoreService","ToastController","factory","ɵfac","createFeatureSelector","createSelector","LISTINGS_TTL","isStale","lastUpdated","ttl","now","selectListingsState","selectAllListings","entities","selectSelectedListing","selectedListingId","selectFilterType","filterType","selectSearchQuery","searchQuery","filteredListings","queryLower","includes","selectListingsLastUpdated","listingsLastUpdated","selectRelatedAccountsLastUpdated","relatedAccountsLastUpdated"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}