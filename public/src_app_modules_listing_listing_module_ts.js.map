{"version":3,"file":"src_app_modules_listing_listing_module_ts.js","mappings":"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","sources":["./src/app/modules/listing/components/listing-form/listing-form.component.ts","./src/app/modules/listing/components/listing-form/listing-form.component.html","./src/app/modules/listing/listing-routing.module.ts","./src/app/modules/listing/listing.module.ts","./src/app/modules/listing/pages/listing-create/listing-create.page.ts","./src/app/modules/listing/pages/listing-create/listing-create.page.html","./src/app/modules/listing/pages/listing-detail/components/hero/hero.component.ts","./src/app/modules/listing/pages/listing-detail/components/hero/hero.component.html","./src/app/modules/listing/pages/listing-detail/listing-detail.page.ts","./src/app/modules/listing/pages/listing-detail/listing-detail.page.html","./src/app/modules/listing/pages/listing-edit/listing-edit.page.ts","./src/app/modules/listing/pages/listing-edit/listing-edit.page.html","./src/app/modules/listing/pages/listings/listings.page.ts","./src/app/modules/listing/pages/listings/listings.page.html","./src/app/modules/listing/relatedAccount/pages/applicants/applicants.page.ts","./src/app/modules/listing/relatedAccount/pages/applicants/applicants.page.html","./src/app/modules/listing/relatedAccount/pages/applicants/components/applicant-details-modal/applicant-details-modal.component.ts","./src/app/modules/listing/relatedAccount/pages/applicants/components/applicant-details-modal/applicant-details-modal.component.html","./src/app/modules/listing/relatedAccount/pages/apply/apply.page.ts","./src/app/modules/listing/relatedAccount/pages/apply/apply.page.html","./src/app/shared/pipes/format-address.pipe.ts","./src/app/shared/pipes/phone-format.pipe.ts","./src/app/shared/pipes/timestamp.pipe.ts","./src/app/state/effects/listings.effects.ts","./src/app/state/selectors/listings.selectors.ts"],"sourcesContent":["/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\nimport {Component, Input, Output, EventEmitter, OnInit} from \"@angular/core\";\nimport {FormBuilder, FormGroup, Validators, FormArray} from \"@angular/forms\";\nimport {Listing, SkillRequirement} from \"../../../../models/listing.model\";\nimport {Timestamp} from \"firebase/firestore\";\nimport {Store} from \"@ngrx/store\";\nimport {filter, first, switchMap, take, tap} from \"rxjs\";\nimport {selectAuthUser} from \"../../../../state/selectors/auth.selectors\";\nimport * as AccountActions from \"../../../../state/actions/account.actions\";\nimport {Account} from \"../../../../models/account.model\";\nimport {selectAccountById} from \"../../../../state/selectors/account.selectors\";\nimport {AuthUser} from \"../../../../models/auth-user.model\";\n\n@Component({\n  selector: \"app-listing-form\",\n  templateUrl: \"./listing-form.component.html\",\n  styleUrls: [\"./listing-form.component.scss\"],\n})\nexport class ListingFormComponent implements OnInit {\n  @Input() listing: Listing | null = null;\n  @Output() formSubmit = new EventEmitter<any>();\n  currentStep = 1; // Start at the first step\n  authUser: AuthUser | null = null;\n\n  listingForm!: FormGroup;\n  listingTypes = [\"volunteer\", \"job\", \"internship\", \"gig\"];\n  skillLevels = [\"beginner\", \"intermediate\", \"advanced\"];\n\n  constructor(\n    private fb: FormBuilder,\n    private store: Store,\n  ) {\n    this.initForm();\n  }\n\n  private initForm() {\n    this.listingForm = this.fb.group({\n      title: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(100),\n        ],\n      ],\n      description: [\n        \"\",\n        [\n          Validators.required,\n          Validators.minLength(10),\n          Validators.maxLength(1000),\n        ],\n      ],\n      type: [\"volunteer\", Validators.required],\n      organization: [\"\", [Validators.required, Validators.minLength(2)]],\n      remote: [false],\n      timeCommitment: this.fb.group(\n        {\n          hoursPerWeek: [\n            \"\",\n            [Validators.required, Validators.min(1), Validators.max(168)],\n          ],\n          duration: [\"\", Validators.required],\n          schedule: [\"\", Validators.required],\n          startDate: [null, Validators.required],\n          endDate: [null],\n          isFlexible: [false],\n        },\n        {validator: this.dateRangeValidator},\n      ),\n      skills: this.fb.array([]),\n      requirements: this.fb.array([]),\n      responsibilities: this.fb.array([]),\n      benefits: this.fb.array([]),\n      contactInformation: this.fb.group({\n        emails: this.fb.array([]),\n        phoneNumbers: this.fb.array([]),\n        addresses: this.fb.array([]),\n      }),\n    });\n  }\n\n  dateRangeValidator(group: FormGroup) {\n    const start = group.get(\"startDate\")?.value;\n    const end = group.get(\"endDate\")?.value;\n    if (start && end && new Date(start) > new Date(end)) {\n      return {dateRange: true};\n    }\n    return null;\n  }\n\n  ngOnInit() {\n    if (this.listing) {\n      const formValue = {\n        ...this.listing,\n        timeCommitment: {\n          ...this.listing.timeCommitment,\n          startDate: this.listing.timeCommitment.startDate\n            ?.toDate()\n            .toISOString(),\n          endDate: this.listing.timeCommitment.endDate?.toDate().toISOString(),\n        },\n      };\n      this.listingForm.patchValue(formValue);\n      this.initializeFormArrays(this.listing);\n    } else {\n      // New listing - populate from account\n      this.store\n        .select(selectAuthUser)\n        .pipe(\n          first(),\n          tap((user) => {\n            if (user?.uid) {\n              this.store.dispatch(\n                AccountActions.loadAccount({accountId: user.uid}),\n              );\n              this.authUser = user;\n            }\n          }),\n          switchMap((user) => this.store.select(selectAccountById(user!.uid))),\n          filter((account): account is Account => account !== null),\n          take(1),\n        )\n        .subscribe((account) => {\n          // Only call one initialization method\n          this.initializeFormFromAccount(account);\n        });\n    }\n  }\n\n  private initializeFormFromAccount(account: Account) {\n    this.listingForm.patchValue({\n      organization: account.name,\n    });\n\n    // Initialize contact information arrays\n    account.contactInformation?.emails?.forEach((email) => {\n      const emailForm = this.fb.group({\n        name: [email.name],\n        email: [email.email],\n      });\n      (this.listingForm.get(\"contactInformation.emails\") as FormArray).push(\n        emailForm,\n      );\n    });\n\n    account.contactInformation?.phoneNumbers?.forEach((phone) => {\n      const phoneForm = this.fb.group({\n        type: [phone.type],\n        countryCode: [phone.countryCode],\n        number: [phone.number],\n      });\n      (\n        this.listingForm.get(\"contactInformation.phoneNumbers\") as FormArray\n      ).push(phoneForm);\n    });\n\n    account.contactInformation?.addresses?.forEach((address) => {\n      const addressForm = this.fb.group({\n        name: [address?.name],\n        street: [address?.street],\n        city: [address?.city],\n        state: [address?.state],\n        country: [address?.country],\n        zipcode: [address?.zipcode],\n        isPrimaryAddress: [address?.isPrimaryAddress],\n      });\n      (this.listingForm.get(\"contactInformation.addresses\") as FormArray).push(\n        addressForm,\n      );\n    });\n  }\n\n  private markFormGroupTouched(formGroup: FormGroup) {\n    Object.values(formGroup.controls).forEach((control) => {\n      control.markAsTouched();\n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n\n  private initializeFormArrays(listing: Listing) {\n    // Clear existing arrays\n    (this.listingForm.get(\"skills\") as FormArray).clear();\n    (this.listingForm.get(\"requirements\") as FormArray).clear();\n    (this.listingForm.get(\"responsibilities\") as FormArray).clear();\n    (this.listingForm.get(\"benefits\") as FormArray).clear();\n    (this.listingForm.get(\"contactInformation.emails\") as FormArray).clear();\n    (\n      this.listingForm.get(\"contactInformation.phoneNumbers\") as FormArray\n    ).clear();\n    (this.listingForm.get(\"contactInformation.addresses\") as FormArray).clear();\n\n    // Initialize skills\n    listing.skills?.forEach((skill) => {\n      const skillForm = this.fb.group({\n        name: [skill.name, Validators.required],\n        level: [skill.level],\n        required: [skill.required],\n      });\n      (this.listingForm.get(\"skills\") as FormArray).push(skillForm);\n    });\n\n    // Initialize requirements\n    listing.requirements?.forEach((req) => {\n      const control = this.fb.control(req, Validators.required);\n      (this.listingForm.get(\"requirements\") as FormArray).push(control);\n    });\n\n    // Initialize responsibilities\n    listing.responsibilities?.forEach((resp) => {\n      const control = this.fb.control(resp, Validators.required);\n      (this.listingForm.get(\"responsibilities\") as FormArray).push(control);\n    });\n\n    // Initialize benefits\n    listing.benefits?.forEach((benefit) => {\n      const control = this.fb.control(benefit, Validators.required);\n      (this.listingForm.get(\"benefits\") as FormArray).push(control);\n    });\n\n    // Initialize contact information\n    listing.contactInformation?.emails?.forEach((email) => {\n      const emailForm = this.fb.group({\n        name: [email.name],\n        email: [email.email, [Validators.required, Validators.email]],\n      });\n      (this.listingForm.get(\"contactInformation.emails\") as FormArray).push(\n        emailForm,\n      );\n    });\n\n    listing.contactInformation?.phoneNumbers?.forEach((phone) => {\n      const phoneForm = this.fb.group({\n        type: [phone.type],\n        countryCode: [phone.countryCode],\n        number: [phone.number, Validators.required],\n        isEmergencyNumber: [phone.isEmergencyNumber],\n      });\n      (\n        this.listingForm.get(\"contactInformation.phoneNumbers\") as FormArray\n      ).push(phoneForm);\n    });\n\n    listing.contactInformation?.addresses?.forEach((address) => {\n      const addressForm = this.fb.group({\n        name: [address?.name],\n        street: [address?.street],\n        city: [address?.city],\n        state: [address?.state],\n        country: [address?.country],\n        zipcode: [address?.zipcode],\n        isPrimaryAddress: [address?.isPrimaryAddress],\n      });\n      (this.listingForm.get(\"contactInformation.addresses\") as FormArray).push(\n        addressForm,\n      );\n    });\n  }\n\n  addSkill(skill?: SkillRequirement) {\n    const skillForm = this.fb.group({\n      name: [skill?.name || \"\", Validators.required],\n      level: [skill?.level || \"beginner\"],\n      required: [skill?.required || true],\n    });\n    (this.listingForm.get(\"skills\") as FormArray).push(skillForm);\n  }\n\n  addArrayItem(arrayName: string, value: string = \"\") {\n    const control = this.fb.control(value, Validators.required);\n    (this.listingForm.get(arrayName) as FormArray).push(control);\n  }\n\n  addEmail() {\n    const emailForm = this.fb.group({\n      name: [\"\"],\n      email: [\"\", [Validators.required, Validators.email]],\n    });\n    (this.listingForm.get(\"contactInformation.emails\") as FormArray).push(\n      emailForm,\n    );\n  }\n\n  addPhoneNumber() {\n    const phoneForm = this.fb.group({\n      type: [\"Mobile\"],\n      countryCode: [\"+1\"],\n      number: [\"\", Validators.required],\n    });\n    (this.listingForm.get(\"contactInformation.phoneNumbers\") as FormArray).push(\n      phoneForm,\n    );\n  }\n\n  removeArrayItem(arrayName: string, index: number) {\n    (this.listingForm.get(arrayName) as FormArray).removeAt(index);\n  }\n\n  getFormArray(arrayName: string) {\n    return this.listingForm.get(arrayName) as FormArray;\n  }\n\n  private submitForm(status: \"draft\" | \"active\" | \"filled\" | \"expired\") {\n    if (this.listingForm.valid) {\n      this.store\n        .select(selectAuthUser)\n        .pipe(take(1))\n        .subscribe((user) => {\n          const formValue = this.listingForm.value;\n          const listing = {\n            ...formValue,\n            id: this.listing?.id || null,\n            timeCommitment: {\n              ...formValue.timeCommitment,\n              startDate: formValue.timeCommitment.startDate\n                ? Timestamp.fromDate(\n                    new Date(formValue.timeCommitment.startDate),\n                  )\n                : null,\n              endDate: formValue.timeCommitment.endDate\n                ? Timestamp.fromDate(new Date(formValue.timeCommitment.endDate))\n                : null,\n            },\n            status,\n            accountId: user?.uid,\n            iconImage: user?.iconImage || \"\",\n            heroImage: user?.heroImage || \"\",\n            lastModifiedBy: user?.uid,\n          };\n          this.formSubmit.emit(listing);\n        });\n    } else {\n      this.markFormGroupTouched(this.listingForm);\n    }\n  }\n\n  onSubmit() {\n    if (this.listingForm.invalid) {\n      this.listingForm.markAllAsTouched();\n      return;\n    }\n    if (this.listingForm.valid) {\n      // If listing exists, keep current status, otherwise set as draft\n      const status = this.listing?.id ? this.listing.status : \"draft\";\n      this.submitForm(status as \"draft\" | \"active\" | \"filled\" | \"expired\");\n    } else {\n      this.markFormGroupTouched(this.listingForm);\n    }\n  }\n\n  addAddress() {\n    const addressForm = this.fb.group({\n      name: [\"\"],\n      street: [\"\", Validators.required],\n      city: [\"\", Validators.required],\n      state: [\"\", Validators.required],\n      country: [\"\", Validators.required],\n      zipcode: [\n        \"\",\n        [Validators.required, Validators.pattern(\"^[0-9]{5}(?:-[0-9]{4})?$\")],\n      ],\n      isPrimaryAddress: [false],\n    });\n    (this.listingForm.get(\"contactInformation.addresses\") as FormArray).push(\n      addressForm,\n    );\n  }\n\n  goToNextStep() {\n    if (this.listingForm.invalid) {\n      this.listingForm.markAllAsTouched();\n      return;\n    }\n    this.currentStep++;\n  }\n\n  goToPreviousStep() {\n    if (this.currentStep > 1) {\n      this.currentStep--;\n    }\n  }\n\n  getProgress() {\n    return this.currentStep / 2; // Progress value for the progress bar\n  }\n}\n","<!--\nNonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\nCopyright (C) 2023  ASCENDynamics NFP\n\nThis file is part of Nonprofit Social Networking Platform.\n\nNonprofit Social Networking Platform is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nNonprofit Social Networking Platform is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n-->\n<form [formGroup]=\"listingForm\" (ngSubmit)=\"onSubmit()\">\n  <!-- Step 1: Basic Information & Time Commitment -->\n  <ng-container *ngIf=\"currentStep === 1\"\n    ><!-- Basic Information -->\n    <ion-card>\n      <ion-card-header>\n        <ion-card-title>Basic Information</ion-card-title>\n      </ion-card-header>\n      <ion-card-content>\n        <ion-grid>\n          <ion-row>\n            <!-- Title Field -->\n            <ion-col size=\"12\" size-md=\"6\">\n              <ion-input\n                label=\"Title\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                formControlName=\"title\"\n                placeholder=\"Enter position title\"\n                [class.ion-invalid]=\"\n                  listingForm.get('title')?.invalid &&\n                  listingForm.get('title')?.touched\n                \"\n                [class.ion-valid]=\"listingForm.get('title')?.valid\"\n              ></ion-input>\n              <ion-note\n                color=\"danger\"\n                *ngIf=\"\n                  listingForm.get('title')?.invalid &&\n                  listingForm.get('title')?.touched\n                \"\n              >\n                <span *ngIf=\"listingForm.get('title')?.errors?.['required']\">\n                  Title is required.\n                </span>\n                <span *ngIf=\"listingForm.get('title')?.errors?.['minlength']\">\n                  Title must be at least 3 characters.\n                </span>\n                <span *ngIf=\"listingForm.get('title')?.errors?.['maxlength']\">\n                  Title cannot exceed 100 characters.\n                </span>\n              </ion-note>\n            </ion-col>\n\n            <!-- Organization Field -->\n            <ion-col size=\"12\" size-md=\"6\">\n              <ion-input\n                label=\"Organization\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                formControlName=\"organization\"\n                placeholder=\"Enter organization name\"\n                [class.ion-invalid]=\"\n                  listingForm.get('organization')?.invalid &&\n                  listingForm.get('organization')?.touched\n                \"\n                [class.ion-valid]=\"listingForm.get('organization')?.valid\"\n              ></ion-input>\n              <ion-note\n                color=\"danger\"\n                *ngIf=\"\n                  listingForm.get('organization')?.invalid &&\n                  listingForm.get('organization')?.touched\n                \"\n              >\n                <span\n                  *ngIf=\"listingForm.get('organization')?.errors?.['required']\"\n                >\n                  Organization is required.\n                </span>\n                <span\n                  *ngIf=\"listingForm.get('organization')?.errors?.['minlength']\"\n                >\n                  Organization must be at least 2 characters.\n                </span>\n                <span\n                  *ngIf=\"listingForm.get('organization')?.errors?.['maxlength']\"\n                >\n                  Organization cannot exceed 100 characters.\n                </span>\n              </ion-note>\n            </ion-col>\n          </ion-row>\n\n          <ion-row>\n            <!-- Listing Type Field -->\n            <ion-col size=\"12\" size-md=\"6\">\n              <ion-select\n                label=\"Listing Type\"\n                label-placement=\"stacked\"\n                formControlName=\"type\"\n                fill=\"outline\"\n                [class.ion-invalid]=\"\n                  listingForm.get('type')?.invalid &&\n                  listingForm.get('type')?.touched\n                \"\n              >\n                <ion-select-option\n                  *ngFor=\"let type of listingTypes\"\n                  [value]=\"type\"\n                >\n                  {{ type | titlecase }}\n                </ion-select-option>\n              </ion-select>\n              <ion-note\n                color=\"danger\"\n                *ngIf=\"\n                  listingForm.get('type')?.invalid &&\n                  listingForm.get('type')?.touched\n                \"\n              >\n                Listing type is required.\n              </ion-note>\n            </ion-col>\n\n            <!-- Remote Position Toggle -->\n            <ion-col size=\"12\" size-md=\"6\">\n              <ion-item lines=\"none\">\n                <ion-label>Remote Position Available</ion-label>\n                <ion-toggle formControlName=\"remote\"></ion-toggle>\n              </ion-item>\n            </ion-col>\n          </ion-row>\n\n          <!-- Description Field -->\n          <ion-row>\n            <ion-col size=\"12\">\n              <ion-textarea\n                label=\"Description\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                formControlName=\"description\"\n                rows=\"6\"\n                placeholder=\"Describe the role\"\n                [class.ion-invalid]=\"\n                  listingForm.get('description')?.invalid &&\n                  listingForm.get('description')?.touched\n                \"\n              ></ion-textarea>\n              <ion-note\n                color=\"danger\"\n                *ngIf=\"\n                  listingForm.get('description')?.invalid &&\n                  listingForm.get('description')?.touched\n                \"\n              >\n                <span\n                  *ngIf=\"listingForm.get('description')?.errors?.['required']\"\n                >\n                  Description is required.\n                </span>\n                <span\n                  *ngIf=\"listingForm.get('description')?.errors?.['minlength']\"\n                >\n                  Description must be at least 10 characters.\n                </span>\n                <span\n                  *ngIf=\"listingForm.get('description')?.errors?.['maxlength']\"\n                >\n                  Description cannot exceed 1000 characters.\n                </span>\n              </ion-note>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </ion-card-content>\n    </ion-card>\n\n    <!-- Time Commitment -->\n    <ion-card>\n      <ion-card-header>\n        <ion-card-title>Time Commitment</ion-card-title>\n      </ion-card-header>\n      <ion-card-content formGroupName=\"timeCommitment\">\n        <ion-grid>\n          <ion-row>\n            <!-- Hours per Week Field -->\n            <ion-col size=\"12\" size-md=\"6\">\n              <ion-input\n                label=\"Hours per Week\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                type=\"number\"\n                formControlName=\"hoursPerWeek\"\n                placeholder=\"Enter hours (e.g., 20)\"\n                [class.ion-invalid]=\"\n                  listingForm.get('timeCommitment.hoursPerWeek')?.invalid &&\n                  listingForm.get('timeCommitment.hoursPerWeek')?.touched\n                \"\n              ></ion-input>\n              <ion-note\n                color=\"danger\"\n                *ngIf=\"\n                  listingForm.get('timeCommitment.hoursPerWeek')?.invalid &&\n                  listingForm.get('timeCommitment.hoursPerWeek')?.touched\n                \"\n              >\n                <span\n                  *ngIf=\"\n                    listingForm.get('timeCommitment.hoursPerWeek')?.errors?.[\n                      'required'\n                    ]\n                  \"\n                >\n                  Hours per week is required.\n                </span>\n                <span\n                  *ngIf=\"\n                    listingForm.get('timeCommitment.hoursPerWeek')?.errors?.[\n                      'min'\n                    ]\n                  \"\n                >\n                  Minimum is 1 hour.\n                </span>\n                <span\n                  *ngIf=\"\n                    listingForm.get('timeCommitment.hoursPerWeek')?.errors?.[\n                      'max'\n                    ]\n                  \"\n                >\n                  Maximum is 168 hours.\n                </span>\n              </ion-note>\n            </ion-col>\n\n            <!-- Duration Field -->\n            <ion-col size=\"12\" size-md=\"6\">\n              <ion-input\n                label=\"Duration\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                formControlName=\"duration\"\n                placeholder=\"Enter duration (e.g., 6 months)\"\n                [class.ion-invalid]=\"\n                  listingForm.get('timeCommitment.duration')?.invalid &&\n                  listingForm.get('timeCommitment.duration')?.touched\n                \"\n              ></ion-input>\n              <ion-note\n                color=\"danger\"\n                *ngIf=\"\n                  listingForm.get('timeCommitment.duration')?.invalid &&\n                  listingForm.get('timeCommitment.duration')?.touched\n                \"\n              >\n                Duration is required.\n              </ion-note>\n            </ion-col>\n          </ion-row>\n\n          <!-- Schedule Field -->\n          <ion-row>\n            <ion-col>\n              <ion-input\n                label=\"Schedule\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                formControlName=\"schedule\"\n                placeholder=\"Enter schedule (e.g., Mon-Fri, 9am-5pm)\"\n                [class.ion-invalid]=\"\n                  listingForm.get('timeCommitment.schedule')?.invalid &&\n                  listingForm.get('timeCommitment.schedule')?.touched\n                \"\n              ></ion-input>\n              <ion-note\n                color=\"danger\"\n                *ngIf=\"\n                  listingForm.get('timeCommitment.schedule')?.invalid &&\n                  listingForm.get('timeCommitment.schedule')?.touched\n                \"\n              >\n                Schedule is required.\n              </ion-note>\n            </ion-col>\n          </ion-row>\n\n          <!-- Start Date and End Date Fields -->\n          <ion-row>\n            <!-- Start Date Field -->\n            <ion-col size=\"12\" size-md=\"6\">\n              <ion-datetime\n                label=\"Start Date\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                formControlName=\"startDate\"\n                presentation=\"date\"\n                [preferWheel]=\"false\"\n                [class.ion-invalid]=\"\n                  listingForm.get('timeCommitment.startDate')?.invalid &&\n                  listingForm.get('timeCommitment.startDate')?.touched\n                \"\n              ></ion-datetime>\n              <ion-note\n                color=\"danger\"\n                *ngIf=\"\n                  listingForm.get('timeCommitment.startDate')?.invalid &&\n                  listingForm.get('timeCommitment.startDate')?.touched\n                \"\n              >\n                Start date is required.\n              </ion-note>\n            </ion-col>\n\n            <!-- End Date Field -->\n            <ion-col size=\"12\" size-md=\"6\">\n              <ion-datetime\n                label=\"End Date\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                formControlName=\"endDate\"\n                presentation=\"date\"\n                [preferWheel]=\"false\"\n                [class.ion-invalid]=\"\n                  listingForm.get('timeCommitment')?.errors?.['dateRange']\n                \"\n              ></ion-datetime>\n              <ion-note\n                color=\"danger\"\n                *ngIf=\"listingForm.get('timeCommitment')?.errors?.['dateRange']\"\n              >\n                End date must be after start date.\n              </ion-note>\n            </ion-col>\n          </ion-row>\n\n          <!-- Flexible Schedule Toggle -->\n          <ion-row>\n            <ion-col>\n              <ion-item lines=\"none\">\n                <ion-label>Flexible Schedule</ion-label>\n                <ion-toggle formControlName=\"isFlexible\"></ion-toggle>\n              </ion-item>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </ion-card-content>\n    </ion-card>\n  </ng-container>\n\n  <!-- Step 2: Skills, Requirements, Responsibilities, Benefits, Contact Information -->\n  <ng-container *ngIf=\"currentStep === 2\">\n    <!-- Skills -->\n    <ion-card>\n      <ion-card-header>\n        <ion-card-title>Skills</ion-card-title>\n      </ion-card-header>\n      <ion-card-content formArrayName=\"skills\">\n        <div\n          *ngFor=\"let skill of getFormArray('skills').controls; let i = index\"\n          [formGroupName]=\"i\"\n        >\n          <ion-row>\n            <ion-col size=\"6\">\n              <ion-input\n                formControlName=\"name\"\n                label=\"Skill Name\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                placeholder=\"Enter skill\"\n              ></ion-input>\n            </ion-col>\n            <ion-col size=\"3\">\n              <ion-select\n                formControlName=\"level\"\n                label=\"Skill Level\"\n                label-placement=\"stacked\"\n                fill=\"outline\"\n              >\n                <ion-select-option\n                  *ngFor=\"let level of skillLevels\"\n                  [value]=\"level\"\n                >\n                  {{ level | titlecase }}\n                </ion-select-option>\n              </ion-select>\n            </ion-col>\n            <ion-col size=\"2\">\n              <ion-item lines=\"none\">\n                <ion-checkbox formControlName=\"required\"></ion-checkbox>\n                <ion-label>Required</ion-label>\n              </ion-item>\n            </ion-col>\n            <ion-col size=\"1\">\n              <ion-button fill=\"clear\" (click)=\"removeArrayItem('skills', i)\">\n                <ion-icon name=\"trash-outline\"></ion-icon>\n              </ion-button>\n            </ion-col>\n          </ion-row>\n        </div>\n        <ion-button fill=\"clear\" (click)=\"addSkill()\">\n          <ion-icon slot=\"start\" name=\"add-circle-outline\"></ion-icon>\n          Add Skill\n        </ion-button>\n      </ion-card-content>\n    </ion-card>\n\n    <!-- Requirements -->\n    <ion-card>\n      <ion-card-header>\n        <ion-card-title>Requirements</ion-card-title>\n      </ion-card-header>\n      <ion-card-content formArrayName=\"requirements\">\n        <div\n          *ngFor=\"\n            let req of getFormArray('requirements').controls;\n            let i = index\n          \"\n        >\n          <ion-row>\n            <ion-col size=\"10\">\n              <ion-input\n                [formControlName]=\"i\"\n                label=\"Requirement\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                type=\"text\"\n                placeholder=\"Enter requirement\"\n              ></ion-input>\n            </ion-col>\n            <ion-col size=\"2\">\n              <ion-button\n                fill=\"clear\"\n                (click)=\"removeArrayItem('requirements', i)\"\n              >\n                <ion-icon name=\"trash-outline\"></ion-icon>\n              </ion-button>\n            </ion-col>\n          </ion-row>\n        </div>\n        <ion-button fill=\"clear\" (click)=\"addArrayItem('requirements')\">\n          <ion-icon slot=\"start\" name=\"add-circle-outline\"></ion-icon>\n          Add Requirement\n        </ion-button>\n      </ion-card-content>\n    </ion-card>\n\n    <!-- Responsibilities -->\n    <ion-card>\n      <ion-card-header>\n        <ion-card-title>Responsibilities</ion-card-title>\n      </ion-card-header>\n      <ion-card-content formArrayName=\"responsibilities\">\n        <div\n          *ngFor=\"\n            let responsibility of getFormArray('responsibilities').controls;\n            let i = index\n          \"\n        >\n          <ion-row>\n            <ion-col size=\"10\">\n              <ion-input\n                [formControlName]=\"i\"\n                label=\"Responsibility\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                placeholder=\"Enter responsibility\"\n              ></ion-input>\n            </ion-col>\n            <ion-col size=\"2\">\n              <ion-button\n                fill=\"clear\"\n                (click)=\"removeArrayItem('responsibilities', i)\"\n              >\n                <ion-icon name=\"trash-outline\"></ion-icon>\n              </ion-button>\n            </ion-col>\n          </ion-row>\n        </div>\n        <ion-button fill=\"clear\" (click)=\"addArrayItem('responsibilities')\">\n          <ion-icon slot=\"start\" name=\"add-circle-outline\"></ion-icon>\n          Add Responsibility\n        </ion-button>\n      </ion-card-content>\n    </ion-card>\n\n    <!-- Benefits -->\n    <ion-card>\n      <ion-card-header>\n        <ion-card-title>Benefits</ion-card-title>\n      </ion-card-header>\n      <ion-card-content formArrayName=\"benefits\">\n        <div\n          *ngFor=\"\n            let benefit of getFormArray('benefits').controls;\n            let i = index\n          \"\n        >\n          <ion-row>\n            <ion-col size=\"10\">\n              <ion-input\n                [formControlName]=\"i\"\n                label=\"Benefit\"\n                label-placement=\"floating\"\n                fill=\"outline\"\n                placeholder=\"Enter benefit\"\n              ></ion-input>\n            </ion-col>\n            <ion-col size=\"2\">\n              <ion-button fill=\"clear\" (click)=\"removeArrayItem('benefits', i)\">\n                <ion-icon name=\"trash-outline\"></ion-icon>\n              </ion-button>\n            </ion-col>\n          </ion-row>\n        </div>\n        <ion-button fill=\"clear\" (click)=\"addArrayItem('benefits')\">\n          <ion-icon slot=\"start\" name=\"add-circle-outline\"></ion-icon>\n          Add Benefit\n        </ion-button>\n      </ion-card-content>\n    </ion-card>\n\n    <!-- Contact Information -->\n    <ion-card>\n      <ion-card-header>\n        <ion-card-title>Contact Information</ion-card-title>\n      </ion-card-header>\n      <ion-card-content formGroupName=\"contactInformation\">\n        <!-- Emails -->\n        <ion-row formArrayName=\"emails\">\n          <ion-col>\n            <ion-item-divider>\n              <ion-label color=\"tertiary\">Emails</ion-label>\n            </ion-item-divider>\n            <div\n              *ngFor=\"\n                let email of getFormArray('contactInformation.emails').controls;\n                let i = index\n              \"\n              [formGroupName]=\"i\"\n            >\n              <ion-row>\n                <ion-col size=\"5\">\n                  <ion-input\n                    formControlName=\"name\"\n                    label=\"Name\"\n                    label-placement=\"floating\"\n                    fill=\"outline\"\n                    placeholder=\"Enter name\"\n                  ></ion-input>\n                </ion-col>\n                <ion-col size=\"5\">\n                  <ion-input\n                    formControlName=\"email\"\n                    label=\"Email\"\n                    label-placement=\"floating\"\n                    fill=\"outline\"\n                    placeholder=\"Enter email\"\n                  ></ion-input>\n                </ion-col>\n                <ion-col size=\"2\">\n                  <ion-button\n                    fill=\"clear\"\n                    (click)=\"removeArrayItem('contactInformation.emails', i)\"\n                  >\n                    <ion-icon name=\"trash-outline\"></ion-icon>\n                  </ion-button>\n                </ion-col>\n              </ion-row>\n            </div>\n            <ion-button fill=\"clear\" (click)=\"addEmail()\">\n              <ion-icon slot=\"start\" name=\"add-circle-outline\"></ion-icon>\n              Add Email\n            </ion-button>\n          </ion-col>\n        </ion-row>\n\n        <!-- Addresses -->\n        <ion-row formArrayName=\"addresses\">\n          <ion-col>\n            <ion-item-divider>\n              <ion-label color=\"tertiary\">Addresses</ion-label>\n            </ion-item-divider>\n            <div\n              *ngFor=\"\n                let address of getFormArray('contactInformation.addresses')\n                  .controls;\n                let i = index\n              \"\n              [formGroupName]=\"i\"\n            >\n              <ion-row>\n                <ion-col>\n                  <ion-input\n                    label=\"Building Name\"\n                    label-placement=\"floating\"\n                    fill=\"outline\"\n                    formControlName=\"name\"\n                    type=\"text\"\n                    placeholder=\"Enter building name\"\n                  ></ion-input>\n                </ion-col>\n              </ion-row>\n              <ion-row>\n                <ion-col>\n                  <ion-input\n                    label=\"Street Address\"\n                    label-placement=\"floating\"\n                    fill=\"outline\"\n                    formControlName=\"street\"\n                    type=\"text\"\n                    placeholder=\"Enter street address\"\n                  ></ion-input>\n                </ion-col>\n              </ion-row>\n              <ion-row>\n                <ion-col size=\"6\">\n                  <ion-input\n                    label=\"City\"\n                    label-placement=\"floating\"\n                    fill=\"outline\"\n                    formControlName=\"city\"\n                    type=\"text\"\n                    placeholder=\"Enter city\"\n                  ></ion-input>\n                </ion-col>\n                <ion-col size=\"6\">\n                  <ion-input\n                    label=\"State\"\n                    label-placement=\"floating\"\n                    fill=\"outline\"\n                    formControlName=\"state\"\n                    type=\"text\"\n                    placeholder=\"Enter state\"\n                  ></ion-input>\n                </ion-col>\n              </ion-row>\n              <ion-row>\n                <ion-col size=\"6\">\n                  <ion-input\n                    label=\"Country\"\n                    label-placement=\"floating\"\n                    fill=\"outline\"\n                    formControlName=\"country\"\n                    type=\"text\"\n                    placeholder=\"Enter country\"\n                  ></ion-input>\n                </ion-col>\n                <ion-col size=\"6\">\n                  <ion-input\n                    label=\"Postal Code\"\n                    label-placement=\"floating\"\n                    fill=\"outline\"\n                    formControlName=\"zipcode\"\n                    type=\"text\"\n                    placeholder=\"Enter postal code\"\n                  ></ion-input>\n                </ion-col>\n              </ion-row>\n              <ion-row>\n                <ion-col>\n                  <ion-item lines=\"none\">\n                    <ion-label>Primary Address</ion-label>\n                    <ion-checkbox\n                      formControlName=\"isPrimaryAddress\"\n                    ></ion-checkbox>\n                  </ion-item>\n                </ion-col>\n                <ion-col size=\"auto\">\n                  <ion-button\n                    fill=\"clear\"\n                    (click)=\"removeArrayItem('contactInformation.addresses', i)\"\n                  >\n                    <ion-icon name=\"trash-outline\"></ion-icon>\n                  </ion-button>\n                </ion-col>\n              </ion-row>\n            </div>\n            <ion-button fill=\"clear\" (click)=\"addAddress()\">\n              <ion-icon slot=\"start\" name=\"add-circle-outline\"></ion-icon>\n              Add Address\n            </ion-button>\n          </ion-col>\n        </ion-row>\n\n        <!-- Phone Numbers -->\n        <ion-row formArrayName=\"phoneNumbers\">\n          <ion-col>\n            <ion-item-divider>\n              <ion-label color=\"tertiary\">Phone Numbers</ion-label>\n            </ion-item-divider>\n            <div\n              *ngFor=\"\n                let phone of getFormArray('contactInformation.phoneNumbers')\n                  .controls;\n                let i = index\n              \"\n              [formGroupName]=\"i\"\n            >\n              <ion-row>\n                <ion-col size=\"2\">\n                  <ion-select\n                    label=\"Type\"\n                    label-placement=\"stacked\"\n                    formControlName=\"type\"\n                    fill=\"outline\"\n                  >\n                    <ion-select-option value=\"Mobile\">Mobile</ion-select-option>\n                    <ion-select-option value=\"Work\">Work</ion-select-option>\n                    <ion-select-option value=\"Home\">Home</ion-select-option>\n                  </ion-select>\n                </ion-col>\n                <ion-col size=\"2\">\n                  <ion-input\n                    label=\"Country Code\"\n                    label-placement=\"floating\"\n                    fill=\"outline\"\n                    formControlName=\"countryCode\"\n                    type=\"text\"\n                  ></ion-input>\n                </ion-col>\n                <ion-col size=\"6\">\n                  <ion-input\n                    label=\"Number\"\n                    label-placement=\"floating\"\n                    fill=\"outline\"\n                    formControlName=\"number\"\n                    type=\"tel\"\n                    placeholder=\"Enter phone number\"\n                  ></ion-input>\n                </ion-col>\n                <ion-col size=\"2\">\n                  <ion-button\n                    fill=\"clear\"\n                    (click)=\"\n                      removeArrayItem('contactInformation.phoneNumbers', i)\n                    \"\n                  >\n                    <ion-icon name=\"trash-outline\"></ion-icon>\n                  </ion-button>\n                </ion-col>\n              </ion-row>\n            </div>\n            <ion-button fill=\"clear\" (click)=\"addPhoneNumber()\">\n              <ion-icon slot=\"start\" name=\"add-circle-outline\"></ion-icon>\n              Add Phone Number\n            </ion-button>\n          </ion-col>\n        </ion-row>\n      </ion-card-content>\n    </ion-card>\n  </ng-container>\n\n  <!-- Navigation Buttons -->\n  <ion-row>\n    <ion-col>\n      <ion-button\n        expand=\"block\"\n        *ngIf=\"currentStep > 1\"\n        (click)=\"goToPreviousStep()\"\n      >\n        Back\n      </ion-button>\n    </ion-col>\n    <ion-col>\n      <ion-button\n        expand=\"block\"\n        *ngIf=\"currentStep < 2\"\n        (click)=\"goToNextStep()\"\n      >\n        Next\n      </ion-button>\n      <ion-button\n        expand=\"block\"\n        color=\"primary\"\n        *ngIf=\"currentStep === 2\"\n        type=\"submit\"\n      >\n        {{ listing?.id ? \"Save Changes\" : \"Save as Draft\" }}\n      </ion-button>\n    </ion-col>\n  </ion-row>\n</form>\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\nimport {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ListingsPage} from \"./pages/listings/listings.page\";\nimport {ListingDetailPage} from \"./pages/listing-detail/listing-detail.page\";\nimport {ListingEditPage} from \"./pages/listing-edit/listing-edit.page\";\nimport {ListingCreatePage} from \"./pages/listing-create/listing-create.page\";\nimport {ApplicantsPage} from \"./relatedAccount/pages/applicants/applicants.page\";\nimport {ApplyPage} from \"./relatedAccount/pages/apply/apply.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ListingsPage,\n  },\n  {\n    path: \"create\",\n    component: ListingCreatePage,\n  },\n  {\n    path: \":id\",\n    component: ListingDetailPage,\n  },\n  {\n    path: \":id/applicants\",\n    component: ApplicantsPage,\n  },\n  {\n    path: \":id/apply\",\n    component: ApplyPage,\n  },\n  {\n    path: \":id/edit\",\n    component: ListingEditPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListingRoutingModule {}\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\nimport {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {IonicModule} from \"@ionic/angular\";\nimport {StoreModule} from \"@ngrx/store\";\nimport {EffectsModule} from \"@ngrx/effects\";\nimport {ListingsPage} from \"./pages/listings/listings.page\";\nimport {ListingRoutingModule} from \"./listing-routing.module\";\nimport {listingsReducer} from \"../../state/reducers/listings.reducer\";\nimport {ListingsEffects} from \"../../state/effects/listings.effects\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {RouterModule} from \"@angular/router\";\nimport {ListingDetailPage} from \"./pages/listing-detail/listing-detail.page\";\nimport {ListingEditPage} from \"./pages/listing-edit/listing-edit.page\";\nimport {ListingCreatePage} from \"./pages/listing-create/listing-create.page\";\nimport {TimestampPipe} from \"../../shared/pipes/timestamp.pipe\";\nimport {ListingFormComponent} from \"./components/listing-form/listing-form.component\";\nimport {FormatAddressPipe} from \"../../shared/pipes/format-address.pipe\";\nimport {HeroComponent} from \"./pages/listing-detail/components/hero/hero.component\";\nimport {ApplicantsPage} from \"./relatedAccount/pages/applicants/applicants.page\";\nimport {PhoneFormatPipe} from \"../../shared/pipes/phone-format.pipe\";\nimport {SharedModule} from \"../../shared/shared.module\";\nimport {ApplyPage} from \"./relatedAccount/pages/apply/apply.page\";\nimport {ApplicantDetailsModalComponent} from \"./relatedAccount/pages/applicants/components/applicant-details-modal/applicant-details-modal.component\";\n\n@NgModule({\n  declarations: [\n    ApplicantsPage,\n    ApplyPage,\n    ListingsPage,\n    ListingCreatePage,\n    ListingDetailPage,\n    ListingEditPage,\n    TimestampPipe,\n    ListingFormComponent,\n    FormatAddressPipe,\n    PhoneFormatPipe,\n    HeroComponent,\n    ApplicantDetailsModalComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule,\n    ReactiveFormsModule,\n    ListingRoutingModule,\n    SharedModule,\n    StoreModule.forFeature(\"listings\", listingsReducer),\n    EffectsModule.forFeature([ListingsEffects]),\n  ],\n})\nexport class ListingModule {}\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\nimport {Component} from \"@angular/core\";\nimport {Store} from \"@ngrx/store\";\nimport {first} from \"rxjs/operators\";\nimport * as ListingActions from \"../../../../state/actions/listings.actions\";\nimport {selectAuthUser} from \"../../../../state/selectors/auth.selectors\";\n\n@Component({\n  selector: \"app-listing-create\",\n  templateUrl: \"./listing-create.page.html\",\n  styleUrls: [\"./listing-create.page.scss\"],\n})\nexport class ListingCreatePage {\n  constructor(private store: Store) {}\n\n  onSubmit(formValue: any) {\n    this.store\n      .select(selectAuthUser)\n      .pipe(first())\n      .subscribe((user) => {\n        if (user) {\n          const listing = {\n            ...formValue,\n            createdBy: user.uid,\n          };\n          this.store.dispatch(ListingActions.createListing({listing}));\n        }\n      });\n  }\n}\n","<!--\nNonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\nCopyright (C) 2023  ASCENDynamics NFP\n\nThis file is part of Nonprofit Social Networking Platform.\n\nNonprofit Social Networking Platform is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nNonprofit Social Networking Platform is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n-->\n<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title>Create New Listing</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <app-listing-form (formSubmit)=\"onSubmit($event)\"></app-listing-form>\n</ion-content>\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\nimport {Component, Input} from \"@angular/core\";\nimport {Listing} from \"../../../../../../models/listing.model\";\n\n@Component({\n  selector: \"app-hero\",\n  templateUrl: \"./hero.component.html\",\n  styleUrls: [\"./hero.component.scss\"],\n})\nexport class HeroComponent {\n  @Input() listing!: Listing;\n  @Input() isOwner: boolean = false;\n  @Input() showButtons: boolean = true;\n\n  constructor() {}\n\n  getCities(): string {\n    if (this.listing.remote) {\n      return \"Remote\";\n    }\n\n    const addresses = this.listing.contactInformation?.addresses;\n    if (!addresses || addresses.length === 0) {\n      return \"No locations available\";\n    }\n\n    return addresses\n      .map((address) => `${address?.city}, ${address?.country}`)\n      .join(\", \");\n  }\n}\n","<!--\nNonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\nCopyright (C) 2023  ASCENDynamics NFP\n\nThis file is part of Nonprofit Social Networking Platform.\n\nNonprofit Social Networking Platform is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nNonprofit Social Networking Platform is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n-->\n<div class=\"header-image\">\n  <img\n    [src]=\"listing.heroImage || 'assets/image/orghero.png'\"\n    alt=\"Header Background\"\n  />\n</div>\n\n<div class=\"listing-header\">\n  <div class=\"listing-info\">\n    <div class=\"title-section\">\n      <div class=\"hero-image-small\" *ngIf=\"listing.iconImage\">\n        <img [src]=\"listing.iconImage\" alt=\"Listing Hero\" />\n      </div>\n      <div class=\"title-content\">\n        <h2>{{ listing.title }}</h2>\n        <h3>{{ listing.organization }}</h3>\n      </div>\n    </div>\n\n    <div class=\"details-icons\">\n      <div class=\"detail-item\">\n        <ion-icon name=\"heart-outline\" color=\"primary\"></ion-icon>\n        <span>{{ listing.type | titlecase }}</span>\n      </div>\n      <div class=\"detail-item\">\n        <ion-icon\n          [name]=\"listing.remote ? 'cloud-outline' : 'business-outline'\"\n          color=\"primary\"\n        ></ion-icon>\n        <span>{{ listing.remote ? \"Remote\" : \"On-site\" }}</span>\n      </div>\n      <div class=\"detail-item\">\n        <ion-icon name=\"location-outline\" color=\"primary\"></ion-icon>\n        <span>{{ getCities() }}</span>\n      </div>\n      <div class=\"detail-item\">\n        <ion-icon name=\"time-outline\" color=\"primary\"></ion-icon>\n        <span>{{ listing.timeCommitment.hoursPerWeek }} hrs/week</span>\n      </div>\n      <div class=\"detail-item\">\n        <ion-icon name=\"briefcase-outline\" color=\"primary\"></ion-icon>\n        <span>{{ listing.status | titlecase }}</span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"listing-actions\" *ngIf=\"showButtons\">\n    <ion-button\n      *ngIf=\"!isOwner\"\n      fill=\"outline\"\n      [disabled]=\"listing.status !== 'active'\"\n      [routerLink]=\"['/listings', listing.id, 'apply']\"\n    >\n      Apply Now\n    </ion-button>\n    <ion-button\n      *ngIf=\"isOwner\"\n      fill=\"outline\"\n      size=\"small\"\n      [routerLink]=\"['/listings', listing.id, 'edit']\"\n    >\n      <ion-icon name=\"pencil-outline\"></ion-icon> Edit\n    </ion-button>\n    <ion-button\n      *ngIf=\"isOwner\"\n      fill=\"outline\"\n      size=\"small\"\n      [routerLink]=\"['/listings', listing.id, 'applicants']\"\n    >\n      <ion-icon name=\"people-outline\"></ion-icon> View Applicants\n    </ion-button>\n  </div>\n</div>\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\n// src/app/modules/listings/pages/listing-detail/listing-detail.page.ts\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Store} from \"@ngrx/store\";\nimport {AlertController} from \"@ionic/angular\";\nimport {Observable, combineLatest} from \"rxjs\";\nimport {first, map} from \"rxjs/operators\";\nimport {Listing} from \"../../../../models/listing.model\";\nimport * as ListingsActions from \"../../../../state/actions/listings.actions\";\nimport {selectAuthUser} from \"../../../../state/selectors/auth.selectors\";\nimport {AppState} from \"../../../../state/app.state\";\nimport {selectListingById} from \"../../../../state/selectors/listings.selectors\";\nimport {serverTimestamp} from \"firebase/firestore\";\n\n@Component({\n  selector: \"app-listing-detail\",\n  templateUrl: \"./listing-detail.page.html\",\n  styleUrls: [\"./listing-detail.page.scss\"],\n})\nexport class ListingDetailPage implements OnInit {\n  listing$: Observable<Listing | undefined>;\n  isOwner$: Observable<boolean>;\n  private listingId: string;\n\n  constructor(\n    private store: Store<AppState>,\n    private route: ActivatedRoute,\n    private alertController: AlertController,\n  ) {\n    this.listingId = this.route.snapshot.paramMap.get(\"id\") || \"\";\n    this.listing$ = this.store.select(selectListingById(this.listingId));\n\n    // Determine if current user is the listing creator\n    this.isOwner$ = combineLatest([\n      this.store.select(selectAuthUser),\n      this.listing$,\n    ]).pipe(\n      map(\n        ([user, listing]) =>\n          !!(user && listing && listing.createdBy === user.uid),\n      ),\n    );\n  }\n\n  ngOnInit() {\n    if (this.listingId) {\n      this.store.dispatch(\n        ListingsActions.loadListingById({id: this.listingId}),\n      );\n    }\n  }\n\n  async deleteListing() {\n    const alert = await this.alertController.create({\n      header: \"Confirm Deletion\",\n      message: \"Are you sure you want to delete this listing?\",\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n        },\n        {\n          text: \"Delete\",\n          role: \"destructive\",\n          handler: () => {\n            if (this.listingId) {\n              this.store.dispatch(\n                ListingsActions.deleteListing({id: this.listingId}),\n              );\n            }\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  togglePublishStatus() {\n    this.listing$.pipe(first()).subscribe(async (listing) => {\n      if (listing) {\n        const newStatus = listing.status === \"active\" ? \"draft\" : \"active\";\n        const updatedListing = {\n          ...listing,\n          status: newStatus,\n          lastModifiedAt: serverTimestamp(),\n        } as Listing;\n        this.store.dispatch(\n          ListingsActions.updateListing({listing: updatedListing}),\n        );\n      }\n    });\n  }\n}\n","<!--\nNonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\nCopyright (C) 2023  ASCENDynamics NFP\n\nThis file is part of Nonprofit Social Networking Platform.\n\nNonprofit Social Networking Platform is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nNonprofit Social Networking Platform is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n-->\n<ion-header>\n  <app-header title=\"Listing Details\" defaultHref=\"/listings\"></app-header>\n</ion-header>\n\n<ion-content>\n  <ng-container *ngIf=\"listing$ | async as listing\">\n    <app-hero\n      [listing]=\"listing\"\n      [isOwner]=\"(isOwner$ | async) ?? false\"\n    ></app-hero>\n\n    <ion-grid>\n      <!-- Full-Width Sections -->\n      <ion-row>\n        <ion-col size=\"12\">\n          <!-- Description Card -->\n          <ion-card>\n            <ion-card-header>\n              <ion-icon\n                name=\"information-circle-outline\"\n                slot=\"start\"\n              ></ion-icon>\n              <ion-card-title>Description</ion-card-title>\n            </ion-card-header>\n            <ion-card-content>\n              <div class=\"info-block\">\n                <p>{{ listing.description }}</p>\n              </div>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n        <ion-col size=\"12\">\n          <!-- Responsibilities Card -->\n          <ion-card *ngIf=\"listing.responsibilities?.length\">\n            <ion-card-header>\n              <ion-icon name=\"list-outline\" slot=\"start\"></ion-icon>\n              <ion-card-title>Responsibilities</ion-card-title>\n            </ion-card-header>\n            <ion-card-content>\n              <div class=\"info-block\">\n                <div\n                  *ngFor=\"let responsibility of listing.responsibilities\"\n                  class=\"list-item\"\n                >\n                  <ion-icon name=\"arrow-forward-circle-outline\"></ion-icon>\n                  <span>{{ responsibility }}</span>\n                </div>\n              </div>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n        <ion-col size=\"12\">\n          <!-- Requirements Card -->\n          <ion-card *ngIf=\"listing.requirements?.length\">\n            <ion-card-header>\n              <ion-icon name=\"warning-outline\" slot=\"start\"></ion-icon>\n              <ion-card-title>Requirements</ion-card-title>\n            </ion-card-header>\n            <ion-card-content>\n              <div class=\"info-block\">\n                <div\n                  *ngFor=\"let requirement of listing.requirements\"\n                  class=\"list-item\"\n                >\n                  <ion-icon name=\"checkmark-circle-outline\"></ion-icon>\n                  <span>{{ requirement }}</span>\n                </div>\n              </div>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n        <ion-col size=\"12\">\n          <!-- Benefits Card -->\n          <ion-card *ngIf=\"listing.benefits?.length\">\n            <ion-card-header>\n              <ion-icon name=\"gift-outline\" slot=\"start\"></ion-icon>\n              <ion-card-title>Benefits</ion-card-title>\n            </ion-card-header>\n            <ion-card-content>\n              <div class=\"info-block\">\n                <div *ngFor=\"let benefit of listing.benefits\" class=\"list-item\">\n                  <ion-icon name=\"star-outline\"></ion-icon>\n                  <span>{{ benefit }}</span>\n                </div>\n              </div>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n      </ion-row>\n\n      <!-- Half-Width Sections -->\n      <ion-row>\n        <ion-col size=\"12\" size-md=\"6\">\n          <!-- Skills Card -->\n          <ion-card *ngIf=\"listing.skills?.length\">\n            <ion-card-header>\n              <ion-icon name=\"ribbon-outline\" slot=\"start\"></ion-icon>\n              <ion-card-title>Skills</ion-card-title>\n            </ion-card-header>\n            <ion-card-content>\n              <div class=\"info-block\">\n                <div *ngFor=\"let skill of listing.skills\" class=\"skill-item\">\n                  <span class=\"skill-name\">{{ skill.name }}</span>\n                  <ion-badge color=\"tertiary\"\n                    >{{ skill.level | titlecase }}</ion-badge\n                  >\n                  <ion-badge *ngIf=\"skill.required\" color=\"primary\"\n                    >Required</ion-badge\n                  >\n                </div>\n              </div>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n        <ion-col size=\"12\" size-md=\"6\">\n          <!-- Time Commitment Card -->\n          <ion-card>\n            <ion-card-header>\n              <ion-icon name=\"time-outline\" slot=\"start\"></ion-icon>\n              <ion-card-title>Time Commitment</ion-card-title>\n            </ion-card-header>\n            <ion-card-content>\n              <div class=\"info-block\">\n                <div class=\"time-item\">\n                  <ion-icon name=\"hourglass-outline\"></ion-icon>\n                  <span\n                    >{{ listing.timeCommitment.hoursPerWeek }} hours/week</span\n                  >\n                </div>\n                <div class=\"time-item\">\n                  <ion-icon name=\"calendar-outline\"></ion-icon>\n                  <span>Duration: {{ listing.timeCommitment.duration }}</span>\n                </div>\n                <div class=\"time-item\">\n                  <ion-icon name=\"alarm-outline\"></ion-icon>\n                  <span>Schedule: {{ listing.timeCommitment.schedule }}</span>\n                </div>\n                <div\n                  class=\"time-item\"\n                  *ngIf=\"listing.timeCommitment.isFlexible\"\n                >\n                  <ion-icon name=\"calendar-clear-outline\"></ion-icon>\n                  <span>Flexible Schedule Available</span>\n                  <ion-badge color=\"success\">Flexible</ion-badge>\n                </div>\n              </div>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n        <ion-col size=\"12\" size-md=\"6\">\n          <!-- Location Card -->\n          <ion-card\n            *ngIf=\"listing.contactInformation?.addresses?.length || listing.remote\"\n          >\n            <ion-card-header>\n              <ion-icon name=\"location-outline\" slot=\"start\"></ion-icon>\n              <ion-card-title>Location</ion-card-title>\n            </ion-card-header>\n            <ion-card-content>\n              <div class=\"info-block\">\n                <div\n                  *ngFor=\"let address of listing.contactInformation?.addresses\"\n                  class=\"location-item\"\n                >\n                  <p>{{ address?.name }}</p>\n                  <p>{{ address?.street }}</p>\n                  <p>{{ address?.city }}, {{ address?.state }}</p>\n                  <p>{{ address?.country }} {{ address?.zipcode }}</p>\n                  <ion-badge *ngIf=\"address?.isPrimaryAddress\" color=\"primary\"\n                    >Primary Location</ion-badge\n                  >\n                </div>\n                <ion-badge *ngIf=\"listing.remote\" color=\"success\"\n                  >Remote Available</ion-badge\n                >\n              </div>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n        <ion-col size=\"12\" size-md=\"6\">\n          <!-- Contact Information Card -->\n          <ion-card\n            *ngIf=\"listing.contactInformation?.emails?.length || listing.contactInformation?.phoneNumbers?.length\"\n          >\n            <ion-card-header>\n              <ion-icon name=\"call-outline\" slot=\"start\"></ion-icon>\n              <ion-card-title>Contact Information</ion-card-title>\n            </ion-card-header>\n            <ion-card-content>\n              <div class=\"info-block\">\n                <div\n                  *ngFor=\"let email of listing.contactInformation?.emails\"\n                  class=\"contact-item\"\n                >\n                  <ion-icon name=\"mail-outline\"></ion-icon>\n                  <span>{{ email.email }}</span>\n                </div>\n                <div\n                  *ngFor=\"let phone of listing.contactInformation?.phoneNumbers\"\n                  class=\"contact-item\"\n                >\n                  <ion-icon name=\"call-outline\"></ion-icon>\n                  <span>{{ phone.countryCode }} {{ phone.number }}</span>\n                  <ion-badge color=\"medium\">{{ phone.type }}</ion-badge>\n                </div>\n              </div>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n    <div class=\"bottom-actions\" *ngIf=\"isOwner$ | async\">\n      <ion-button\n        fill=\"outline\"\n        [routerLink]=\"['/listings', listing.id, 'edit']\"\n      >\n        <ion-icon name=\"pencil-outline\" slot=\"start\"></ion-icon>\n        Edit\n      </ion-button>\n      <ion-button (click)=\"togglePublishStatus()\" color=\"primary\">\n        <ion-icon\n          [name]=\"listing.status === 'active' ? 'pencil-outline' : 'cloud-upload-outline'\"\n          slot=\"start\"\n        ></ion-icon>\n        {{ listing.status === 'active' ? 'Unpublish' : 'Publish' }} Listing\n      </ion-button>\n    </div>\n  </ng-container>\n</ion-content>\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\n// src/app/modules/listings/pages/listing-edit/listing-edit.page.ts\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Store} from \"@ngrx/store\";\nimport {combineLatest, map, Observable, of, tap} from \"rxjs\";\nimport {Listing} from \"../../../../models/listing.model\";\nimport * as ListingsActions from \"../../../../state/actions/listings.actions\";\nimport {selectAuthUser} from \"../../../../state/selectors/auth.selectors\";\nimport {AppState} from \"../../../../state/app.state\";\nimport {selectListingById} from \"../../../../state/selectors/listings.selectors\";\nimport {AuthUser} from \"../../../../models/auth-user.model\";\n\n@Component({\n  selector: \"app-listing-edit\",\n  templateUrl: \"./listing-edit.page.html\",\n  styleUrls: [\"./listing-edit.page.scss\"],\n})\nexport class ListingEditPage implements OnInit {\n  authUser$: Observable<AuthUser | null>;\n  listing$: Observable<Listing | null>;\n  isOwner$: Observable<boolean>;\n  listingId: string | null;\n\n  constructor(\n    private store: Store<AppState>,\n    private route: ActivatedRoute,\n    private router: Router,\n  ) {\n    this.authUser$ = this.store.select(selectAuthUser);\n    this.listingId = this.route.snapshot.paramMap.get(\"id\");\n    this.listing$ = this.listingId\n      ? this.store\n          .select(selectListingById(this.listingId))\n          .pipe(map((listing) => listing || null)) // Map undefined to null\n      : of(null);\n    this.isOwner$ = combineLatest([this.authUser$, this.listing$]).pipe(\n      map(\n        ([user, listing]) =>\n          !!(user && listing && listing.createdBy === user.uid),\n      ),\n      tap((isOwner) => {\n        if (!isOwner) {\n          this.router.navigate([\"/listings\"]);\n        }\n      }),\n    );\n  }\n\n  ngOnInit() {\n    if (this.listingId) {\n      this.store.dispatch(\n        ListingsActions.loadListingById({id: this.listingId}),\n      );\n    }\n  }\n\n  onSubmit(listing: Listing) {\n    if (this.listingId) {\n      this.store.dispatch(ListingsActions.updateListing({listing: listing}));\n    }\n  }\n}\n","<!--\nNonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\nCopyright (C) 2023  ASCENDynamics NFP\n\nThis file is part of Nonprofit Social Networking Platform.\n\nNonprofit Social Networking Platform is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nNonprofit Social Networking Platform is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n-->\n<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title>Edit Listing</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <app-listing-form\n    [listing]=\"listing$ | async\"\n    (formSubmit)=\"onSubmit($event)\"\n  >\n  </app-listing-form>\n</ion-content>\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\n// src/app/modules/listing/pages/listings/listings.page.ts\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {Store} from \"@ngrx/store\";\nimport {Observable} from \"rxjs\";\nimport {NavController} from \"@ionic/angular\";\nimport {Listing} from \"../../../../models/listing.model\";\nimport * as ListingsActions from \"../../../../state/actions/listings.actions\";\nimport {AppState} from \"../../../../state/app.state\";\nimport {\n  selectFilteredListings,\n  selectLoading,\n  selectError,\n} from \"../../../../state/selectors/listings.selectors\";\nimport {AuthUser} from \"../../../../models/auth-user.model\";\nimport {selectAuthUser} from \"../../../../state/selectors/auth.selectors\";\n\n@Component({\n  selector: \"app-listings\",\n  templateUrl: \"./listings.page.html\",\n  styleUrls: [\"./listings.page.scss\"],\n})\nexport class ListingsPage implements OnInit {\n  listings$: Observable<Listing[]>;\n  loading$: Observable<boolean>;\n  error$: Observable<string | null>;\n  listingTypes = [\"all\", \"volunteer\", \"job\", \"internship\", \"gig\"];\n  authUser$: Observable<AuthUser | null>;\n\n  constructor(\n    private store: Store<AppState>,\n    private navCtrl: NavController,\n  ) {\n    this.authUser$ = this.store.select(selectAuthUser);\n    this.listings$ = this.store.select(selectFilteredListings);\n    this.loading$ = this.store.select(selectLoading);\n    this.error$ = this.store.select(selectError);\n  }\n\n  ngOnInit() {\n    this.loadListings();\n  }\n\n  loadListings() {\n    this.store.dispatch(ListingsActions.loadListings());\n  }\n\n  createListing() {\n    this.navCtrl.navigateForward(\"/listings/create\");\n  }\n\n  viewListing(id: string) {\n    this.navCtrl.navigateForward(`/listings/${id}`);\n  }\n\n  filterListings(event: any) {\n    const listingType = event.detail.value;\n    this.store.dispatch(ListingsActions.filterListings({listingType}));\n  }\n\n  searchListings(event: any) {\n    const query = event.detail.value;\n    this.store.dispatch(ListingsActions.searchListings({query}));\n  }\n\n  doRefresh(event: any) {\n    this.loadListings();\n    setTimeout(() => {\n      event.target.complete();\n    }, 1000);\n  }\n\n  getListingLocation(listing: Listing): string {\n    const primaryAddress = listing.contactInformation?.addresses?.[0];\n    if (primaryAddress) {\n      return `${primaryAddress.city}, ${primaryAddress.country}`;\n    }\n    return \"Location not specified\";\n  }\n\n  getIconForType(type: string): string {\n    const iconMap: Record<string, string> = {\n      volunteer: \"people-outline\",\n      job: \"briefcase-outline\",\n      event: \"calendar-outline\",\n      project: \"construct-outline\",\n      resource: \"library-outline\",\n      service: \"hand-right-outline\",\n      all: \"apps-outline\",\n      internship: \"school-outline\",\n      gig: \"flash-outline\",\n    };\n\n    return iconMap[type.toLowerCase()] || \"help-outline\";\n  }\n}\n","<!--\nNonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\nCopyright (C) 2023  ASCENDynamics NFP\n\nThis file is part of Nonprofit Social Networking Platform.\n\nNonprofit Social Networking Platform is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nNonprofit Social Networking Platform is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n-->\n\n<ion-header>\n  <app-header title=\"Listings\"></app-header>\n  <ion-toolbar>\n    <ion-searchbar (ionInput)=\"searchListings($event)\"></ion-searchbar>\n  </ion-toolbar>\n\n  <ion-toolbar>\n    <ion-segment scrollable (ionChange)=\"filterListings($event)\">\n      <ion-segment-button *ngFor=\"let type of listingTypes\" [value]=\"type\">\n        <ion-icon [name]=\"getIconForType(type)\"></ion-icon>\n        <ion-label>{{type | titlecase}}</ion-label>\n      </ion-segment-button>\n    </ion-segment>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-header> </ion-header>\n\n  <ion-refresher slot=\"fixed\" (ionRefresh)=\"doRefresh($event)\">\n    <ion-refresher-content></ion-refresher-content>\n  </ion-refresher>\n\n  <ng-container *ngIf=\"loading$ | async\">\n    <ion-skeleton-text animated></ion-skeleton-text>\n  </ng-container>\n\n  <ng-container *ngIf=\"error$ | async as error\">\n    <ion-text color=\"danger\">\n      <p>{{ error }}</p>\n    </ion-text>\n  </ng-container>\n\n  <ion-list>\n    <ion-item\n      *ngFor=\"let listing of listings$ | async\"\n      [routerLink]=\"['/listings', listing.id]\"\n    >\n      <ion-thumbnail slot=\"start\">\n        <ion-img\n          [src]=\"listing.iconImage || 'assets/image/logo/ASCENDynamics NFP-logos_transparent.png'\"\n        ></ion-img>\n      </ion-thumbnail>\n      <ion-label>\n        <h2>{{ listing.title }}</h2>\n        <h3>{{ listing.organization }}</h3>\n        <p>{{ listing.description | slice:0:100 }}...</p>\n        <ion-badge color=\"primary\">{{ listing.type | titlecase }}</ion-badge>\n        <ion-badge *ngIf=\"listing.remote\" color=\"success\">Remote</ion-badge>\n        <p *ngIf=\"!listing.remote\">{{ getListingLocation(listing) }}</p>\n        <ion-note>\n          <ion-icon name=\"time-outline\"></ion-icon>\n          {{ listing.timeCommitment.hoursPerWeek }} hrs/week\n        </ion-note>\n      </ion-label>\n    </ion-item>\n  </ion-list>\n\n  <ion-fab\n    vertical=\"bottom\"\n    horizontal=\"end\"\n    slot=\"fixed\"\n    *ngIf=\"authUser$ | async\"\n  >\n    <ion-fab-button routerLink=\"/listings/create\">\n      <ion-icon name=\"add\"></ion-icon>\n    </ion-fab-button>\n  </ion-fab>\n</ion-content>\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\n// src/app/modules/listing/relatedAccount/pages/applicants/applicants.page.ts\n\nimport {Component, OnInit} from \"@angular/core\";\nimport {Store} from \"@ngrx/store\";\nimport {BehaviorSubject, combineLatest, map, Observable, take} from \"rxjs\";\nimport {ListingRelatedAccount} from \"../../../../../models/listing-related-account.model\";\nimport {AppState} from \"../../../../../state/app.state\";\nimport * as ListingsActions from \"../../../../../state/actions/listings.actions\";\nimport {\n  selectListingById,\n  selectRelatedAccountsByListingId,\n} from \"../../../../../state/selectors/listings.selectors\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {selectAuthUser} from \"../../../../../state/selectors/auth.selectors\";\nimport {Listing} from \"../../../../../models/listing.model\";\nimport {ModalController} from \"@ionic/angular\";\nimport {ApplicantDetailsModalComponent} from \"./components/applicant-details-modal/applicant-details-modal.component\";\n\n@Component({\n  selector: \"app-applicants\",\n  templateUrl: \"./applicants.page.html\",\n  styleUrls: [\"./applicants.page.scss\"],\n})\nexport class ApplicantsPage implements OnInit {\n  relatedAccounts$: Observable<ListingRelatedAccount[]>;\n  paginatedAccounts$!: Observable<ListingRelatedAccount[]>;\n  currentPageSubject = new BehaviorSubject<number>(1);\n  currentPage$ = this.currentPageSubject.asObservable();\n  pageSize = 20; // Items per page\n  maxVisiblePages = 5; // Max visible page numbers\n\n  totalItems$!: Observable<number>;\n  totalPages$!: Observable<number>;\n  pageNumbers$!: Observable<number[]>;\n  currentPageStart$!: Observable<number>;\n  currentPageEnd$!: Observable<number>;\n\n  // Combined pagination info observable\n  pagination$!: Observable<{\n    currentPage: number;\n    totalPages: number;\n    pageNumbers: number[];\n  }>;\n\n  currentPageRange$!: Observable<{\n    start: number;\n    end: number;\n    total: number;\n  }>;\n\n  loading$: Observable<boolean>;\n  error$: Observable<string | null>;\n  listingId: string;\n  listing$: Observable<Listing>;\n  isOwner$: Observable<boolean>;\n\n  constructor(\n    private store: Store<AppState>,\n    private route: ActivatedRoute,\n    private modalController: ModalController,\n    private router: Router,\n  ) {\n    this.listingId = this.route.snapshot.paramMap.get(\"id\") || \"\";\n    this.relatedAccounts$ = this.store.select(\n      selectRelatedAccountsByListingId(this.listingId),\n    );\n\n    this.loading$ = this.store.select((state) => state.listings.loading);\n    this.error$ = this.store.select((state) => state.listings.error);\n\n    this.listing$ = this.store.select(selectListingById(this.listingId));\n\n    // Determine if current user is the listing creator\n    this.isOwner$ = combineLatest([\n      this.store.select(selectAuthUser),\n      this.listing$,\n    ]).pipe(\n      map(\n        ([user, listing]) =>\n          !!(user && listing && listing.createdBy === user.uid),\n      ),\n    );\n  }\n\n  ngOnInit() {\n    if (this.listingId) {\n      this.store.dispatch(\n        ListingsActions.loadListingRelatedAccounts({\n          listingId: this.listingId,\n        }),\n      );\n    }\n\n    // Calculate total items dynamically\n    this.totalItems$ = this.relatedAccounts$.pipe(\n      map((accounts) => accounts.length),\n    );\n\n    // Calculate total pages\n    this.totalPages$ = this.totalItems$.pipe(\n      map((totalItems) => Math.ceil(totalItems / this.pageSize)),\n    );\n\n    // Generate paginated accounts\n    this.paginatedAccounts$ = combineLatest([\n      this.relatedAccounts$,\n      this.currentPage$,\n    ]).pipe(\n      map(([accounts, currentPage]) => {\n        const startIndex = (currentPage - 1) * this.pageSize;\n        return accounts.slice(startIndex, startIndex + this.pageSize);\n      }),\n    );\n\n    // Generate page numbers\n    this.pageNumbers$ = combineLatest([\n      this.currentPage$,\n      this.totalPages$,\n    ]).pipe(\n      map(([currentPage, totalPages]) => {\n        let startPage = Math.max(\n          1,\n          currentPage - Math.floor(this.maxVisiblePages / 2),\n        );\n        let endPage = startPage + this.maxVisiblePages - 1;\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = Math.max(1, endPage - this.maxVisiblePages + 1);\n        }\n        return Array.from(\n          {length: endPage - startPage + 1},\n          (_, i) => startPage + i,\n        );\n      }),\n    );\n\n    // Calculate start and end indices for the current page\n    this.currentPageStart$ = combineLatest([\n      this.currentPage$,\n      this.totalItems$,\n    ]).pipe(\n      map(([currentPage, totalItems]) => {\n        const start = (currentPage - 1) * this.pageSize + 1;\n        return Math.min(start, totalItems);\n      }),\n    );\n\n    this.currentPageEnd$ = combineLatest([\n      this.currentPage$,\n      this.totalItems$,\n    ]).pipe(\n      map(([currentPage, totalItems]) =>\n        Math.min(currentPage * this.pageSize, totalItems),\n      ),\n    );\n\n    // Combine pagination observables\n    this.pagination$ = combineLatest([\n      this.currentPage$,\n      this.totalPages$,\n      this.pageNumbers$,\n    ]).pipe(\n      map(([currentPage, totalPages, pageNumbers]) => ({\n        currentPage,\n        totalPages,\n        pageNumbers,\n      })),\n    );\n\n    // Combine current page range observables\n    this.currentPageRange$ = combineLatest([\n      this.currentPageStart$,\n      this.currentPageEnd$,\n      this.totalItems$,\n    ]).pipe(map(([start, end, total]) => ({start, end, total})));\n  }\n\n  async openApplicantDetailsModal(account: ListingRelatedAccount) {\n    // Check if the user is the owner\n    combineLatest([this.isOwner$, this.store.select(selectAuthUser)])\n      .pipe(take(1))\n      .subscribe(([isOwner, authUser]) => {\n        // Check if user is owner or if it's their own account\n        if (isOwner && authUser && authUser.uid !== account.id) {\n          // Open modal for owners or account owners\n          this.openModal(account, isOwner);\n        } else {\n          // Navigate to profile for other users\n          this.router.navigate([\"/account\", account.id]);\n        }\n      });\n  }\n\n  async openModal(relatedAccount: ListingRelatedAccount, isOwner: boolean) {\n    const modal = await this.modalController.create({\n      component: ApplicantDetailsModalComponent,\n      componentProps: {relatedAccount, isOwner},\n    });\n    await modal.present();\n  }\n\n  // Pagination methods\n  goToPage(pageNumber: number) {\n    this.currentPageSubject.next(pageNumber);\n  }\n\n  nextPage() {\n    this.currentPage$.pipe(take(1)).subscribe((currentPage) => {\n      this.currentPageSubject.next(currentPage + 1);\n    });\n  }\n\n  previousPage() {\n    this.currentPage$.pipe(take(1)).subscribe((currentPage) => {\n      this.currentPageSubject.next(currentPage - 1);\n    });\n  }\n}\n","<!--\nNonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\nCopyright (C) 2023  ASCENDynamics NFP\n\nThis file is part of Nonprofit Social Networking Platform.\n\nNonprofit Social Networking Platform is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nNonprofit Social Networking Platform is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n-->\n<ion-header>\n  <app-header\n    title=\"Applicants\"\n    [defaultHref]=\"'/listings/' + listingId\"\n  ></app-header>\n</ion-header>\n\n<ion-content>\n  <app-hero\n    *ngIf=\"listing$ | async as listing\"\n    [listing]=\"listing\"\n    [isOwner]=\"(isOwner$ | async) ?? false\"\n    [showButtons]=\"false\"\n  ></app-hero>\n\n  <ion-loading\n    *ngIf=\"loading$ | async\"\n    message=\"Loading applicants...\"\n  ></ion-loading>\n\n  <ion-list *ngIf=\"!(loading$ | async)\">\n    <ion-item\n      *ngFor=\"let account of paginatedAccounts$ | async\"\n      (click)=\"openApplicantDetailsModal(account)\"\n    >\n      <ion-avatar slot=\"start\">\n        <img *ngIf=\"account.iconImage\" [src]=\"account.iconImage\" />\n      </ion-avatar>\n      <ion-label>\n        <h2>{{ account.firstName }} {{ account.lastName }}</h2>\n        <h3 *ngIf=\"isOwner$ | async\">{{ account.email }}</h3>\n        <p *ngIf=\"account.phone && (isOwner$ | async)\">\n          {{ account.phone | phoneFormat }}\n        </p>\n        <p *ngIf=\"isOwner$ | async\">\n          Applied: {{ account.applicationDate | timestamp }}\n        </p>\n        <!-- <p *ngIf=\"account.notes && (isOwner$ | async)\">\n          Notes: {{ account.notes }}\n        </p> -->\n      </ion-label>\n      <ion-badge\n        *ngIf=\"isOwner$ | async\"\n        slot=\"end\"\n        [color]=\"account.status === 'accepted' ? 'success' :\n        account.status === 'rejected' ? 'danger' : 'primary' \"\n      >\n        {{ account.status }}\n      </ion-badge>\n      <!-- <ion-button\n        slot=\"end\"\n        fill=\"clear\"\n        [routerLink]=\"['/account', account.accountId]\"\n      >\n        <ion-icon name=\"person-circle-outline\"></ion-icon>\n        View Profile\n      </ion-button> -->\n    </ion-item>\n  </ion-list>\n\n  <ion-text color=\"danger\" *ngIf=\"error$ | async as error\">\n    {{ error }}\n  </ion-text>\n</ion-content>\n\n<!-- Pagination Controls -->\n<ion-footer>\n  <ion-toolbar class=\"pagination-toolbar\">\n    <!-- Current Page Range -->\n    <ng-container *ngIf=\"currentPageRange$ | async as range\">\n      <ion-text class=\"pagination-range\">\n        {{ range.start }}-{{ range.end }} of {{ range.total }}\n      </ion-text>\n    </ng-container>\n\n    <!-- Pagination Controls -->\n    <ng-container *ngIf=\"pagination$ | async as pageData\">\n      <div class=\"pagination-controls\">\n        <!-- Previous Button -->\n        <ion-button\n          fill=\"clear\"\n          (click)=\"previousPage()\"\n          [disabled]=\"pageData.currentPage === 1\"\n        >\n          <ion-icon name=\"chevron-back-outline\"></ion-icon>\n        </ion-button>\n\n        <!-- Page Numbers -->\n        <ion-button\n          *ngFor=\"let page of pageData.pageNumbers\"\n          fill=\"clear\"\n          [color]=\"pageData.currentPage === page ? 'primary' : 'medium'\"\n          (click)=\"goToPage(page)\"\n        >\n          {{ page }}\n        </ion-button>\n\n        <!-- Ellipsis and Last Page -->\n        <ng-container\n          *ngIf=\"\n            pageData.totalPages > maxVisiblePages &&\n            pageData.pageNumbers.length &&\n            pageData.pageNumbers[pageData.pageNumbers.length - 1] <\n              pageData.totalPages\n          \"\n        >\n          <ion-text>...</ion-text>\n          <ion-button\n            fill=\"clear\"\n            (click)=\"goToPage(pageData.totalPages)\"\n            [disabled]=\"pageData.currentPage === pageData.totalPages\"\n          >\n            {{ pageData.totalPages }}\n          </ion-button>\n        </ng-container>\n\n        <!-- Next Button -->\n        <ion-button\n          fill=\"clear\"\n          (click)=\"nextPage()\"\n          [disabled]=\"pageData.currentPage === pageData.totalPages\"\n        >\n          <ion-icon name=\"chevron-forward-outline\"></ion-icon>\n        </ion-button>\n      </div>\n    </ng-container>\n  </ion-toolbar>\n</ion-footer>\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\n// src/app/modules/listing/relatedAccount/pages/applicants/components/applicant-details-modal/applicant-details-modal.component.ts\n\nimport {Component, Input} from \"@angular/core\";\nimport {ModalController} from \"@ionic/angular\";\nimport {Router} from \"@angular/router\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"../../../../../../../state/app.state\";\nimport {ListingRelatedAccount} from \"../../../../../../../models/listing-related-account.model\";\nimport * as ListingsActions from \"../../../../../../../state/actions/listings.actions\";\n\n@Component({\n  selector: \"app-applicant-details-modal\",\n  templateUrl: \"./applicant-details-modal.component.html\",\n  styleUrls: [\"./applicant-details-modal.component.scss\"],\n})\nexport class ApplicantDetailsModalComponent {\n  @Input() relatedAccount!: ListingRelatedAccount;\n  @Input() isOwner: boolean = false;\n\n  constructor(\n    private modalController: ModalController,\n    private router: Router,\n    private store: Store<AppState>,\n  ) {}\n\n  closeModal() {\n    this.modalController.dismiss();\n  }\n\n  copyEmail() {\n    navigator.clipboard.writeText(this.relatedAccount.email);\n    this.showToast(\"Email copied to clipboard!\");\n  }\n\n  rejectApplication() {\n    this.updateApplicationStatus(\"rejected\", \"Application rejected!\");\n  }\n\n  acceptApplication() {\n    this.updateApplicationStatus(\"accepted\", \"Application accepted!\");\n  }\n\n  viewProfile() {\n    this.router.navigate([\"/account\", this.relatedAccount.id]);\n    this.closeModal();\n  }\n\n  private updateApplicationStatus(\n    status: \"applied\" | \"accepted\" | \"rejected\" | \"withdrawn\",\n    successMessage: string,\n  ) {\n    const updatedAccount = {\n      ...this.relatedAccount,\n      status,\n    };\n\n    // Dispatch an action to update the status in the store\n    this.store.dispatch(\n      ListingsActions.updateRelatedAccount({\n        listingId: this.relatedAccount.listingId,\n        relatedAccount: updatedAccount,\n      }),\n    );\n\n    this.showToast(successMessage);\n    this.closeModal();\n  }\n\n  async showToast(message: string) {\n    const toast = document.createElement(\"ion-toast\");\n    toast.message = message;\n    toast.duration = 2000;\n    document.body.appendChild(toast);\n    await toast.present();\n  }\n}\n","<!--\nNonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\nCopyright (C) 2023  ASCENDynamics NFP\n\nThis file is part of Nonprofit Social Networking Platform.\n\nNonprofit Social Networking Platform is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nNonprofit Social Networking Platform is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n-->\n<ion-header>\n  <ion-toolbar>\n    <ion-title>{{ relatedAccount.name }} Application Details</ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"closeModal()\">\n        <ion-icon name=\"close\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content *ngIf=\"isOwner\">\n  <!-- Applicant Information -->\n  <ion-card>\n    <ion-card-header>\n      <ion-card-title>Applicant Information</ion-card-title>\n    </ion-card-header>\n    <ion-card-content>\n      <p><strong>First Name:</strong> {{ relatedAccount.firstName }}</p>\n      <p><strong>Last Name:</strong> {{ relatedAccount.lastName }}</p>\n      <p><strong>Email Address:</strong> {{ relatedAccount.email }}</p>\n      <p *ngIf=\"relatedAccount.phone\">\n        <strong>Phone Number:</strong> {{ relatedAccount.phone }}\n      </p>\n      <p *ngIf=\"relatedAccount.notes\">\n        <strong>Notes:</strong> {{ relatedAccount.notes }}\n      </p>\n    </ion-card-content>\n  </ion-card>\n\n  <!-- Resume -->\n  <ion-card *ngIf=\"relatedAccount?.resumeFile\">\n    <!-- <ion-card-header>\n      <ion-card-title>Resume</ion-card-title>\n    </ion-card-header> -->\n    <ion-card-content>\n      <ion-item>\n        <ion-icon name=\"document-outline\" slot=\"start\"></ion-icon>\n        <ion-label>Resume</ion-label>\n        <ion-button\n          fill=\"clear\"\n          href=\"{{ relatedAccount.resumeFile }}\"\n          target=\"_blank\"\n        >\n          Download\n        </ion-button>\n      </ion-item>\n    </ion-card-content>\n  </ion-card>\n\n  <!-- Cover Letter -->\n  <ion-card *ngIf=\"relatedAccount?.coverLetterFile\">\n    <!-- <ion-card-header>\n      <ion-card-title>Cover Letter</ion-card-title>\n    </ion-card-header> -->\n    <ion-card-content>\n      <ion-item>\n        <ion-icon name=\"document-outline\" slot=\"start\"></ion-icon>\n        <ion-label>Cover Letter</ion-label>\n        <ion-button\n          fill=\"clear\"\n          href=\"{{ relatedAccount.coverLetterFile }}\"\n          target=\"_blank\"\n        >\n          Download\n        </ion-button>\n      </ion-item>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n\n<ion-footer>\n  <!-- Action Buttons -->\n  <ion-grid>\n    <ion-row>\n      <ion-col size=\"6\">\n        <ion-button expand=\"block\" color=\"medium\" (click)=\"copyEmail()\">\n          Copy Email\n        </ion-button>\n      </ion-col>\n      <ion-col size=\"6\">\n        <ion-button expand=\"block\" color=\"primary\" (click)=\"viewProfile()\">\n          View Profile\n        </ion-button>\n      </ion-col>\n    </ion-row>\n    <ion-row>\n      <ion-col size=\"6\">\n        <ion-button\n          expand=\"block\"\n          color=\"success\"\n          (click)=\"acceptApplication()\"\n        >\n          Accept\n        </ion-button>\n      </ion-col>\n      <ion-col size=\"6\">\n        <ion-button expand=\"block\" color=\"danger\" (click)=\"rejectApplication()\">\n          Reject\n        </ion-button>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</ion-footer>\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\n// src/app/modules/listings/pages/apply/apply.page.ts\n\nimport {Component, ElementRef, OnInit, ViewChild} from \"@angular/core\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"../../../../../state/app.state\";\nimport {selectAuthUser} from \"../../../../../state/selectors/auth.selectors\";\nimport {AuthUser} from \"../../../../../models/auth-user.model\";\nimport {Observable} from \"rxjs\";\nimport {take} from \"rxjs/operators\";\nimport * as ListingsActions from \"../../../../../state/actions/listings.actions\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {selectListingById} from \"../../../../../state/selectors/listings.selectors\";\nimport {Listing} from \"../../../../../models/listing.model\";\nimport {AlertController} from \"@ionic/angular\";\n\n@Component({\n  selector: \"app-apply\",\n  templateUrl: \"./apply.page.html\",\n  styleUrls: [\"./apply.page.scss\"],\n})\nexport class ApplyPage implements OnInit {\n  applyForm: FormGroup;\n  resumeFile: File | null = null;\n  coverLetterFile: File | null = null;\n  authUser$: Observable<AuthUser | null>;\n  listingId?: string;\n  listing$: Observable<Listing>;\n  @ViewChild(\"resumeInput\") resumeInput!: ElementRef<HTMLInputElement>;\n  @ViewChild(\"coverLetterInput\")\n  coverLetterInput!: ElementRef<HTMLInputElement>;\n  resumeFileName: string = \"\";\n  coverLetterFileName: string = \"\";\n\n  constructor(\n    private fb: FormBuilder,\n    private store: Store<AppState>,\n    private route: ActivatedRoute,\n    private alertController: AlertController,\n  ) {\n    this.applyForm = this.fb.group({\n      firstName: [\"\", [Validators.required, Validators.minLength(2)]],\n      lastName: [\"\", [Validators.required, Validators.minLength(2)]],\n      email: [\"\", [Validators.required, Validators.email]],\n      phone: [\"\", [Validators.required, Validators.minLength(7)]],\n      notes: [\"\"],\n    });\n\n    this.authUser$ = this.store.select(selectAuthUser);\n    this.listingId = this.route.snapshot.paramMap.get(\"id\") || \"\";\n    this.listing$ = this.store.select(selectListingById(this.listingId));\n  }\n\n  ngOnInit(): void {\n    this.authUser$.pipe(take(1)).subscribe((authUser) => {\n      if (authUser) {\n        const [firstName, ...lastNameParts] = (authUser.name || \"\").split(\" \");\n        const lastName = lastNameParts.join(\" \");\n\n        this.applyForm.patchValue({\n          firstName: firstName || \"\",\n          lastName: lastName || \"\",\n          email: authUser.email || \"\",\n          phone: authUser.phoneNumber || \"\",\n        });\n      }\n    });\n  }\n\n  onFileSelect(event: Event, type: \"resume\" | \"coverLetter\"): void {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n      if (file.type !== \"application/pdf\") {\n        this.showAlert(\"Invalid File\", \"Please upload a valid PDF file.\");\n        input.value = \"\"; // Reset the input\n        return;\n      }\n      if (file.size > 10 * 1024 * 1024) {\n        this.showAlert(\"File Too Large\", \"File size must not exceed 10 MB.\");\n        input.value = \"\"; // Reset the input\n        return;\n      }\n\n      if (type === \"resume\") {\n        this.resumeFile = file;\n        this.resumeFileName = file.name;\n      } else if (type === \"coverLetter\") {\n        this.coverLetterFile = file;\n        this.coverLetterFileName = file.name;\n      }\n    }\n  }\n\n  formatPhoneNumber(event: any): void {\n    const input = event.target as HTMLInputElement;\n    let phone = input.value.replace(/\\D/g, \"\"); // Remove all non-numeric characters\n\n    if (phone.length > 3 && phone.length <= 6) {\n      phone = `(${phone.slice(0, 3)}) ${phone.slice(3)}`;\n    } else if (phone.length > 6) {\n      phone = `(${phone.slice(0, 3)}) ${phone.slice(3, 6)}-${phone.slice(6, 10)}`;\n    }\n\n    input.value = phone; // Update the input value\n  }\n\n  onSubmit(): void {\n    if (!this.applyForm.valid) {\n      this.markFormAsDirty(this.applyForm);\n      this.showAlert(\n        \"Form Invalid\",\n        \"Please fill out all required fields correctly.\",\n      );\n      return;\n    }\n\n    this.authUser$.pipe(take(1)).subscribe((authUser) => {\n      if (!authUser) {\n        this.showAlert(\n          \"Error\",\n          \"Unable to fetch user information. Please try again.\",\n        );\n        return;\n      }\n\n      const relatedAccount = {\n        ...this.applyForm.value,\n        id: authUser.uid, // Populate the id\n        name: authUser.name,\n        iconImage: authUser.iconImage,\n        heroImage: authUser.heroImage,\n        accountId: authUser.uid, // Populate the accountId\n        resumeFile: this.resumeFile,\n        coverLetterFile: this.coverLetterFile,\n        listingId: this.listingId,\n        type: \"application\",\n        status: \"applied\",\n      };\n\n      // Dispatch action to submit application\n      this.store.dispatch(ListingsActions.submitApplication({relatedAccount}));\n\n      this.showAlert(\n        \"Application Submitted\",\n        \"Your application has been submitted successfully!\",\n      );\n      console.log(\"Form Submitted!\", relatedAccount);\n    });\n  }\n\n  markFormAsDirty(formGroup: FormGroup): void {\n    Object.keys(formGroup.controls).forEach((key) => {\n      const control = formGroup.get(key);\n      if (control) {\n        control.markAsTouched();\n        control.updateValueAndValidity();\n      }\n    });\n  }\n\n  async showAlert(header: string, message: string): Promise<void> {\n    const alert = await this.alertController.create({\n      header,\n      message,\n      buttons: [\"OK\"],\n    });\n\n    await alert.present();\n  }\n}\n","<!--\nNonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\nCopyright (C) 2023  ASCENDynamics NFP\n\nThis file is part of Nonprofit Social Networking Platform.\n\nNonprofit Social Networking Platform is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nNonprofit Social Networking Platform is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n-->\n<!-- src/app/modules/listings/pages/apply/apply.page.html -->\n\n<ion-header>\n  <app-header\n    [defaultHref]=\"'/listings/' + listingId\"\n    [title]=\"'Apply for ' + (listing$ | async)?.title\"\n  ></app-header>\n</ion-header>\n\n<ion-content>\n  <form [formGroup]=\"applyForm\" (ngSubmit)=\"onSubmit()\">\n    <ion-grid>\n      <!-- Application Details Card -->\n      <ion-row>\n        <ion-col size=\"12\">\n          <ion-card>\n            <ion-card-header>\n              <ion-card-title>Apply to this Opportunity</ion-card-title>\n              <ion-card-subtitle>\n                Please complete the form below to apply to this position\n              </ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content\n              ><ion-grid>\n                <!-- First Name -->\n                <ion-row>\n                  <ion-col size=\"12\">\n                    <ion-item lines=\"none\">\n                      <ion-input\n                        formControlName=\"firstName\"\n                        label=\"First Name\"\n                        label-placement=\"floating\"\n                        fill=\"outline\"\n                        placeholder=\"Enter your first name\"\n                      ></ion-input>\n                    </ion-item>\n                    <ion-note\n                      *ngIf=\"applyForm.get('firstName')?.touched && applyForm.get('firstName')?.errors?.['required']\"\n                      color=\"danger\"\n                    >\n                      First Name is required.\n                    </ion-note>\n                    <ion-note\n                      *ngIf=\"applyForm.get('firstName')?.touched && applyForm.get('firstName')?.errors?.['minlength']\"\n                      color=\"danger\"\n                    >\n                      First Name must be at least 2 characters long.\n                    </ion-note>\n                  </ion-col>\n                </ion-row>\n\n                <!-- Last Name -->\n                <ion-row>\n                  <ion-col size=\"12\">\n                    <ion-item lines=\"none\">\n                      <ion-input\n                        formControlName=\"lastName\"\n                        label=\"Last Name\"\n                        label-placement=\"floating\"\n                        fill=\"outline\"\n                        placeholder=\"Enter your last name\"\n                      ></ion-input>\n                    </ion-item>\n                    <ion-note\n                      *ngIf=\"applyForm.get('lastName')?.touched && applyForm.get('lastName')?.errors?.['required']\"\n                      color=\"danger\"\n                    >\n                      Last Name is required.\n                    </ion-note>\n                    <ion-note\n                      *ngIf=\"applyForm.get('lastName')?.touched && applyForm.get('lastName')?.errors?.['minlength']\"\n                      color=\"danger\"\n                    >\n                      Last Name must be at least 2 characters long.\n                    </ion-note>\n                  </ion-col>\n                </ion-row>\n\n                <!-- Email -->\n                <ion-row>\n                  <ion-col size=\"12\">\n                    <ion-item lines=\"none\">\n                      <ion-input\n                        formControlName=\"email\"\n                        type=\"email\"\n                        label=\"Email Address\"\n                        label-placement=\"floating\"\n                        fill=\"outline\"\n                        placeholder=\"Enter your email address\"\n                      ></ion-input>\n                    </ion-item>\n                    <ion-note\n                      *ngIf=\"applyForm.get('email')?.touched && applyForm.get('email')?.errors?.['required']\"\n                      color=\"danger\"\n                    >\n                      Email is required.\n                    </ion-note>\n                    <ion-note\n                      *ngIf=\"applyForm.get('email')?.touched && applyForm.get('email')?.errors?.['email']\"\n                      color=\"danger\"\n                    >\n                      Please enter a valid email address.\n                    </ion-note>\n                  </ion-col>\n                </ion-row>\n\n                <!-- Phone -->\n                <ion-row>\n                  <ion-col size=\"12\">\n                    <ion-item lines=\"none\">\n                      <ion-input\n                        formControlName=\"phone\"\n                        type=\"tel\"\n                        label=\"Phone Number\"\n                        label-placement=\"floating\"\n                        fill=\"outline\"\n                        placeholder=\"Enter your phone number\"\n                        (ionInput)=\"formatPhoneNumber($event)\"\n                      ></ion-input>\n                    </ion-item>\n                    <ion-note\n                      *ngIf=\"applyForm.get('phone')?.touched && applyForm.get('phone')?.errors?.['required']\"\n                      color=\"danger\"\n                    >\n                      Phone Number is required.\n                    </ion-note>\n                    <ion-note\n                      *ngIf=\"applyForm.get('phone')?.touched && applyForm.get('phone')?.errors?.['minlength']\"\n                      color=\"danger\"\n                    >\n                      Phone Number must be at least 7 characters long.\n                    </ion-note>\n                  </ion-col>\n                </ion-row>\n\n                <!-- Notes Textarea -->\n                <ion-row>\n                  <ion-col size=\"12\">\n                    <ion-item lines=\"none\">\n                      <ion-textarea\n                        formControlName=\"notes\"\n                        label=\"Notes\"\n                        label-placement=\"floating\"\n                        fill=\"outline\"\n                        placeholder=\"Enter any additional information\"\n                        auto-grow=\"true\"\n                      ></ion-textarea>\n                    </ion-item>\n                  </ion-col>\n                </ion-row>\n              </ion-grid>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n      </ion-row>\n\n      <!-- Resume Upload -->\n      <ion-row>\n        <ion-col size=\"12\">\n          <ion-card>\n            <ion-card-header>\n              <ion-card-title>Resume (if applicable)</ion-card-title>\n              <ion-card-subtitle>\n                Resume must be uploaded in PDF format (Max 10 MB)\n              </ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content>\n              <ion-item lines=\"none\">\n                <ion-label>Upload Resume</ion-label>\n                <ion-button fill=\"outline\" (click)=\"resumeInput.click()\">\n                  Choose File\n                </ion-button>\n                <input\n                  type=\"file\"\n                  accept=\"application/pdf\"\n                  (change)=\"onFileSelect($event, 'resume')\"\n                  #resumeInput\n                  hidden\n                />\n              </ion-item>\n              <ion-text *ngIf=\"resumeFileName\">\n                Selected File: {{ resumeFileName }}\n              </ion-text>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n      </ion-row>\n\n      <!-- Cover Letter Upload -->\n      <ion-row>\n        <ion-col size=\"12\">\n          <ion-card>\n            <ion-card-header>\n              <ion-card-title>Cover Letter (if applicable)</ion-card-title>\n              <ion-card-subtitle>Maximum size: 10 MB</ion-card-subtitle>\n            </ion-card-header>\n            <ion-card-content>\n              <ion-item lines=\"none\">\n                <ion-label>Upload Cover Letter</ion-label>\n                <ion-button fill=\"outline\" (click)=\"coverLetterInput.click()\">\n                  Choose File\n                </ion-button>\n                <input\n                  type=\"file\"\n                  accept=\"application/pdf\"\n                  (change)=\"onFileSelect($event, 'coverLetter')\"\n                  #coverLetterInput\n                  hidden\n                />\n              </ion-item>\n              <ion-text *ngIf=\"coverLetterFileName\">\n                Selected File: {{ coverLetterFileName }}\n              </ion-text>\n            </ion-card-content>\n          </ion-card>\n        </ion-col>\n      </ion-row>\n\n      <!-- Submit Button -->\n      <ion-row>\n        <ion-col>\n          <ion-button expand=\"block\" color=\"primary\" type=\"submit\">\n            Submit\n          </ion-button>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </form>\n</ion-content>\n","import {Pipe, PipeTransform} from \"@angular/core\";\nimport {Address} from \"../../models/account.model\";\n\n@Pipe({\n  name: \"formatAddress\",\n})\nexport class FormatAddressPipe implements PipeTransform {\n  transform(address: Address): string {\n    if (!address) return \"\";\n\n    const parts = [\n      address.street,\n      address.city,\n      address.state,\n      address.country,\n      address.zipcode,\n    ].filter((part) => part);\n\n    return parts.join(\", \");\n  }\n}\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\nimport {Pipe, PipeTransform} from \"@angular/core\";\n\n@Pipe({\n  name: \"phoneFormat\",\n})\nexport class PhoneFormatPipe implements PipeTransform {\n  transform(phoneNumber: string): string {\n    const cleaned = (\"\" + phoneNumber).replace(/\\D/g, \"\");\n    const match = cleaned.match(/^(1|)?(\\d{3})(\\d{3})(\\d{4})$/);\n    if (match) {\n      const intlCode = match[1] ? \"+1 \" : \"\";\n      return [intlCode, \"(\", match[2], \") \", match[3], \"-\", match[4]].join(\"\");\n    }\n    return \"\";\n  }\n}\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\nimport {Pipe, PipeTransform} from \"@angular/core\";\nimport {Timestamp} from \"firebase/firestore\";\n\n@Pipe({\n  name: \"timestamp\",\n})\nexport class TimestampPipe implements PipeTransform {\n  transform(value: Timestamp | any): Date | null {\n    if (!value) return null;\n\n    // Handle Firestore Timestamp\n    if (value instanceof Timestamp) {\n      return value.toDate();\n    }\n\n    // Handle server timestamp\n    if (value.seconds) {\n      return new Timestamp(value.seconds, value.nanoseconds).toDate();\n    }\n\n    return null;\n  }\n}\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\n// src/app/state/listings/listings.effects.ts\n\nimport {Injectable} from \"@angular/core\";\nimport {Actions, createEffect, ofType} from \"@ngrx/effects\";\nimport {\n  catchError,\n  debounceTime,\n  from,\n  map,\n  mergeMap,\n  of,\n  withLatestFrom,\n  filter,\n  take,\n  switchMap,\n} from \"rxjs\";\nimport {FirestoreService} from \"../../core/services/firestore.service\";\nimport * as ListingsActions from \"../actions/listings.actions\";\nimport {Listing} from \"../../models/listing.model\";\nimport {serverTimestamp} from \"@angular/fire/firestore\";\nimport {ListingRelatedAccount} from \"../../models/listing-related-account.model\";\nimport {Router} from \"@angular/router\";\nimport {ToastController} from \"@ionic/angular\";\nimport {Store} from \"@ngrx/store\";\nimport {AppState} from \"../app.state\";\nimport {\n  selectListingById,\n  selectAreListingsFresh,\n  selectAreRelatedAccountsFresh,\n} from \"../selectors/listings.selectors\";\n\n@Injectable()\nexport class ListingsEffects {\n  constructor(\n    private actions$: Actions,\n    private firestoreService: FirestoreService,\n    private router: Router,\n    private toastController: ToastController,\n    private store: Store<AppState>,\n  ) {}\n\n  // Create a new listing\n  createListing$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ListingsActions.createListing),\n      mergeMap(({listing}) => {\n        const newListing = {\n          ...listing,\n          createdAt: serverTimestamp(),\n          lastModifiedAt: serverTimestamp(),\n        };\n        return from(\n          this.firestoreService.addDocument(\"listings\", newListing),\n        ).pipe(\n          map((docId) => {\n            this.router.navigate([`/listings/${docId}`]);\n            this.showToast(\"Listing created successfully\", \"success\");\n            return ListingsActions.createListingSuccess({\n              listing: {...newListing, id: docId},\n            });\n          }),\n          catchError((error) => {\n            this.showToast(`Error: ${error.message}`, \"danger\");\n            return of(\n              ListingsActions.createListingFailure({error: error.message}),\n            );\n          }),\n        );\n      }),\n    ),\n  );\n\n  // Load all listings if not fresh\n  loadListings$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ListingsActions.loadListings),\n      withLatestFrom(this.store.select(selectAreListingsFresh)),\n      filter(([_, areFresh]) => !areFresh), // Only load if not fresh\n      switchMap(() =>\n        this.firestoreService\n          .getCollectionWithCondition<Listing>(\n            \"listings\",\n            \"status\",\n            \"==\",\n            \"active\",\n          )\n          .pipe(\n            map((listings) => ListingsActions.loadListingsSuccess({listings})),\n            catchError((error) =>\n              of(ListingsActions.loadListingsFailure({error: error.message})),\n            ),\n          ),\n      ),\n    ),\n  );\n\n  // Load a single listing by ID if not already in the store\n  loadListingById$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ListingsActions.loadListingById),\n      mergeMap(({id}) =>\n        this.store.select(selectListingById(id)).pipe(\n          take(1),\n          mergeMap((listing) => {\n            if (listing) {\n              // Listing already loaded\n              return of(ListingsActions.loadListingByIdSuccess({listing}));\n            } else {\n              // Fetch from Firestore\n              return this.firestoreService\n                .getDocument<Listing>(\"listings\", id)\n                .pipe(\n                  map((fetchedListing) => {\n                    if (!fetchedListing) {\n                      throw new Error(\"Listing not found\");\n                    }\n                    return ListingsActions.loadListingByIdSuccess({\n                      listing: fetchedListing,\n                    });\n                  }),\n                  catchError((error) =>\n                    of(\n                      ListingsActions.loadListingByIdFailure({\n                        error: error.message,\n                      }),\n                    ),\n                  ),\n                );\n            }\n          }),\n        ),\n      ),\n    ),\n  );\n\n  // Update an existing listing\n  updateListing$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ListingsActions.updateListing),\n      debounceTime(300),\n      mergeMap(({listing}) => {\n        const updatedListing = {\n          ...listing,\n          lastModifiedAt: serverTimestamp(),\n        };\n        return from(\n          this.firestoreService.updateDocument(\n            \"listings\",\n            listing.id,\n            updatedListing,\n          ),\n        ).pipe(\n          map(() => {\n            this.router.navigate([`/listings/${listing.id}`]);\n            this.showToast(\"Listing updated successfully\", \"success\");\n            return ListingsActions.updateListingSuccess({\n              listing: updatedListing,\n            });\n          }),\n          catchError((error) => {\n            this.showToast(\n              `Error updating listing: ${error.message}`,\n              \"danger\",\n            );\n            return of(\n              ListingsActions.updateListingFailure({error: error.message}),\n            );\n          }),\n        );\n      }),\n    ),\n  );\n\n  // Delete a listing\n  deleteListing$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ListingsActions.deleteListing),\n      mergeMap(({id}) =>\n        from(this.firestoreService.deleteDocument(\"listings\", id)).pipe(\n          map(() => {\n            this.showToast(\"Listing deleted successfully\", \"success\");\n            return ListingsActions.deleteListingSuccess({id});\n          }),\n          catchError((error) => {\n            this.showToast(\n              `Error deleting listing: ${error.message}`,\n              \"danger\",\n            );\n            return of(\n              ListingsActions.deleteListingFailure({error: error.message}),\n            );\n          }),\n        ),\n      ),\n    ),\n  );\n\n  // Submit application (related to a listing)\n  submitApplication$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ListingsActions.submitApplication),\n      mergeMap(({relatedAccount}) =>\n        from(this.submitApplicationToFirestore(relatedAccount)).pipe(\n          map(() => {\n            this.router.navigate([\"/listings\", relatedAccount.listingId]);\n            this.showToast(\"Application submitted successfully\", \"success\");\n            return ListingsActions.submitApplicationSuccess();\n          }),\n          catchError((error) => {\n            this.showToast(\n              `Error submitting application: ${error.message}`,\n              \"danger\",\n            );\n            return of(\n              ListingsActions.submitApplicationFailure({error: error.message}),\n            );\n          }),\n        ),\n      ),\n    ),\n  );\n\n  // Load related accounts for a listing if not fresh\n  loadListingRelatedAccounts$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ListingsActions.loadListingRelatedAccounts),\n      mergeMap(({listingId}) =>\n        this.store.select(selectAreRelatedAccountsFresh(listingId)).pipe(\n          take(1),\n          filter((areFresh) => !areFresh), // Only load if stale\n          switchMap(() =>\n            this.firestoreService\n              .getDocuments<ListingRelatedAccount>(\n                `listings/${listingId}/relatedAccounts`,\n              )\n              .pipe(\n                map((relatedAccounts) => {\n                  this.showToast(\"Applications loaded successfully\", \"success\");\n                  return ListingsActions.loadListingRelatedAccountsSuccess({\n                    listingId,\n                    relatedAccounts,\n                  });\n                }),\n                catchError((error) => {\n                  this.showToast(\n                    `Error loading applications: ${error.message}`,\n                    \"danger\",\n                  );\n                  return of(\n                    ListingsActions.loadListingRelatedAccountsFailure({\n                      listingId,\n                      error: error.message,\n                    }),\n                  );\n                }),\n              ),\n          ),\n        ),\n      ),\n    ),\n  );\n\n  // Helper method for submitting an application\n  private async submitApplicationToFirestore(\n    relatedAccount: ListingRelatedAccount,\n  ): Promise<void> {\n    try {\n      const applicationId = relatedAccount.id;\n\n      // Upload files if present\n      const resumeFile = relatedAccount.resumeFile\n        ? await this.firestoreService.uploadFile(\n            `accounts/${applicationId}/listing/${relatedAccount.listingId}/resume.pdf`,\n            relatedAccount.resumeFile,\n          )\n        : null;\n\n      const coverLetterFile = relatedAccount.coverLetterFile\n        ? await this.firestoreService.uploadFile(\n            `accounts/${applicationId}/listing/${relatedAccount.listingId}/coverLetter.pdf`,\n            relatedAccount.coverLetterFile,\n          )\n        : null;\n\n      // Save application data using setDocument\n      await this.firestoreService.setDocument(\n        `listings/${relatedAccount.listingId}/relatedAccounts/${applicationId}`,\n        {\n          id: applicationId,\n          name: relatedAccount.name,\n          firstName: relatedAccount.firstName,\n          lastName: relatedAccount.lastName,\n          email: relatedAccount.email,\n          phone: relatedAccount.phone,\n          notes: relatedAccount.notes,\n          resumeFile,\n          coverLetterFile,\n          listingId: relatedAccount.listingId,\n          applicationDate: serverTimestamp(),\n          createdAt: serverTimestamp(),\n          lastModifiedAt: serverTimestamp(),\n          iconImage: relatedAccount.iconImage,\n          accountId: applicationId,\n          type: \"application\",\n          status: \"applied\",\n        },\n        {merge: true},\n      );\n    } catch (error) {\n      console.error(\"Error submitting application to Firestore:\", error);\n      throw new Error(\"Failed to submit application. Please try again later.\");\n    }\n  }\n\n  updateRelatedAccount$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ListingsActions.updateRelatedAccount),\n      mergeMap(({listingId, relatedAccount}) =>\n        from(\n          this.firestoreService.updateDocument(\n            `listings/${listingId}/relatedAccounts`,\n            relatedAccount.id,\n            relatedAccount,\n          ),\n        ).pipe(\n          map(() =>\n            ListingsActions.updateRelatedAccountSuccess({\n              listingId,\n              relatedAccount,\n            }),\n          ),\n          catchError((error) =>\n            of(\n              ListingsActions.updateRelatedAccountFailure({\n                error: error.message,\n              }),\n            ),\n          ),\n        ),\n      ),\n    ),\n  );\n\n  private showToast(message: string, color: string) {\n    this.toastController\n      .create({\n        message,\n        duration: 2000,\n        color,\n      })\n      .then((toast) => toast.present());\n  }\n}\n","/***********************************************************************************************\n* Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.\n* Copyright (C) 2023  ASCENDynamics NFP\n*\n* This file is part of Nonprofit Social Networking Platform.\n*\n* Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify\n* it under the terms of the GNU Affero General Public License as published\n* by the Free Software Foundation, either version 3 of the License, or\n* (at your option) any later version.\n\n* Nonprofit Social Networking Platform is distributed in the hope that it will be useful,\n* but WITHOUT ANY WARRANTY; without even the implied warranty of\n* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n* GNU Affero General Public License for more details.\n\n* You should have received a copy of the GNU Affero General Public License\n* along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.\n***********************************************************************************************/\n// src/app/state/listings/listings.selectors.ts\n\nimport {createFeatureSelector, createSelector} from \"@ngrx/store\";\nimport {ListingsState} from \"../reducers/listings.reducer\";\n\n// TTL in milliseconds (e.g., 5 minutes)\nconst LISTINGS_TTL = 5 * 60 * 1000; // 5 minutes\n\n// Utility: Check if data is stale\nfunction isStale(lastUpdated: number | null, ttl: number): boolean {\n  if (!lastUpdated) return true; // If never updated, consider it stale\n  const now = Date.now();\n  return now - lastUpdated > ttl;\n}\n\n// Feature Selector\nexport const selectListingsState =\n  createFeatureSelector<ListingsState>(\"listings\");\n\n// Selectors for related accounts\nexport const selectRelatedAccountsByListingId = (listingId: string) =>\n  createSelector(\n    selectListingsState,\n    (state: ListingsState) => state.relatedAccounts[listingId] || [],\n  );\n\n// Select all listings\nexport const selectAllListings = createSelector(\n  selectListingsState,\n  (state: ListingsState) => Object.values(state.entities),\n);\n\n// Select a specific listing by ID\nexport const selectListingById = (listingId: string) =>\n  createSelector(\n    selectListingsState,\n    (state: ListingsState) => state.entities[listingId],\n  );\n\n// Select the currently selected listing\nexport const selectSelectedListing = createSelector(\n  selectListingsState,\n  (state: ListingsState) =>\n    state.selectedListingId\n      ? state.entities[state.selectedListingId]\n      : undefined,\n);\n\n// Select loading state\nexport const selectLoading = createSelector(\n  selectListingsState,\n  (state: ListingsState) => state.loading,\n);\n\n// Select error state\nexport const selectError = createSelector(\n  selectListingsState,\n  (state: ListingsState) => state.error,\n);\n\n// Select filter type\nexport const selectFilterType = createSelector(\n  selectListingsState,\n  (state: ListingsState) => state.filterType,\n);\n\n// Select search query\nexport const selectSearchQuery = createSelector(\n  selectListingsState,\n  (state: ListingsState) => state.searchQuery,\n);\n\n// Select filtered listings\nexport const selectFilteredListings = createSelector(\n  selectAllListings,\n  selectFilterType,\n  selectSearchQuery,\n  (listings, filterType, searchQuery) => {\n    let filteredListings = listings;\n\n    if (filterType && filterType !== \"all\") {\n      filteredListings = filteredListings.filter(\n        (listing) => listing.type === filterType,\n      );\n    }\n\n    if (searchQuery) {\n      const queryLower = searchQuery.toLowerCase();\n      filteredListings = filteredListings.filter(\n        (listing) =>\n          listing.title.toLowerCase().includes(queryLower) ||\n          listing.description.toLowerCase().includes(queryLower),\n      );\n    }\n\n    return filteredListings;\n  },\n);\n\n// Cache and Freshness Selectors\nexport const selectListingsLastUpdated = createSelector(\n  selectListingsState,\n  (state: ListingsState) => state.listingsLastUpdated,\n);\n\nexport const selectRelatedAccountsLastUpdated = (listingId: string) =>\n  createSelector(\n    selectListingsState,\n    (state: ListingsState) =>\n      state.relatedAccountsLastUpdated[listingId] || null,\n  );\n\n// Determine if listings are fresh\nexport const selectAreListingsFresh = createSelector(\n  selectListingsLastUpdated,\n  (listingsLastUpdated) => !isStale(listingsLastUpdated, LISTINGS_TTL),\n);\n\n// Determine if related accounts for a listing are fresh\nexport const selectAreRelatedAccountsFresh = (listingId: string) =>\n  createSelector(\n    selectRelatedAccountsLastUpdated(listingId),\n    (relatedAccountsLastUpdated) =>\n      !isStale(relatedAccountsLastUpdated, LISTINGS_TTL),\n  );\n"],"names":["EventEmitter","FormGroup","Validators","Timestamp","filter","first","switchMap","take","tap","selectAuthUser","AccountActions","selectAccountById","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","ListingFormComponent_ng_container_1_ion_note_10_span_1_Template","ListingFormComponent_ng_container_1_ion_note_10_span_2_Template","ListingFormComponent_ng_container_1_ion_note_10_span_3_Template","ɵɵadvance","ɵɵproperty","tmp_2_0","ctx_r0","listingForm","get","errors","tmp_3_0","tmp_4_0","ListingFormComponent_ng_container_1_ion_note_13_span_1_Template","ListingFormComponent_ng_container_1_ion_note_13_span_2_Template","ListingFormComponent_ng_container_1_ion_note_13_span_3_Template","type_r2","ɵɵtextInterpolate1","ɵɵpipeBind1","ListingFormComponent_ng_container_1_ion_note_27_span_1_Template","ListingFormComponent_ng_container_1_ion_note_27_span_2_Template","ListingFormComponent_ng_container_1_ion_note_27_span_3_Template","ListingFormComponent_ng_container_1_ion_note_37_span_1_Template","ListingFormComponent_ng_container_1_ion_note_37_span_2_Template","ListingFormComponent_ng_container_1_ion_note_37_span_3_Template","ɵɵelementContainerStart","ɵɵelement","ListingFormComponent_ng_container_1_ion_note_10_Template","ListingFormComponent_ng_container_1_ion_note_13_Template","ListingFormComponent_ng_container_1_ion_select_option_17_Template","ListingFormComponent_ng_container_1_ion_note_18_Template","ListingFormComponent_ng_container_1_ion_note_27_Template","ListingFormComponent_ng_container_1_ion_note_37_Template","ListingFormComponent_ng_container_1_ion_note_40_Template","ListingFormComponent_ng_container_1_ion_note_44_Template","ListingFormComponent_ng_container_1_ion_note_48_Template","ListingFormComponent_ng_container_1_ion_note_51_Template","ɵɵclassProp","tmp_1_0","invalid","touched","valid","tmp_5_0","tmp_6_0","tmp_7_0","listingTypes","tmp_9_0","tmp_10_0","tmp_11_0","tmp_12_0","tmp_13_0","tmp_14_0","tmp_15_0","tmp_16_0","tmp_17_0","tmp_18_0","tmp_20_0","tmp_21_0","tmp_23_0","level_r5","ListingFormComponent_ng_container_2_div_6_ion_select_option_6_Template","ɵɵlistener","ListingFormComponent_ng_container_2_div_6_Template_ion_button_click_13_listener","i_r6","ɵɵrestoreView","_r4","index","ɵɵnextContext","ɵɵresetView","removeArrayItem","skillLevels","ListingFormComponent_ng_container_2_div_15_Template_ion_button_click_5_listener","i_r8","_r7","ListingFormComponent_ng_container_2_div_24_Template_ion_button_click_5_listener","i_r10","_r9","ListingFormComponent_ng_container_2_div_33_Template_ion_button_click_5_listener","i_r12","_r11","ListingFormComponent_ng_container_2_div_47_Template_ion_button_click_7_listener","i_r14","_r13","ListingFormComponent_ng_container_2_div_56_Template_ion_button_click_24_listener","i_r16","_r15","ListingFormComponent_ng_container_2_div_65_Template_ion_button_click_15_listener","i_r18","_r17","ListingFormComponent_ng_container_2_div_6_Template","ListingFormComponent_ng_container_2_Template_ion_button_click_7_listener","_r3","addSkill","ListingFormComponent_ng_container_2_div_15_Template","ListingFormComponent_ng_container_2_Template_ion_button_click_16_listener","addArrayItem","ListingFormComponent_ng_container_2_div_24_Template","ListingFormComponent_ng_container_2_Template_ion_button_click_25_listener","ListingFormComponent_ng_container_2_div_33_Template","ListingFormComponent_ng_container_2_Template_ion_button_click_34_listener","ListingFormComponent_ng_container_2_div_47_Template","ListingFormComponent_ng_container_2_Template_ion_button_click_48_listener","addEmail","ListingFormComponent_ng_container_2_div_56_Template","ListingFormComponent_ng_container_2_Template_ion_button_click_57_listener","addAddress","ListingFormComponent_ng_container_2_div_65_Template","ListingFormComponent_ng_container_2_Template_ion_button_click_66_listener","addPhoneNumber","getFormArray","controls","ListingFormComponent_ion_button_5_Template_ion_button_click_0_listener","_r19","goToPreviousStep","ListingFormComponent_ion_button_7_Template_ion_button_click_0_listener","_r20","goToNextStep","listing","id","ListingFormComponent","constructor","fb","store","formSubmit","currentStep","authUser","initForm","group","title","required","minLength","maxLength","description","type","organization","remote","timeCommitment","hoursPerWeek","min","max","duration","schedule","startDate","endDate","isFlexible","validator","dateRangeValidator","skills","array","requirements","responsibilities","benefits","contactInformation","emails","phoneNumbers","addresses","_group$get","_group$get2","start","value","end","Date","dateRange","ngOnInit","_this$listing$timeCom","_this$listing$timeCom2","formValue","toDate","toISOString","patchValue","initializeFormArrays","select","pipe","user","uid","dispatch","loadAccount","accountId","account","subscribe","initializeFormFromAccount","_account$contactInfor","_account$contactInfor2","_account$contactInfor3","name","forEach","email","emailForm","push","phone","phoneForm","countryCode","number","address","addressForm","street","city","state","country","zipcode","isPrimaryAddress","markFormGroupTouched","formGroup","Object","values","control","markAsTouched","_listing$skills","_listing$requirements","_listing$responsibili","_listing$benefits","_listing$contactInfor","_listing$contactInfor2","_listing$contactInfor3","clear","skill","skillForm","level","req","resp","benefit","isEmergencyNumber","arrayName","removeAt","submitForm","status","_this$listing","fromDate","iconImage","heroImage","lastModifiedBy","emit","onSubmit","markAllAsTouched","_this$listing2","pattern","getProgress","ɵɵdirectiveInject","i1","FormBuilder","i2","Store","selectors","inputs","outputs","decls","vars","consts","template","ListingFormComponent_Template","rf","ctx","ListingFormComponent_Template_form_ngSubmit_0_listener","ListingFormComponent_ng_container_1_Template","ListingFormComponent_ng_container_2_Template","ListingFormComponent_ion_button_5_Template","ListingFormComponent_ion_button_7_Template","ListingFormComponent_ion_button_8_Template","RouterModule","ListingsPage","ListingDetailPage","ListingEditPage","ListingCreatePage","ApplicantsPage","ApplyPage","routes","path","component","ListingRoutingModule","forChild","imports","exports","CommonModule","IonicModule","StoreModule","EffectsModule","listingsReducer","ListingsEffects","FormsModule","ReactiveFormsModule","TimestampPipe","FormatAddressPipe","HeroComponent","PhoneFormatPipe","SharedModule","ApplicantDetailsModalComponent","ListingModule","forFeature","declarations","StoreFeatureModule","EffectsFeatureModule","ListingActions","createdBy","createListing","ListingCreatePage_Template","ListingCreatePage_Template_app_listing_form_formSubmit_7_listener","$event","ɵɵsanitizeUrl","ɵɵpureFunction1","_c0","_c1","_c2","HeroComponent_div_34_ion_button_1_Template","HeroComponent_div_34_ion_button_2_Template","HeroComponent_div_34_ion_button_3_Template","isOwner","showButtons","getCities","_this$listing$contact","length","map","join","HeroComponent_Template","HeroComponent_div_5_Template","HeroComponent_div_34_Template","ɵɵtextInterpolate","combineLatest","ListingsActions","selectListingById","serverTimestamp","responsibility_r1","ListingDetailPage_ng_container_3_ion_card_16_div_7_Template","listing_r2","requirement_r3","ListingDetailPage_ng_container_3_ion_card_18_div_7_Template","benefit_r4","ListingDetailPage_ng_container_3_ion_card_20_div_7_Template","ListingDetailPage_ng_container_3_ion_card_23_div_7_ion_badge_6_Template","skill_r5","ListingDetailPage_ng_container_3_ion_card_23_div_7_Template","ListingDetailPage_ng_container_3_ion_card_46_div_7_ion_badge_9_Template","address_r6","ɵɵtextInterpolate2","ListingDetailPage_ng_container_3_ion_card_46_div_7_Template","ListingDetailPage_ng_container_3_ion_card_46_ion_badge_8_Template","email_r7","phone_r8","ListingDetailPage_ng_container_3_ion_card_48_div_7_Template","ListingDetailPage_ng_container_3_ion_card_48_div_8_Template","ListingDetailPage_ng_container_3_div_49_Template_ion_button_click_4_listener","ctx_r9","togglePublishStatus","ListingDetailPage_ng_container_3_ion_card_16_Template","ListingDetailPage_ng_container_3_ion_card_18_Template","ListingDetailPage_ng_container_3_ion_card_20_Template","ListingDetailPage_ng_container_3_ion_card_23_Template","ListingDetailPage_ng_container_3_div_44_Template","ListingDetailPage_ng_container_3_ion_card_46_Template","ListingDetailPage_ng_container_3_ion_card_48_Template","ListingDetailPage_ng_container_3_div_49_Template","isOwner$","undefined","route","alertController","listingId","snapshot","paramMap","listing$","loadListingById","deleteListing","_this","_asyncToGenerator","alert","create","header","message","buttons","text","role","handler","present","_this2","_ref","newStatus","updatedListing","lastModifiedAt","updateListing","_x","apply","arguments","ActivatedRoute","i3","AlertController","ListingDetailPage_Template","ListingDetailPage_ng_container_3_Template","of","router","authUser$","navigate","Router","ListingEditPage_Template","ListingEditPage_Template_app_listing_form_formSubmit_7_listener","selectFilteredListings","selectLoading","selectError","type_r1","ctx_r1","getIconForType","error_r3","getListingLocation","listing_r4","ListingsPage_ion_item_16_ion_badge_14_Template","ListingsPage_ion_item_16_p_15_Template","ɵɵpipeBind3","navCtrl","listings$","loading$","error$","loadListings","navigateForward","viewListing","filterListings","event","listingType","detail","searchListings","query","doRefresh","setTimeout","target","complete","primaryAddress","iconMap","volunteer","job","project","resource","service","all","internship","gig","toLowerCase","NavController","ListingsPage_Template","ListingsPage_Template_ion_searchbar_ionInput_3_listener","ListingsPage_Template_ion_segment_ionChange_5_listener","ListingsPage_ion_segment_button_6_Template","ListingsPage_Template_ion_refresher_ionRefresh_9_listener","ListingsPage_ng_container_11_Template","ListingsPage_ng_container_13_Template","ListingsPage_ion_item_16_Template","ListingsPage_ion_fab_18_Template","BehaviorSubject","selectRelatedAccountsByListingId","listing_r1","account_r4","applicationDate","ApplicantsPage_ion_list_7_ion_item_1_Template_ion_item_click_0_listener","$implicit","openApplicantDetailsModal","ApplicantsPage_ion_list_7_ion_item_1_img_2_Template","ApplicantsPage_ion_list_7_ion_item_1_h3_6_Template","ApplicantsPage_ion_list_7_ion_item_1_p_8_Template","ApplicantsPage_ion_list_7_ion_item_1_p_10_Template","ApplicantsPage_ion_list_7_ion_item_1_ion_badge_12_Template","firstName","lastName","ApplicantsPage_ion_list_7_ion_item_1_Template","paginatedAccounts$","error_r5","ɵɵtextInterpolate3","range_r6","total","ApplicantsPage_ng_container_15_ion_button_4_Template_ion_button_click_0_listener","page_r9","_r8","goToPage","pageData_r10","currentPage","ApplicantsPage_ng_container_15_ng_container_5_Template_ion_button_click_3_listener","ngIf","totalPages","ApplicantsPage_ng_container_15_Template_ion_button_click_2_listener","previousPage","ApplicantsPage_ng_container_15_ion_button_4_Template","ApplicantsPage_ng_container_15_ng_container_5_Template","ApplicantsPage_ng_container_15_Template_ion_button_click_6_listener","nextPage","pageNumbers","maxVisiblePages","modalController","currentPageSubject","currentPage$","asObservable","pageSize","relatedAccounts$","listings","loading","error","loadListingRelatedAccounts","totalItems$","accounts","totalPages$","totalItems","Math","ceil","startIndex","slice","pageNumbers$","startPage","floor","endPage","Array","from","_","i","currentPageStart$","currentPageEnd$","pagination$","currentPageRange$","openModal","relatedAccount","modal","componentProps","pageNumber","next","ModalController","ApplicantsPage_Template","ApplicantsPage_app_hero_3_Template","ApplicantsPage_ion_loading_5_Template","ApplicantsPage_ion_list_7_Template","ApplicantsPage_ion_text_9_Template","ApplicantsPage_ng_container_13_Template","ApplicantsPage_ng_container_15_Template","notes","ɵɵpropertyInterpolate","resumeFile","coverLetterFile","ApplicantDetailsModalComponent_ion_content_7_p_18_Template","ApplicantDetailsModalComponent_ion_content_7_p_19_Template","ApplicantDetailsModalComponent_ion_content_7_ion_card_20_Template","ApplicantDetailsModalComponent_ion_content_7_ion_card_21_Template","closeModal","dismiss","copyEmail","navigator","clipboard","writeText","showToast","rejectApplication","updateApplicationStatus","acceptApplication","viewProfile","successMessage","updatedAccount","updateRelatedAccount","toast","document","createElement","body","appendChild","ApplicantDetailsModalComponent_Template","ApplicantDetailsModalComponent_Template_ion_button_click_5_listener","ApplicantDetailsModalComponent_ion_content_7_Template","ApplicantDetailsModalComponent_Template_ion_button_click_12_listener","ApplicantDetailsModalComponent_Template_ion_button_click_15_listener","ApplicantDetailsModalComponent_Template_ion_button_click_19_listener","ApplicantDetailsModalComponent_Template_ion_button_click_22_listener","ctx_r2","resumeFileName","coverLetterFileName","applyForm","lastNameParts","split","phoneNumber","onFileSelect","input","files","file","showAlert","size","formatPhoneNumber","replace","markFormAsDirty","submitApplication","console","log","keys","key","updateValueAndValidity","i4","viewQuery","ApplyPage_Query","ApplyPage_Template_form_ngSubmit_4_listener","_r1","ApplyPage_ion_note_20_Template","ApplyPage_ion_note_21_Template","ApplyPage_ion_note_26_Template","ApplyPage_ion_note_27_Template","ApplyPage_ion_note_32_Template","ApplyPage_ion_note_33_Template","ApplyPage_Template_ion_input_ionInput_37_listener","ApplyPage_ion_note_38_Template","ApplyPage_ion_note_39_Template","ApplyPage_Template_ion_button_click_56_listener","resumeInput_r2","ɵɵreference","click","ApplyPage_Template_input_change_58_listener","ApplyPage_ion_text_60_Template","ApplyPage_Template_ion_button_click_73_listener","coverLetterInput_r4","ApplyPage_Template_input_change_75_listener","ApplyPage_ion_text_77_Template","tmp_8_0","transform","parts","part","pure","cleaned","match","intlCode","seconds","nanoseconds","createEffect","ofType","catchError","debounceTime","mergeMap","withLatestFrom","selectAreListingsFresh","selectAreRelatedAccountsFresh","actions$","firestoreService","toastController","createListing$","newListing","createdAt","addDocument","docId","createListingSuccess","createListingFailure","loadListings$","areFresh","getCollectionWithCondition","loadListingsSuccess","loadListingsFailure","loadListingById$","loadListingByIdSuccess","getDocument","fetchedListing","Error","loadListingByIdFailure","updateListing$","updateDocument","updateListingSuccess","updateListingFailure","deleteListing$","deleteDocument","deleteListingSuccess","deleteListingFailure","submitApplication$","submitApplicationToFirestore","submitApplicationSuccess","submitApplicationFailure","loadListingRelatedAccounts$","getDocuments","relatedAccounts","loadListingRelatedAccountsSuccess","loadListingRelatedAccountsFailure","updateRelatedAccount$","updateRelatedAccountSuccess","updateRelatedAccountFailure","applicationId","uploadFile","setDocument","merge","color","then","ɵɵinject","Actions","FirestoreService","ToastController","i5","factory","ɵfac","createFeatureSelector","createSelector","LISTINGS_TTL","isStale","lastUpdated","ttl","now","selectListingsState","selectAllListings","entities","selectSelectedListing","selectedListingId","selectFilterType","filterType","selectSearchQuery","searchQuery","filteredListings","queryLower","includes","selectListingsLastUpdated","listingsLastUpdated","selectRelatedAccountsLastUpdated","relatedAccountsLastUpdated"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}