# Nonprofit Social Networking Platform: Allowing Users and Organizations to Collaborate.
# Copyright (C) 2023  ASCENDynamics NFP

# This file is part of Nonprofit Social Networking Platform.

# Nonprofit Social Networking Platform is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# Nonprofit Social Networking Platform is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.

# You should have received a copy of the GNU Affero General Public License
# along with Nonprofit Social Networking Platform.  If not, see <https://www.gnu.org/licenses/>.
name: CI and PR Deployment

on:
  pull_request:
    branches:
      - main  # Trigger workflow on pull requests targeting the main branch

jobs:
  # Linting job
  lint:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: npm ci

      # Step 4: Run linting
      - name: Run Lint
        run: npm run lint

  # Build and test job
  build-and-test:
    runs-on: ubuntu-latest
    # needs: lint  # This job depends on the successful completion of the lint job

    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: |
          npm ci                            # Install root project dependencies
          npm ci --prefix functions         # Install functions dependencies

      # Step 4: Set Environment Variables
      - name: Set Environment Variables
        run: |
          echo "CI=true" >> $GITHUB_ENV
          echo "NODE_ENV=development" >> $GITHUB_ENV
          echo "FIREBASE_API_KEY=${{ secrets.DEV_FIREBASE_API_KEY }}" >> $GITHUB_ENV
          echo "FIREBASE_AUTH_DOMAIN=${{ secrets.DEV_FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV
          echo "FIREBASE_DATABASE_URL=${{ secrets.DEV_FIREBASE_DATABASE_URL }}" >> $GITHUB_ENV
          echo "FIREBASE_PROJECT_ID=${{ secrets.DEV_FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV
          echo "FIREBASE_STORAGE_BUCKET=${{ secrets.DEV_FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV
          echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.DEV_FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
          echo "FIREBASE_APP_ID=${{ secrets.DEV_FIREBASE_APP_ID }}" >> $GITHUB_ENV
          echo "FIREBASE_MEASUREMENT_ID=${{ secrets.DEV_FIREBASE_MEASUREMENT_ID }}" >> $GITHUB_ENV

      # Step 5: Build the project (Development)
      - name: Build Project
        run: npm run build:dev

      # Step 6: Build Firebase Functions
      - name: Build Firebase Functions
        run: npm run build --prefix functions

      # Step 7: Run Tests
      - name: Run Tests
        run: npm run test

  # Deploy to Firebase Preview
  deploy-preview:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}  # Only run for PRs from the same repo
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Step 3: Install Firebase CLI
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # Step 4: Authenticate to Firebase
        # Using Firebase Service Account
      - name: Authenticate to Firebase
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_ASCENDCOOPPLATFORM_DEV }}'

      # Step 5: Deploy to Firebase Preview Channel
      - name: Deploy to Firebase Preview Channel
        id: firebase-deploy
        run: |
          firebase hosting:channel:deploy pr${{ github.event.number }} \
            --project ${{ secrets.DEV_FIREBASE_PROJECT_ID }} \
            --only hosting \
            --json > firebase-deploy-output.json

      # Step 6: Extract Preview URL
      - name: Extract Preview URL
        run: |
          echo "PREVIEW_URL=$(cat firebase-deploy-output.json | jq -r '.result[].url')" >> $GITHUB_ENV

      # Step 7: Comment on PR with Preview URL
      - name: Comment on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ðŸš€ Preview URL: ${{ env.PREVIEW_URL }}
